{
	"id": "0bf64f9e41add87221a467d656dd569c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract/erc721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to owner address\r\n    mapping(uint256 => address) private _owners;\r\n\r\n    // Mapping owner address to token count\r\n    mapping(address => uint256) private _balances;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        require(owner != address(0), \"ERC721: invalid token ID\");\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        _requireMinted(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual override {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        require(to != owner, \"ERC721: approval to current owner\");\r\n\r\n        require(\r\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            \"ERC721: approve caller is not token owner or approved for all\"\r\n        );\r\n\r\n        _approve(to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        _requireMinted(tokenId);\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        //solhint-disable-next-line max-line-length\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\r\n\r\n        _transfer(from, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) public virtual override {\r\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\r\n        _safeTransfer(from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        _transfer(from, to, tokenId);\r\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\r\n        return _owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted (`_mint`),\r\n     * and stop existing when they are burned (`_burn`).\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return _ownerOf(tokenId) != address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal virtual {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) internal virtual {\r\n        _mint(to, tokenId);\r\n        require(\r\n            _checkOnERC721Received(address(0), to, tokenId, data),\r\n            \"ERC721: transfer to non ERC721Receiver implementer\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal virtual {\r\n        require(to != address(0), \"ERC721: mint to the zero address\");\r\n        require(!_exists(tokenId), \"ERC721: token already minted\");\r\n\r\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\r\n\r\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\r\n        require(!_exists(tokenId), \"ERC721: token already minted\");\r\n\r\n        unchecked {\r\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\r\n            // Given that tokens are minted one by one, it is impossible in practice that\r\n            // this ever happens. Might change if we allow batch minting.\r\n            // The ERC fails to describe this case.\r\n            _balances[to] += 1;\r\n        }\r\n\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(address(0), to, tokenId);\r\n\r\n        _afterTokenTransfer(address(0), to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n\r\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\r\n\r\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\r\n        owner = ERC721.ownerOf(tokenId);\r\n\r\n        // Clear approvals\r\n        delete _tokenApprovals[tokenId];\r\n\r\n        unchecked {\r\n            // Cannot overflow, as that would require more tokens to be burned/transferred\r\n            // out than the owner initially received through minting and transferring in.\r\n            _balances[owner] -= 1;\r\n        }\r\n        delete _owners[tokenId];\r\n\r\n        emit Transfer(owner, address(0), tokenId);\r\n\r\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) internal virtual {\r\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\r\n        require(to != address(0), \"ERC721: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, tokenId, 1);\r\n\r\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\r\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\r\n\r\n        // Clear approvals from the previous owner\r\n        delete _tokenApprovals[tokenId];\r\n\r\n        unchecked {\r\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\r\n            // `from`'s balance is the number of token held, which is at least one before the current\r\n            // transfer.\r\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\r\n            // all 2**256 token ids to be minted, which in practice is impossible.\r\n            _balances[from] -= 1;\r\n            _balances[to] += 1;\r\n        }\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(from, to, tokenId);\r\n\r\n        _afterTokenTransfer(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function _approve(address to, uint256 tokenId) internal virtual {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal virtual {\r\n        require(owner != operator, \"ERC721: approve to caller\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` has not been minted yet.\r\n     */\r\n    function _requireMinted(uint256 tokenId) internal view virtual {\r\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\r\n     * The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) private returns (bool) {\r\n        if (to.isContract()) {\r\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\r\n                return retval == IERC721Receiver.onERC721Received.selector;\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\r\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\r\n     * - When `from` is zero, the tokens will be minted for `to`.\r\n     * - When `to` is zero, ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `batchSize` is non-zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 firstTokenId,\r\n        uint256 batchSize\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\r\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\r\n     * - When `from` is zero, the tokens were minted for `to`.\r\n     * - When `to` is zero, ``from``'s tokens were burned.\r\n     * - `from` and `to` are never both zero.\r\n     * - `batchSize` is non-zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 firstTokenId,\r\n        uint256 batchSize\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\r\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\r\n     * that `ownerOf(tokenId)` is `a`.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\r\n        _balances[account] += amount;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT COINBASE 0xB8 0xB1 SWAP11 PUSH9 0xDBC2B62EEC3EAA5CB0 CALL PUSH32 0x7CD58275E3E0E89F9B9D791094C83164736F6C63430008130033000000000000 ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT COINBASE 0xB8 0xB1 SWAP11 PUSH9 0xDBC2B62EEC3EAA5CB0 CALL PUSH32 0x7CD58275E3E0E89F9B9D791094C83164736F6C63430008130033000000000000 ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201941b8b19a68dbc2b62eec3eaa5cb0f17f7cd58275e3e0e89f9b9d791094c83164736f6c63430008130033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contract/erc721/ERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PUSH6 0x290B9DA26864 0xE5 DUP16 0xA5 MULMOD DUP6 0xA9 PUSH3 0x7A3EDB 0x4A 0xAF PUSH10 0xFEE8E3EDC3CA33127A2D SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PUSH6 0x290B9DA26864 0xE5 DUP16 0xA5 MULMOD DUP6 0xA9 PUSH3 0x7A3EDB 0x4A 0xAF PUSH10 0xFEE8E3EDC3CA33127A2D SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "188:2065:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208765290b9da26864e58fa50985a9627a3edb4aaf69fee8e3edc3ca33127a2d9164736f6c63430008130033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contract/erc721/ERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x1C4CD965BC5B6BC4AC36FCFA833570 XOR CALLDATALOAD 0xF8 CALL RETURNDATASIZE 0x24 LOG1 CODESIZE 0xD1 0xD PUSH26 0x9A9389425864736F6C6343000813003300000000000000000000 ",
							"sourceMap": "202:12302:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x1C4CD965BC5B6BC4AC36FCFA833570 XOR CALLDATALOAD 0xF8 CALL RETURNDATASIZE 0x24 LOG1 CODESIZE 0xD1 0xD PUSH26 0x9A9389425864736F6C6343000813003300000000000000000000 ",
							"sourceMap": "202:12302:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e1c4cd965bc5b6bc4ac36fcfa8335701835f8f13d24a138d10d799a9389425864736f6c63430008130033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contract/erc721/ERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract/erc721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract/erc721/ERC721.sol\":823:17989  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contract/erc721/ERC721.sol\":1610:1726  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contract/erc721/ERC721.sol\":1685:1690  name_ */\n  dup2\n    /* \"contract/erc721/ERC721.sol\":1677:1682  _name */\n  0x00\n    /* \"contract/erc721/ERC721.sol\":1677:1690  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contract/erc721/ERC721.sol\":1711:1718  symbol_ */\n  dup1\n    /* \"contract/erc721/ERC721.sol\":1701:1708  _symbol */\n  0x01\n    /* \"contract/erc721/ERC721.sol\":1701:1718  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contract/erc721/ERC721.sol\":1610:1726  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contract/erc721/ERC721.sol\":823:17989  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"contract/erc721/ERC721.sol\":823:17989  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract/erc721/ERC721.sol\":823:17989  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract/erc721/ERC721.sol\":1798:2103  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/erc721/ERC721.sol\":2726:2826  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/erc721/ERC721.sol\":4238:4409  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/erc721/ERC721.sol\":3756:4172  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contract/erc721/ERC721.sol\":4938:5273  function transferFrom(... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contract/erc721/ERC721.sol\":5344:5529  function safeTransferFrom(... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contract/erc721/ERC721.sol\":2436:2659  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/erc721/ERC721.sol\":2167:2374  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/erc721/ERC721.sol\":2895:2999  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/erc721/ERC721.sol\":4481:4636  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contract/erc721/ERC721.sol\":5600:5922  function safeTransferFrom(... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contract/erc721/ERC721.sol\":3070:3351  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/erc721/ERC721.sol\":4707:4871  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract/erc721/ERC721.sol\":1798:2103  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"contract/erc721/ERC721.sol\":1900:1904  bool */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":1952:1977  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contract/erc721/ERC721.sol\":1937:1977  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contract/erc721/ERC721.sol\":1937:1948  interfaceId */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":1937:1977  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contract/erc721/ERC721.sol\":1937:2042  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \"contract/erc721/ERC721.sol\":2009:2042  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"contract/erc721/ERC721.sol\":1994:2042  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contract/erc721/ERC721.sol\":1994:2005  interfaceId */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":1994:2042  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contract/erc721/ERC721.sol\":1937:2042  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"contract/erc721/ERC721.sol\":1937:2095  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"contract/erc721/ERC721.sol\":2059:2095  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"contract/erc721/ERC721.sol\":2083:2094  interfaceId */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":2059:2082  super.supportsInterface */\n      tag_79\n        /* \"contract/erc721/ERC721.sol\":2059:2095  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \"contract/erc721/ERC721.sol\":1937:2095  interfaceId == type(IERC721).interfaceId ||... */\n    tag_77:\n        /* \"contract/erc721/ERC721.sol\":1917:2095  return... */\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":1798:2103  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":2726:2826  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"contract/erc721/ERC721.sol\":2780:2793  string memory */\n      0x60\n        /* \"contract/erc721/ERC721.sol\":2813:2818  _name */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":2806:2818  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":2726:2826  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":4238:4409  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"contract/erc721/ERC721.sol\":4314:4321  address */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":4334:4357  _requireMinted(tokenId) */\n      tag_88\n        /* \"contract/erc721/ERC721.sol\":4349:4356  tokenId */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":4334:4348  _requireMinted */\n      tag_89\n        /* \"contract/erc721/ERC721.sol\":4334:4357  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n        /* \"contract/erc721/ERC721.sol\":4377:4392  _tokenApprovals */\n      0x04\n        /* \"contract/erc721/ERC721.sol\":4377:4401  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":4393:4400  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":4377:4401  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":4370:4401  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":4238:4409  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":3756:4172  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"contract/erc721/ERC721.sol\":3837:3850  address owner */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":3853:3876  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \"contract/erc721/ERC721.sol\":3868:3875  tokenId */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":3853:3867  ERC721.ownerOf */\n      tag_47\n        /* \"contract/erc721/ERC721.sol\":3853:3876  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"contract/erc721/ERC721.sol\":3837:3876  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":3901:3906  owner */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":3895:3906  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":3895:3897  to */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":3895:3906  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract/erc721/ERC721.sol\":3887:3944  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contract/erc721/ERC721.sol\":3995:4000  owner */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":3979:4000  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":3979:3991  _msgSender() */\n      tag_95\n        /* \"contract/erc721/ERC721.sol\":3979:3989  _msgSender */\n      tag_96\n        /* \"contract/erc721/ERC721.sol\":3979:3991  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"contract/erc721/ERC721.sol\":3979:4000  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract/erc721/ERC721.sol\":3979:4041  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \"contract/erc721/ERC721.sol\":4004:4041  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"contract/erc721/ERC721.sol\":4021:4026  owner */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":4028:4040  _msgSender() */\n      tag_99\n        /* \"contract/erc721/ERC721.sol\":4028:4038  _msgSender */\n      tag_96\n        /* \"contract/erc721/ERC721.sol\":4028:4040  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"contract/erc721/ERC721.sol\":4004:4020  isApprovedForAll */\n      tag_73\n        /* \"contract/erc721/ERC721.sol\":4004:4041  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_98:\n        /* \"contract/erc721/ERC721.sol\":3979:4041  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_97:\n        /* \"contract/erc721/ERC721.sol\":3957:4130  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contract/erc721/ERC721.sol\":4143:4164  _approve(to, tokenId) */\n      tag_103\n        /* \"contract/erc721/ERC721.sol\":4152:4154  to */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":4156:4163  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":4143:4151  _approve */\n      tag_104\n        /* \"contract/erc721/ERC721.sol\":4143:4164  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"contract/erc721/ERC721.sol\":3826:4172  {... */\n      pop\n        /* \"contract/erc721/ERC721.sol\":3756:4172  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":4938:5273  function transferFrom(... */\n    tag_41:\n        /* \"contract/erc721/ERC721.sol\":5133:5174  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"contract/erc721/ERC721.sol\":5152:5164  _msgSender() */\n      tag_107\n        /* \"contract/erc721/ERC721.sol\":5152:5162  _msgSender */\n      tag_96\n        /* \"contract/erc721/ERC721.sol\":5152:5164  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"contract/erc721/ERC721.sol\":5166:5173  tokenId */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":5133:5151  _isApprovedOrOwner */\n      tag_108\n        /* \"contract/erc721/ERC721.sol\":5133:5174  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"contract/erc721/ERC721.sol\":5125:5224  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contract/erc721/ERC721.sol\":5237:5265  _transfer(from, to, tokenId) */\n      tag_112\n        /* \"contract/erc721/ERC721.sol\":5247:5251  from */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":5253:5255  to */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":5257:5264  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":5237:5246  _transfer */\n      tag_113\n        /* \"contract/erc721/ERC721.sol\":5237:5265  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"contract/erc721/ERC721.sol\":4938:5273  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":5344:5529  function safeTransferFrom(... */\n    tag_44:\n        /* \"contract/erc721/ERC721.sol\":5482:5521  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_115\n        /* \"contract/erc721/ERC721.sol\":5499:5503  from */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":5505:5507  to */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":5509:5516  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":5482:5521  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contract/erc721/ERC721.sol\":5482:5498  safeTransferFrom */\n      tag_65\n        /* \"contract/erc721/ERC721.sol\":5482:5521  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_115:\n        /* \"contract/erc721/ERC721.sol\":5344:5529  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":2436:2659  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"contract/erc721/ERC721.sol\":2508:2515  address */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":2528:2541  address owner */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":2544:2561  _ownerOf(tokenId) */\n      tag_117\n        /* \"contract/erc721/ERC721.sol\":2553:2560  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":2544:2552  _ownerOf */\n      tag_118\n        /* \"contract/erc721/ERC721.sol\":2544:2561  _ownerOf(tokenId) */\n      jump\t// in\n    tag_117:\n        /* \"contract/erc721/ERC721.sol\":2528:2561  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":2597:2598  0 */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":2580:2599  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":2580:2585  owner */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":2580:2599  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract/erc721/ERC721.sol\":2572:2628  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contract/erc721/ERC721.sol\":2646:2651  owner */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":2639:2651  return owner */\n      swap2\n      pop\n      pop\n        /* \"contract/erc721/ERC721.sol\":2436:2659  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":2167:2374  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"contract/erc721/ERC721.sol\":2239:2246  uint256 */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":2284:2285  0 */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":2267:2286  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":2267:2272  owner */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":2267:2286  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract/erc721/ERC721.sol\":2259:2332  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contract/erc721/ERC721.sol\":2350:2359  _balances */\n      0x03\n        /* \"contract/erc721/ERC721.sol\":2350:2366  _balances[owner] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":2360:2365  owner */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":2350:2366  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract/erc721/ERC721.sol\":2343:2366  return _balances[owner] */\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":2167:2374  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":2895:2999  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"contract/erc721/ERC721.sol\":2951:2964  string memory */\n      0x60\n        /* \"contract/erc721/ERC721.sol\":2984:2991  _symbol */\n      0x01\n        /* \"contract/erc721/ERC721.sol\":2977:2991  return _symbol */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_82\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_82\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":2895:2999  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":4481:4636  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"contract/erc721/ERC721.sol\":4576:4628  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"contract/erc721/ERC721.sol\":4595:4607  _msgSender() */\n      tag_134\n        /* \"contract/erc721/ERC721.sol\":4595:4605  _msgSender */\n      tag_96\n        /* \"contract/erc721/ERC721.sol\":4595:4607  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"contract/erc721/ERC721.sol\":4609:4617  operator */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":4619:4627  approved */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":4576:4594  _setApprovalForAll */\n      tag_135\n        /* \"contract/erc721/ERC721.sol\":4576:4628  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"contract/erc721/ERC721.sol\":4481:4636  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":5600:5922  function safeTransferFrom(... */\n    tag_65:\n        /* \"contract/erc721/ERC721.sol\":5774:5815  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"contract/erc721/ERC721.sol\":5793:5805  _msgSender() */\n      tag_138\n        /* \"contract/erc721/ERC721.sol\":5793:5803  _msgSender */\n      tag_96\n        /* \"contract/erc721/ERC721.sol\":5793:5805  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"contract/erc721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":5774:5792  _isApprovedOrOwner */\n      tag_108\n        /* \"contract/erc721/ERC721.sol\":5774:5815  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"contract/erc721/ERC721.sol\":5766:5865  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_111\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contract/erc721/ERC721.sol\":5876:5914  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"contract/erc721/ERC721.sol\":5890:5894  from */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":5896:5898  to */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":5900:5907  tokenId */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":5909:5913  data */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":5876:5889  _safeTransfer */\n      tag_142\n        /* \"contract/erc721/ERC721.sol\":5876:5914  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"contract/erc721/ERC721.sol\":5600:5922  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":3070:3351  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"contract/erc721/ERC721.sol\":3143:3156  string memory */\n      0x60\n        /* \"contract/erc721/ERC721.sol\":3169:3192  _requireMinted(tokenId) */\n      tag_144\n        /* \"contract/erc721/ERC721.sol\":3184:3191  tokenId */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":3169:3183  _requireMinted */\n      tag_89\n        /* \"contract/erc721/ERC721.sol\":3169:3192  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"contract/erc721/ERC721.sol\":3205:3226  string memory baseURI */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":3229:3239  _baseURI() */\n      tag_145\n        /* \"contract/erc721/ERC721.sol\":3229:3237  _baseURI */\n      tag_146\n        /* \"contract/erc721/ERC721.sol\":3229:3239  _baseURI() */\n      jump\t// in\n    tag_145:\n        /* \"contract/erc721/ERC721.sol\":3205:3239  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":3281:3282  0 */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":3263:3270  baseURI */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":3257:3278  bytes(baseURI).length */\n      mload\n        /* \"contract/erc721/ERC721.sol\":3257:3282  bytes(baseURI).length > 0 */\n      gt\n        /* \"contract/erc721/ERC721.sol\":3257:3343  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"contract/erc721/ERC721.sol\":3309:3316  baseURI */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":3318:3336  tokenId.toString() */\n      tag_149\n        /* \"contract/erc721/ERC721.sol\":3318:3325  tokenId */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":3318:3334  tokenId.toString */\n      tag_150\n        /* \"contract/erc721/ERC721.sol\":3318:3336  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"contract/erc721/ERC721.sol\":3292:3337  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contract/erc721/ERC721.sol\":3257:3343  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"contract/erc721/ERC721.sol\":3250:3343  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contract/erc721/ERC721.sol\":3070:3351  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":4707:4871  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_73:\n        /* \"contract/erc721/ERC721.sol\":4804:4808  bool */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":4828:4846  _operatorApprovals */\n      0x05\n        /* \"contract/erc721/ERC721.sol\":4828:4853  _operatorApprovals[owner] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":4847:4852  owner */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":4828:4853  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/erc721/ERC721.sol\":4828:4863  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":4854:4862  operator */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":4828:4863  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contract/erc721/ERC721.sol\":4821:4863  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":4707:4871  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":14057:14192  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"contract/erc721/ERC721.sol\":14139:14155  _exists(tokenId) */\n      tag_156\n        /* \"contract/erc721/ERC721.sol\":14147:14154  tokenId */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":14139:14146  _exists */\n      tag_157\n        /* \"contract/erc721/ERC721.sol\":14139:14155  _exists(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"contract/erc721/ERC721.sol\":14131:14184  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_121\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contract/erc721/ERC721.sol\":14057:14192  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":13336:13510  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"contract/erc721/ERC721.sol\":13438:13440  to */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":13411:13426  _tokenApprovals */\n      0x04\n        /* \"contract/erc721/ERC721.sol\":13411:13435  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":13427:13434  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":13411:13435  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/erc721/ERC721.sol\":13411:13440  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract/erc721/ERC721.sol\":13494:13501  tokenId */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":13490:13492  to */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":13456:13502  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":13465:13488  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"contract/erc721/ERC721.sol\":13480:13487  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":13465:13479  ERC721.ownerOf */\n      tag_47\n        /* \"contract/erc721/ERC721.sol\":13465:13488  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"contract/erc721/ERC721.sol\":13456:13502  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contract/erc721/ERC721.sol\":13336:13510  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":7955:8219  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"contract/erc721/ERC721.sol\":8048:8052  bool */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":8065:8078  address owner */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":8081:8104  ERC721.ownerOf(tokenId) */\n      tag_164\n        /* \"contract/erc721/ERC721.sol\":8096:8103  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":8081:8095  ERC721.ownerOf */\n      tag_47\n        /* \"contract/erc721/ERC721.sol\":8081:8104  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"contract/erc721/ERC721.sol\":8065:8104  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":8134:8139  owner */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":8123:8139  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":8123:8130  spender */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":8123:8139  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract/erc721/ERC721.sol\":8123:8175  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_165\n      jumpi\n      pop\n        /* \"contract/erc721/ERC721.sol\":8143:8175  isApprovedForAll(owner, spender) */\n      tag_166\n        /* \"contract/erc721/ERC721.sol\":8160:8165  owner */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":8167:8174  spender */\n      dup6\n        /* \"contract/erc721/ERC721.sol\":8143:8159  isApprovedForAll */\n      tag_73\n        /* \"contract/erc721/ERC721.sol\":8143:8175  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"contract/erc721/ERC721.sol\":8123:8175  spender == owner || isApprovedForAll(owner, spender) */\n    tag_165:\n        /* \"contract/erc721/ERC721.sol\":8123:8210  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"contract/erc721/ERC721.sol\":8203:8210  spender */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":8179:8210  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":8179:8199  getApproved(tokenId) */\n      tag_168\n        /* \"contract/erc721/ERC721.sol\":8191:8198  tokenId */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":8179:8190  getApproved */\n      tag_31\n        /* \"contract/erc721/ERC721.sol\":8179:8199  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"contract/erc721/ERC721.sol\":8179:8210  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract/erc721/ERC721.sol\":8123:8210  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"contract/erc721/ERC721.sol\":8115:8211  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap2\n      pop\n      pop\n        /* \"contract/erc721/ERC721.sol\":7955:8219  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":11954:13217  function _transfer(... */\n    tag_113:\n        /* \"contract/erc721/ERC721.sol\":12113:12117  from */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":12086:12117  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":12086:12109  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"contract/erc721/ERC721.sol\":12101:12108  tokenId */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":12086:12100  ERC721.ownerOf */\n      tag_47\n        /* \"contract/erc721/ERC721.sol\":12086:12109  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"contract/erc721/ERC721.sol\":12086:12117  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract/erc721/ERC721.sol\":12078:12159  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contract/erc721/ERC721.sol\":12192:12193  0 */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":12178:12194  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":12178:12180  to */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":12178:12194  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract/erc721/ERC721.sol\":12170:12235  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contract/erc721/ERC721.sol\":12248:12290  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_177\n        /* \"contract/erc721/ERC721.sol\":12269:12273  from */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":12275:12277  to */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":12279:12286  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":12288:12289  1 */\n      0x01\n        /* \"contract/erc721/ERC721.sol\":12248:12268  _beforeTokenTransfer */\n      tag_178\n        /* \"contract/erc721/ERC721.sol\":12248:12290  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_177:\n        /* \"contract/erc721/ERC721.sol\":12420:12424  from */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":12393:12424  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":12393:12416  ERC721.ownerOf(tokenId) */\n      tag_179\n        /* \"contract/erc721/ERC721.sol\":12408:12415  tokenId */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":12393:12407  ERC721.ownerOf */\n      tag_47\n        /* \"contract/erc721/ERC721.sol\":12393:12416  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n        /* \"contract/erc721/ERC721.sol\":12393:12424  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract/erc721/ERC721.sol\":12385:12466  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_173\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"contract/erc721/ERC721.sol\":12538:12553  _tokenApprovals */\n      0x04\n        /* \"contract/erc721/ERC721.sol\":12538:12562  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":12554:12561  tokenId */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":12538:12562  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/erc721/ERC721.sol\":12531:12562  delete _tokenApprovals[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contract/erc721/ERC721.sol\":13033:13034  1 */\n      0x01\n        /* \"contract/erc721/ERC721.sol\":13014:13023  _balances */\n      0x03\n        /* \"contract/erc721/ERC721.sol\":13014:13029  _balances[from] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":13024:13028  from */\n      dup6\n        /* \"contract/erc721/ERC721.sol\":13014:13029  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/erc721/ERC721.sol\":13014:13034  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/erc721/ERC721.sol\":13066:13067  1 */\n      0x01\n        /* \"contract/erc721/ERC721.sol\":13049:13058  _balances */\n      0x03\n        /* \"contract/erc721/ERC721.sol\":13049:13062  _balances[to] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":13059:13061  to */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":13049:13062  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/erc721/ERC721.sol\":13049:13067  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract/erc721/ERC721.sol\":13108:13110  to */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":13089:13096  _owners */\n      0x02\n        /* \"contract/erc721/ERC721.sol\":13089:13105  _owners[tokenId] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":13097:13104  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":13089:13105  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/erc721/ERC721.sol\":13089:13110  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract/erc721/ERC721.sol\":13147:13154  tokenId */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":13143:13145  to */\n      dup3\n        /* \"contract/erc721/ERC721.sol\":13128:13155  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":13137:13141  from */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":13128:13155  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contract/erc721/ERC721.sol\":13168:13209  _afterTokenTransfer(from, to, tokenId, 1) */\n      tag_182\n        /* \"contract/erc721/ERC721.sol\":13188:13192  from */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":13194:13196  to */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":13198:13205  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":13207:13208  1 */\n      0x01\n        /* \"contract/erc721/ERC721.sol\":13168:13187  _afterTokenTransfer */\n      tag_183\n        /* \"contract/erc721/ERC721.sol\":13168:13209  _afterTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_182:\n        /* \"contract/erc721/ERC721.sol\":11954:13217  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":7230:7347  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_118:\n        /* \"contract/erc721/ERC721.sol\":7296:7303  address */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":7323:7330  _owners */\n      0x02\n        /* \"contract/erc721/ERC721.sol\":7323:7339  _owners[tokenId] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":7331:7338  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":7323:7339  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":7316:7339  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":7230:7347  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":13653:13968  function _setApprovalForAll(... */\n    tag_135:\n        /* \"contract/erc721/ERC721.sol\":13808:13816  operator */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":13799:13816  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":13799:13804  owner */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":13799:13816  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract/erc721/ERC721.sol\":13791:13846  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contract/erc721/ERC721.sol\":13895:13903  approved */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":13857:13875  _operatorApprovals */\n      0x05\n        /* \"contract/erc721/ERC721.sol\":13857:13882  _operatorApprovals[owner] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":13876:13881  owner */\n      dup6\n        /* \"contract/erc721/ERC721.sol\":13857:13882  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract/erc721/ERC721.sol\":13857:13892  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":13883:13891  operator */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":13857:13892  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract/erc721/ERC721.sol\":13857:13903  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract/erc721/ERC721.sol\":13941:13949  operator */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":13919:13960  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":13934:13939  owner */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":13919:13960  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contract/erc721/ERC721.sol\":13951:13959  approved */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":13919:13960  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract/erc721/ERC721.sol\":13653:13968  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":6803:7116  function _safeTransfer(... */\n    tag_142:\n        /* \"contract/erc721/ERC721.sol\":6959:6987  _transfer(from, to, tokenId) */\n      tag_191\n        /* \"contract/erc721/ERC721.sol\":6969:6973  from */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":6975:6977  to */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":6979:6986  tokenId */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":6959:6968  _transfer */\n      tag_113\n        /* \"contract/erc721/ERC721.sol\":6959:6987  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"contract/erc721/ERC721.sol\":7006:7053  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_192\n        /* \"contract/erc721/ERC721.sol\":7029:7033  from */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":7035:7037  to */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":7039:7046  tokenId */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":7048:7052  data */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":7006:7028  _checkOnERC721Received */\n      tag_193\n        /* \"contract/erc721/ERC721.sol\":7006:7053  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_192:\n        /* \"contract/erc721/ERC721.sol\":6998:7108  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contract/erc721/ERC721.sol\":6803:7116  function _safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":3600:3694  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_146:\n        /* \"contract/erc721/ERC721.sol\":3651:3664  string memory */\n      0x60\n        /* \"contract/erc721/ERC721.sol\":3677:3686  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":3600:3694  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":471:484  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:534  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":557:558  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":548:553  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:547  Math.log10 */\n      tag_200\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:558  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:558  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:592  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":606:612  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":595:613  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_201\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n    tag_201:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_204\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_204:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:613  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:638  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":753:759  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":749:751  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":745:760  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":737:743  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":726:761  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:799  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":958:966  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":946:951  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":942:956  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":937:967  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:935  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:968  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1012:1014  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1003:1014  value /= 10 */\n      dup6\n      dup2\n      tag_207\n      jumpi\n      tag_208\n      tag_209\n      jump\t// in\n    tag_208:\n    tag_207:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1046  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1041  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1046  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1094  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1081:1094  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":7660:7788  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_157:\n        /* \"contract/erc721/ERC721.sol\":7725:7729  bool */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":7778:7779  0 */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":7749:7780  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract/erc721/ERC721.sol\":7749:7766  _ownerOf(tokenId) */\n      tag_212\n        /* \"contract/erc721/ERC721.sol\":7758:7765  tokenId */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":7749:7757  _ownerOf */\n      tag_118\n        /* \"contract/erc721/ERC721.sol\":7749:7766  _ownerOf(tokenId) */\n      jump\t// in\n    tag_212:\n        /* \"contract/erc721/ERC721.sol\":7749:7780  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contract/erc721/ERC721.sol\":7742:7780  return _ownerOf(tokenId) != address(0) */\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":7660:7788  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":16341:16500  function _beforeTokenTransfer(... */\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":17222:17380  function _afterTokenTransfer(... */\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract/erc721/ERC721.sol\":14756:15609  function _checkOnERC721Received(... */\n    tag_193:\n        /* \"contract/erc721/ERC721.sol\":14910:14914  bool */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":14931:14946  to.isContract() */\n      tag_216\n        /* \"contract/erc721/ERC721.sol\":14931:14933  to */\n      dup5\n        /* \"contract/erc721/ERC721.sol\":14931:14944  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_217\n        /* \"contract/erc721/ERC721.sol\":14931:14946  to.isContract() */\n      jump\t// in\n    tag_216:\n        /* \"contract/erc721/ERC721.sol\":14927:15602  if (to.isContract()) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"contract/erc721/ERC721.sol\":14983:14985  to */\n      dup4\n        /* \"contract/erc721/ERC721.sol\":14967:15003  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contract/erc721/ERC721.sol\":15004:15016  _msgSender() */\n      tag_219\n        /* \"contract/erc721/ERC721.sol\":15004:15014  _msgSender */\n      tag_96\n        /* \"contract/erc721/ERC721.sol\":15004:15016  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"contract/erc721/ERC721.sol\":15018:15022  from */\n      dup8\n        /* \"contract/erc721/ERC721.sol\":15024:15031  tokenId */\n      dup7\n        /* \"contract/erc721/ERC721.sol\":15033:15037  data */\n      dup7\n        /* \"contract/erc721/ERC721.sol\":14967:15038  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_222\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      0x01\n    tag_222:\n        /* \"contract/erc721/ERC721.sol\":14963:15547  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_225\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_230\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_229)\n    tag_230:\n      0x60\n      swap2\n      pop\n    tag_229:\n      pop\n        /* \"contract/erc721/ERC721.sol\":15225:15226  0 */\n      0x00\n        /* \"contract/erc721/ERC721.sol\":15208:15214  reason */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":15208:15221  reason.length */\n      mload\n        /* \"contract/erc721/ERC721.sol\":15208:15226  reason.length == 0 */\n      sub\n        /* \"contract/erc721/ERC721.sol\":15204:15532  if (reason.length == 0) {... */\n      tag_231\n      jumpi\n        /* \"contract/erc721/ERC721.sol\":15251:15311  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_196\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract/erc721/ERC721.sol\":15204:15532  if (reason.length == 0) {... */\n    tag_231:\n        /* \"contract/erc721/ERC721.sol\":15482:15488  reason */\n      dup1\n        /* \"contract/erc721/ERC721.sol\":15476:15489  mload(reason) */\n      mload\n        /* \"contract/erc721/ERC721.sol\":15467:15473  reason */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":15463:15465  32 */\n      0x20\n        /* \"contract/erc721/ERC721.sol\":15459:15474  add(32, reason) */\n      add\n        /* \"contract/erc721/ERC721.sol\":15452:15490  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contract/erc721/ERC721.sol\":14963:15547  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_225:\n        /* \"contract/erc721/ERC721.sol\":15099:15140  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contract/erc721/ERC721.sol\":15089:15140  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contract/erc721/ERC721.sol\":15089:15095  retval */\n      dup2\n        /* \"contract/erc721/ERC721.sol\":15089:15140  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contract/erc721/ERC721.sol\":15082:15140  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_215)\n        /* \"contract/erc721/ERC721.sol\":14927:15602  if (to.isContract()) {... */\n    tag_218:\n        /* \"contract/erc721/ERC721.sol\":15586:15590  true */\n      0x01\n        /* \"contract/erc721/ERC721.sol\":15579:15590  return true */\n      swap1\n      pop\n        /* \"contract/erc721/ERC721.sol\":14756:15609  function _checkOnERC721Received(... */\n    tag_215:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9942:9949  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9961:9975  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9978:9979  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9961:9979  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10026:10032  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10022  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10032  value >= 10**64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10061:10067  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10052:10067  value /= 10**64 */\n      dup4\n      dup2\n      tag_238\n      jumpi\n      tag_239\n      tag_209\n      jump\t// in\n    tag_239:\n    tag_238:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10095:10097  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10085:10097  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10138:10144  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10134  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10144  value >= 10**32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10173:10179  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10164:10179  value /= 10**32 */\n      dup4\n      dup2\n      tag_241\n      jumpi\n      tag_242\n      tag_209\n      jump\t// in\n    tag_242:\n    tag_241:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10207:10209  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10197:10209  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10250:10256  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10246  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10256  value >= 10**16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10285:10291  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10291  value /= 10**16 */\n      dup4\n      dup2\n      tag_244\n      jumpi\n      tag_245\n      tag_209\n      jump\t// in\n    tag_245:\n    tag_244:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10321  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10309:10321  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10362:10367  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10358  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10367  value >= 10**8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10396:10401  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10387:10401  value /= 10**8 */\n      dup4\n      dup2\n      tag_247\n      jumpi\n      tag_248\n      tag_209\n      jump\t// in\n    tag_248:\n    tag_247:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10430  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10419:10430  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10471:10476  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10467  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10476  value >= 10**4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10505:10510  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10496:10510  value /= 10**4 */\n      dup4\n      dup2\n      tag_250\n      jumpi\n      tag_251\n      tag_209\n      jump\t// in\n    tag_251:\n    tag_250:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10538:10539  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10528:10539  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10580:10585  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10576  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10585  value >= 10**2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10614:10619  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10605:10619  value /= 10**2 */\n      dup4\n      dup2\n      tag_253\n      jumpi\n      tag_254\n      tag_209\n      jump\t// in\n    tag_254:\n    tag_253:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10647:10648  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10637:10648  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10689:10694  10**1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10685  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10694  value >= 10**1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10725  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10714:10725  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10766:10772  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10759:10772  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_257:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_258:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_259:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_260:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_261:\n        /* \"#utility.yul\":561:584   */\n      tag_320\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_260\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_321:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_262:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_323\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_261\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_20:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_326\n      tag_258\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":833:952   */\n    tag_325:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_327\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_262\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_263:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_264:\n        /* \"#utility.yul\":1268:1289   */\n      tag_330\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_263\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_23:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_332\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_264\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_265:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_266:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_267:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_336:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_336)\n    tag_338:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_268:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_269:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_341\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_265\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2329:2400   */\n      tag_342\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_266\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_343\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_267\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2499:2528   */\n      tag_344\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_268\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_27:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_346\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_269\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_270:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_271:\n        /* \"#utility.yul\":3016:3040   */\n      tag_349\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_270\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_350:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_272:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_352\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_271\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_30:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_355\n      tag_258\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3292:3411   */\n    tag_354:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_356\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_272\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_273:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_274:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_359\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_273\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_275:\n        /* \"#utility.yul\":3872:3896   */\n      tag_361\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_274\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_33:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_363\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_275\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_276:\n        /* \"#utility.yul\":4210:4234   */\n      tag_365\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_274\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_366:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_277:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_368\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_276\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_36:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_371\n      tag_258\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4503:4622   */\n    tag_370:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_372\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_277\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_373\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_272\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_40:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_376\n      tag_258\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5000:5119   */\n    tag_375:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_377\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_277\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_378\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_277\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_379\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_272\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_51:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_382\n      tag_258\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5591:5710   */\n    tag_381:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_383\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_277\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_278:\n        /* \"#utility.yul\":5937:5961   */\n      tag_385\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_270\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_54:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_387\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_278\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_279:\n        /* \"#utility.yul\":6272:6293   */\n      tag_389\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_263\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_390:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_280:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_392\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_279\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_60:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_395\n      tag_258\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6553:6672   */\n    tag_394:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_396\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_277\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_397\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_280\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_281:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_282:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_203:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_283:\n        /* \"#utility.yul\":7452:7479   */\n      tag_402\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_268\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_404\n      tag_203\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7525:7613   */\n    tag_403:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_284:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_406\n      tag_257\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_407\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_283\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_285:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_410\n      tag_203\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":7928:7984   */\n    tag_409:\n        /* \"#utility.yul\":8002:8031   */\n      tag_411\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_268\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_286:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_287:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_414\n        /* \"#utility.yul\":8374:8422   */\n      tag_415\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_285\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8358:8423   */\n      tag_284\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_417\n      tag_282\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8498:8610   */\n    tag_416:\n        /* \"#utility.yul\":8619:8673   */\n      tag_418\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_286\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_288:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_421\n      tag_281\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8769:8891   */\n    tag_420:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_422\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_287\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_64:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_425\n      tag_258\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":9178:9298   */\n    tag_424:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_426\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_277\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_427\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_277\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_428\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_272\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_430\n      tag_259\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9765:9882   */\n    tag_429:\n        /* \"#utility.yul\":9906:9968   */\n      tag_431\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_288\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_72:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_434\n      tag_258\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10084:10203   */\n    tag_433:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_435\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_277\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_436\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_277\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_289:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_82:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_439:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_441\n      tag_289\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10887:10971   */\n    tag_440:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11203   */\n    tag_290:\n        /* \"#utility.yul\":11123:11157   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":11119:11120   */\n      0x00\n        /* \"#utility.yul\":11111:11117   */\n      dup3\n        /* \"#utility.yul\":11107:11121   */\n      add\n        /* \"#utility.yul\":11100:11158   */\n      mstore\n        /* \"#utility.yul\":11192:11195   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11187:11189   */\n      0x20\n        /* \"#utility.yul\":11179:11185   */\n      dup3\n        /* \"#utility.yul\":11175:11190   */\n      add\n        /* \"#utility.yul\":11168:11196   */\n      mstore\n        /* \"#utility.yul\":10983:11203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11575   */\n    tag_291:\n        /* \"#utility.yul\":11351:11354   */\n      0x00\n        /* \"#utility.yul\":11372:11439   */\n      tag_444\n        /* \"#utility.yul\":11436:11438   */\n      0x21\n        /* \"#utility.yul\":11431:11434   */\n      dup4\n        /* \"#utility.yul\":11372:11439   */\n      tag_266\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11365:11439   */\n      swap2\n      pop\n        /* \"#utility.yul\":11448:11541   */\n      tag_445\n        /* \"#utility.yul\":11537:11540   */\n      dup3\n        /* \"#utility.yul\":11448:11541   */\n      tag_290\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11566:11568   */\n      0x40\n        /* \"#utility.yul\":11561:11564   */\n      dup3\n        /* \"#utility.yul\":11557:11569   */\n      add\n        /* \"#utility.yul\":11550:11569   */\n      swap1\n      pop\n        /* \"#utility.yul\":11209:11575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11581:12000   */\n    tag_94:\n        /* \"#utility.yul\":11747:11751   */\n      0x00\n        /* \"#utility.yul\":11785:11787   */\n      0x20\n        /* \"#utility.yul\":11774:11783   */\n      dup3\n        /* \"#utility.yul\":11770:11788   */\n      add\n        /* \"#utility.yul\":11762:11788   */\n      swap1\n      pop\n        /* \"#utility.yul\":11834:11843   */\n      dup2\n        /* \"#utility.yul\":11828:11832   */\n      dup2\n        /* \"#utility.yul\":11824:11844   */\n      sub\n        /* \"#utility.yul\":11820:11821   */\n      0x00\n        /* \"#utility.yul\":11809:11818   */\n      dup4\n        /* \"#utility.yul\":11805:11822   */\n      add\n        /* \"#utility.yul\":11798:11845   */\n      mstore\n        /* \"#utility.yul\":11862:11993   */\n      tag_447\n        /* \"#utility.yul\":11988:11992   */\n      dup2\n        /* \"#utility.yul\":11862:11993   */\n      tag_291\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11854:11993   */\n      swap1\n      pop\n        /* \"#utility.yul\":11581:12000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12006:12254   */\n    tag_292:\n        /* \"#utility.yul\":12146:12180   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":12142:12143   */\n      0x00\n        /* \"#utility.yul\":12134:12140   */\n      dup3\n        /* \"#utility.yul\":12130:12144   */\n      add\n        /* \"#utility.yul\":12123:12181   */\n      mstore\n        /* \"#utility.yul\":12215:12246   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":12210:12212   */\n      0x20\n        /* \"#utility.yul\":12202:12208   */\n      dup3\n        /* \"#utility.yul\":12198:12213   */\n      add\n        /* \"#utility.yul\":12191:12247   */\n      mstore\n        /* \"#utility.yul\":12006:12254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12260:12626   */\n    tag_293:\n        /* \"#utility.yul\":12402:12405   */\n      0x00\n        /* \"#utility.yul\":12423:12490   */\n      tag_450\n        /* \"#utility.yul\":12487:12489   */\n      0x3d\n        /* \"#utility.yul\":12482:12485   */\n      dup4\n        /* \"#utility.yul\":12423:12490   */\n      tag_266\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12416:12490   */\n      swap2\n      pop\n        /* \"#utility.yul\":12499:12592   */\n      tag_451\n        /* \"#utility.yul\":12588:12591   */\n      dup3\n        /* \"#utility.yul\":12499:12592   */\n      tag_292\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12617:12619   */\n      0x40\n        /* \"#utility.yul\":12612:12615   */\n      dup3\n        /* \"#utility.yul\":12608:12620   */\n      add\n        /* \"#utility.yul\":12601:12620   */\n      swap1\n      pop\n        /* \"#utility.yul\":12260:12626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12632:13051   */\n    tag_102:\n        /* \"#utility.yul\":12798:12802   */\n      0x00\n        /* \"#utility.yul\":12836:12838   */\n      0x20\n        /* \"#utility.yul\":12825:12834   */\n      dup3\n        /* \"#utility.yul\":12821:12839   */\n      add\n        /* \"#utility.yul\":12813:12839   */\n      swap1\n      pop\n        /* \"#utility.yul\":12885:12894   */\n      dup2\n        /* \"#utility.yul\":12879:12883   */\n      dup2\n        /* \"#utility.yul\":12875:12895   */\n      sub\n        /* \"#utility.yul\":12871:12872   */\n      0x00\n        /* \"#utility.yul\":12860:12869   */\n      dup4\n        /* \"#utility.yul\":12856:12873   */\n      add\n        /* \"#utility.yul\":12849:12896   */\n      mstore\n        /* \"#utility.yul\":12913:13044   */\n      tag_453\n        /* \"#utility.yul\":13039:13043   */\n      dup2\n        /* \"#utility.yul\":12913:13044   */\n      tag_293\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12905:13044   */\n      swap1\n      pop\n        /* \"#utility.yul\":12632:13051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13057:13289   */\n    tag_294:\n        /* \"#utility.yul\":13197:13231   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":13193:13194   */\n      0x00\n        /* \"#utility.yul\":13185:13191   */\n      dup3\n        /* \"#utility.yul\":13181:13195   */\n      add\n        /* \"#utility.yul\":13174:13232   */\n      mstore\n        /* \"#utility.yul\":13266:13281   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":13261:13263   */\n      0x20\n        /* \"#utility.yul\":13253:13259   */\n      dup3\n        /* \"#utility.yul\":13249:13264   */\n      add\n        /* \"#utility.yul\":13242:13282   */\n      mstore\n        /* \"#utility.yul\":13057:13289   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13295:13661   */\n    tag_295:\n        /* \"#utility.yul\":13437:13440   */\n      0x00\n        /* \"#utility.yul\":13458:13525   */\n      tag_456\n        /* \"#utility.yul\":13522:13524   */\n      0x2d\n        /* \"#utility.yul\":13517:13520   */\n      dup4\n        /* \"#utility.yul\":13458:13525   */\n      tag_266\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13451:13525   */\n      swap2\n      pop\n        /* \"#utility.yul\":13534:13627   */\n      tag_457\n        /* \"#utility.yul\":13623:13626   */\n      dup3\n        /* \"#utility.yul\":13534:13627   */\n      tag_294\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":13652:13654   */\n      0x40\n        /* \"#utility.yul\":13647:13650   */\n      dup3\n        /* \"#utility.yul\":13643:13655   */\n      add\n        /* \"#utility.yul\":13636:13655   */\n      swap1\n      pop\n        /* \"#utility.yul\":13295:13661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13667:14086   */\n    tag_111:\n        /* \"#utility.yul\":13833:13837   */\n      0x00\n        /* \"#utility.yul\":13871:13873   */\n      0x20\n        /* \"#utility.yul\":13860:13869   */\n      dup3\n        /* \"#utility.yul\":13856:13874   */\n      add\n        /* \"#utility.yul\":13848:13874   */\n      swap1\n      pop\n        /* \"#utility.yul\":13920:13929   */\n      dup2\n        /* \"#utility.yul\":13914:13918   */\n      dup2\n        /* \"#utility.yul\":13910:13930   */\n      sub\n        /* \"#utility.yul\":13906:13907   */\n      0x00\n        /* \"#utility.yul\":13895:13904   */\n      dup4\n        /* \"#utility.yul\":13891:13908   */\n      add\n        /* \"#utility.yul\":13884:13931   */\n      mstore\n        /* \"#utility.yul\":13948:14079   */\n      tag_459\n        /* \"#utility.yul\":14074:14078   */\n      dup2\n        /* \"#utility.yul\":13948:14079   */\n      tag_295\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13940:14079   */\n      swap1\n      pop\n        /* \"#utility.yul\":13667:14086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14092:14266   */\n    tag_296:\n        /* \"#utility.yul\":14232:14258   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":14228:14229   */\n      0x00\n        /* \"#utility.yul\":14220:14226   */\n      dup3\n        /* \"#utility.yul\":14216:14230   */\n      add\n        /* \"#utility.yul\":14209:14259   */\n      mstore\n        /* \"#utility.yul\":14092:14266   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14272:14638   */\n    tag_297:\n        /* \"#utility.yul\":14414:14417   */\n      0x00\n        /* \"#utility.yul\":14435:14502   */\n      tag_462\n        /* \"#utility.yul\":14499:14501   */\n      0x18\n        /* \"#utility.yul\":14494:14497   */\n      dup4\n        /* \"#utility.yul\":14435:14502   */\n      tag_266\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14428:14502   */\n      swap2\n      pop\n        /* \"#utility.yul\":14511:14604   */\n      tag_463\n        /* \"#utility.yul\":14600:14603   */\n      dup3\n        /* \"#utility.yul\":14511:14604   */\n      tag_296\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14629:14631   */\n      0x20\n        /* \"#utility.yul\":14624:14627   */\n      dup3\n        /* \"#utility.yul\":14620:14632   */\n      add\n        /* \"#utility.yul\":14613:14632   */\n      swap1\n      pop\n        /* \"#utility.yul\":14272:14638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14644:15063   */\n    tag_121:\n        /* \"#utility.yul\":14810:14814   */\n      0x00\n        /* \"#utility.yul\":14848:14850   */\n      0x20\n        /* \"#utility.yul\":14837:14846   */\n      dup3\n        /* \"#utility.yul\":14833:14851   */\n      add\n        /* \"#utility.yul\":14825:14851   */\n      swap1\n      pop\n        /* \"#utility.yul\":14897:14906   */\n      dup2\n        /* \"#utility.yul\":14891:14895   */\n      dup2\n        /* \"#utility.yul\":14887:14907   */\n      sub\n        /* \"#utility.yul\":14883:14884   */\n      0x00\n        /* \"#utility.yul\":14872:14881   */\n      dup4\n        /* \"#utility.yul\":14868:14885   */\n      add\n        /* \"#utility.yul\":14861:14908   */\n      mstore\n        /* \"#utility.yul\":14925:15056   */\n      tag_465\n        /* \"#utility.yul\":15051:15055   */\n      dup2\n        /* \"#utility.yul\":14925:15056   */\n      tag_297\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14917:15056   */\n      swap1\n      pop\n        /* \"#utility.yul\":14644:15063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15069:15297   */\n    tag_298:\n        /* \"#utility.yul\":15209:15243   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":15205:15206   */\n      0x00\n        /* \"#utility.yul\":15197:15203   */\n      dup3\n        /* \"#utility.yul\":15193:15207   */\n      add\n        /* \"#utility.yul\":15186:15244   */\n      mstore\n        /* \"#utility.yul\":15278:15289   */\n      0x6c6964206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15273:15275   */\n      0x20\n        /* \"#utility.yul\":15265:15271   */\n      dup3\n        /* \"#utility.yul\":15261:15276   */\n      add\n        /* \"#utility.yul\":15254:15290   */\n      mstore\n        /* \"#utility.yul\":15069:15297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15303:15669   */\n    tag_299:\n        /* \"#utility.yul\":15445:15448   */\n      0x00\n        /* \"#utility.yul\":15466:15533   */\n      tag_468\n        /* \"#utility.yul\":15530:15532   */\n      0x29\n        /* \"#utility.yul\":15525:15528   */\n      dup4\n        /* \"#utility.yul\":15466:15533   */\n      tag_266\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15459:15533   */\n      swap2\n      pop\n        /* \"#utility.yul\":15542:15635   */\n      tag_469\n        /* \"#utility.yul\":15631:15634   */\n      dup3\n        /* \"#utility.yul\":15542:15635   */\n      tag_298\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15660:15662   */\n      0x40\n        /* \"#utility.yul\":15655:15658   */\n      dup3\n        /* \"#utility.yul\":15651:15663   */\n      add\n        /* \"#utility.yul\":15644:15663   */\n      swap1\n      pop\n        /* \"#utility.yul\":15303:15669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15675:16094   */\n    tag_125:\n        /* \"#utility.yul\":15841:15845   */\n      0x00\n        /* \"#utility.yul\":15879:15881   */\n      0x20\n        /* \"#utility.yul\":15868:15877   */\n      dup3\n        /* \"#utility.yul\":15864:15882   */\n      add\n        /* \"#utility.yul\":15856:15882   */\n      swap1\n      pop\n        /* \"#utility.yul\":15928:15937   */\n      dup2\n        /* \"#utility.yul\":15922:15926   */\n      dup2\n        /* \"#utility.yul\":15918:15938   */\n      sub\n        /* \"#utility.yul\":15914:15915   */\n      0x00\n        /* \"#utility.yul\":15903:15912   */\n      dup4\n        /* \"#utility.yul\":15899:15916   */\n      add\n        /* \"#utility.yul\":15892:15939   */\n      mstore\n        /* \"#utility.yul\":15956:16087   */\n      tag_471\n        /* \"#utility.yul\":16082:16086   */\n      dup2\n        /* \"#utility.yul\":15956:16087   */\n      tag_299\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15948:16087   */\n      swap1\n      pop\n        /* \"#utility.yul\":15675:16094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16100:16248   */\n    tag_300:\n        /* \"#utility.yul\":16202:16213   */\n      0x00\n        /* \"#utility.yul\":16239:16242   */\n      dup2\n        /* \"#utility.yul\":16224:16242   */\n      swap1\n      pop\n        /* \"#utility.yul\":16100:16248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16254:16644   */\n    tag_301:\n        /* \"#utility.yul\":16360:16363   */\n      0x00\n        /* \"#utility.yul\":16388:16427   */\n      tag_474\n        /* \"#utility.yul\":16421:16426   */\n      dup3\n        /* \"#utility.yul\":16388:16427   */\n      tag_265\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":16443:16532   */\n      tag_475\n        /* \"#utility.yul\":16525:16531   */\n      dup2\n        /* \"#utility.yul\":16520:16523   */\n      dup6\n        /* \"#utility.yul\":16443:16532   */\n      tag_300\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16436:16532   */\n      swap4\n      pop\n        /* \"#utility.yul\":16541:16606   */\n      tag_476\n        /* \"#utility.yul\":16599:16605   */\n      dup2\n        /* \"#utility.yul\":16594:16597   */\n      dup6\n        /* \"#utility.yul\":16587:16591   */\n      0x20\n        /* \"#utility.yul\":16580:16585   */\n      dup7\n        /* \"#utility.yul\":16576:16592   */\n      add\n        /* \"#utility.yul\":16541:16606   */\n      tag_267\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16631:16637   */\n      dup1\n        /* \"#utility.yul\":16626:16629   */\n      dup5\n        /* \"#utility.yul\":16622:16638   */\n      add\n        /* \"#utility.yul\":16615:16638   */\n      swap2\n      pop\n        /* \"#utility.yul\":16364:16644   */\n      pop\n        /* \"#utility.yul\":16254:16644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16650:17085   */\n    tag_152:\n        /* \"#utility.yul\":16830:16833   */\n      0x00\n        /* \"#utility.yul\":16852:16947   */\n      tag_478\n        /* \"#utility.yul\":16943:16946   */\n      dup3\n        /* \"#utility.yul\":16934:16940   */\n      dup6\n        /* \"#utility.yul\":16852:16947   */\n      tag_301\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":16845:16947   */\n      swap2\n      pop\n        /* \"#utility.yul\":16964:17059   */\n      tag_479\n        /* \"#utility.yul\":17055:17058   */\n      dup3\n        /* \"#utility.yul\":17046:17052   */\n      dup5\n        /* \"#utility.yul\":16964:17059   */\n      tag_301\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":16957:17059   */\n      swap2\n      pop\n        /* \"#utility.yul\":17076:17079   */\n      dup2\n        /* \"#utility.yul\":17069:17079   */\n      swap1\n      pop\n        /* \"#utility.yul\":16650:17085   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17091:17315   */\n    tag_302:\n        /* \"#utility.yul\":17231:17265   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":17227:17228   */\n      0x00\n        /* \"#utility.yul\":17219:17225   */\n      dup3\n        /* \"#utility.yul\":17215:17229   */\n      add\n        /* \"#utility.yul\":17208:17266   */\n      mstore\n        /* \"#utility.yul\":17300:17307   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17295:17297   */\n      0x20\n        /* \"#utility.yul\":17287:17293   */\n      dup3\n        /* \"#utility.yul\":17283:17298   */\n      add\n        /* \"#utility.yul\":17276:17308   */\n      mstore\n        /* \"#utility.yul\":17091:17315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17321:17687   */\n    tag_303:\n        /* \"#utility.yul\":17463:17466   */\n      0x00\n        /* \"#utility.yul\":17484:17551   */\n      tag_482\n        /* \"#utility.yul\":17548:17550   */\n      0x25\n        /* \"#utility.yul\":17543:17546   */\n      dup4\n        /* \"#utility.yul\":17484:17551   */\n      tag_266\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17477:17551   */\n      swap2\n      pop\n        /* \"#utility.yul\":17560:17653   */\n      tag_483\n        /* \"#utility.yul\":17649:17652   */\n      dup3\n        /* \"#utility.yul\":17560:17653   */\n      tag_302\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":17678:17680   */\n      0x40\n        /* \"#utility.yul\":17673:17676   */\n      dup3\n        /* \"#utility.yul\":17669:17681   */\n      add\n        /* \"#utility.yul\":17662:17681   */\n      swap1\n      pop\n        /* \"#utility.yul\":17321:17687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17693:18112   */\n    tag_173:\n        /* \"#utility.yul\":17859:17863   */\n      0x00\n        /* \"#utility.yul\":17897:17899   */\n      0x20\n        /* \"#utility.yul\":17886:17895   */\n      dup3\n        /* \"#utility.yul\":17882:17900   */\n      add\n        /* \"#utility.yul\":17874:17900   */\n      swap1\n      pop\n        /* \"#utility.yul\":17946:17955   */\n      dup2\n        /* \"#utility.yul\":17940:17944   */\n      dup2\n        /* \"#utility.yul\":17936:17956   */\n      sub\n        /* \"#utility.yul\":17932:17933   */\n      0x00\n        /* \"#utility.yul\":17921:17930   */\n      dup4\n        /* \"#utility.yul\":17917:17934   */\n      add\n        /* \"#utility.yul\":17910:17957   */\n      mstore\n        /* \"#utility.yul\":17974:18105   */\n      tag_485\n        /* \"#utility.yul\":18100:18104   */\n      dup2\n        /* \"#utility.yul\":17974:18105   */\n      tag_303\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17966:18105   */\n      swap1\n      pop\n        /* \"#utility.yul\":17693:18112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18118:18341   */\n    tag_304:\n        /* \"#utility.yul\":18258:18292   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":18254:18255   */\n      0x00\n        /* \"#utility.yul\":18246:18252   */\n      dup3\n        /* \"#utility.yul\":18242:18256   */\n      add\n        /* \"#utility.yul\":18235:18293   */\n      mstore\n        /* \"#utility.yul\":18327:18333   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18322:18324   */\n      0x20\n        /* \"#utility.yul\":18314:18320   */\n      dup3\n        /* \"#utility.yul\":18310:18325   */\n      add\n        /* \"#utility.yul\":18303:18334   */\n      mstore\n        /* \"#utility.yul\":18118:18341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18347:18713   */\n    tag_305:\n        /* \"#utility.yul\":18489:18492   */\n      0x00\n        /* \"#utility.yul\":18510:18577   */\n      tag_488\n        /* \"#utility.yul\":18574:18576   */\n      0x24\n        /* \"#utility.yul\":18569:18572   */\n      dup4\n        /* \"#utility.yul\":18510:18577   */\n      tag_266\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18503:18577   */\n      swap2\n      pop\n        /* \"#utility.yul\":18586:18679   */\n      tag_489\n        /* \"#utility.yul\":18675:18678   */\n      dup3\n        /* \"#utility.yul\":18586:18679   */\n      tag_304\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18704:18706   */\n      0x40\n        /* \"#utility.yul\":18699:18702   */\n      dup3\n        /* \"#utility.yul\":18695:18707   */\n      add\n        /* \"#utility.yul\":18688:18707   */\n      swap1\n      pop\n        /* \"#utility.yul\":18347:18713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18719:19138   */\n    tag_176:\n        /* \"#utility.yul\":18885:18889   */\n      0x00\n        /* \"#utility.yul\":18923:18925   */\n      0x20\n        /* \"#utility.yul\":18912:18921   */\n      dup3\n        /* \"#utility.yul\":18908:18926   */\n      add\n        /* \"#utility.yul\":18900:18926   */\n      swap1\n      pop\n        /* \"#utility.yul\":18972:18981   */\n      dup2\n        /* \"#utility.yul\":18966:18970   */\n      dup2\n        /* \"#utility.yul\":18962:18982   */\n      sub\n        /* \"#utility.yul\":18958:18959   */\n      0x00\n        /* \"#utility.yul\":18947:18956   */\n      dup4\n        /* \"#utility.yul\":18943:18960   */\n      add\n        /* \"#utility.yul\":18936:18983   */\n      mstore\n        /* \"#utility.yul\":19000:19131   */\n      tag_491\n        /* \"#utility.yul\":19126:19130   */\n      dup2\n        /* \"#utility.yul\":19000:19131   */\n      tag_305\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":18992:19131   */\n      swap1\n      pop\n        /* \"#utility.yul\":18719:19138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19144:19319   */\n    tag_306:\n        /* \"#utility.yul\":19284:19311   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":19280:19281   */\n      0x00\n        /* \"#utility.yul\":19272:19278   */\n      dup3\n        /* \"#utility.yul\":19268:19282   */\n      add\n        /* \"#utility.yul\":19261:19312   */\n      mstore\n        /* \"#utility.yul\":19144:19319   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19325:19691   */\n    tag_307:\n        /* \"#utility.yul\":19467:19470   */\n      0x00\n        /* \"#utility.yul\":19488:19555   */\n      tag_494\n        /* \"#utility.yul\":19552:19554   */\n      0x19\n        /* \"#utility.yul\":19547:19550   */\n      dup4\n        /* \"#utility.yul\":19488:19555   */\n      tag_266\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":19481:19555   */\n      swap2\n      pop\n        /* \"#utility.yul\":19564:19657   */\n      tag_495\n        /* \"#utility.yul\":19653:19656   */\n      dup3\n        /* \"#utility.yul\":19564:19657   */\n      tag_306\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":19682:19684   */\n      0x20\n        /* \"#utility.yul\":19677:19680   */\n      dup3\n        /* \"#utility.yul\":19673:19685   */\n      add\n        /* \"#utility.yul\":19666:19685   */\n      swap1\n      pop\n        /* \"#utility.yul\":19325:19691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19697:20116   */\n    tag_188:\n        /* \"#utility.yul\":19863:19867   */\n      0x00\n        /* \"#utility.yul\":19901:19903   */\n      0x20\n        /* \"#utility.yul\":19890:19899   */\n      dup3\n        /* \"#utility.yul\":19886:19904   */\n      add\n        /* \"#utility.yul\":19878:19904   */\n      swap1\n      pop\n        /* \"#utility.yul\":19950:19959   */\n      dup2\n        /* \"#utility.yul\":19944:19948   */\n      dup2\n        /* \"#utility.yul\":19940:19960   */\n      sub\n        /* \"#utility.yul\":19936:19937   */\n      0x00\n        /* \"#utility.yul\":19925:19934   */\n      dup4\n        /* \"#utility.yul\":19921:19938   */\n      add\n        /* \"#utility.yul\":19914:19961   */\n      mstore\n        /* \"#utility.yul\":19978:20109   */\n      tag_497\n        /* \"#utility.yul\":20104:20108   */\n      dup2\n        /* \"#utility.yul\":19978:20109   */\n      tag_307\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":19970:20109   */\n      swap1\n      pop\n        /* \"#utility.yul\":19697:20116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20122:20359   */\n    tag_308:\n        /* \"#utility.yul\":20262:20296   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":20258:20259   */\n      0x00\n        /* \"#utility.yul\":20250:20256   */\n      dup3\n        /* \"#utility.yul\":20246:20260   */\n      add\n        /* \"#utility.yul\":20239:20297   */\n      mstore\n        /* \"#utility.yul\":20331:20351   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":20326:20328   */\n      0x20\n        /* \"#utility.yul\":20318:20324   */\n      dup3\n        /* \"#utility.yul\":20314:20329   */\n      add\n        /* \"#utility.yul\":20307:20352   */\n      mstore\n        /* \"#utility.yul\":20122:20359   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20365:20731   */\n    tag_309:\n        /* \"#utility.yul\":20507:20510   */\n      0x00\n        /* \"#utility.yul\":20528:20595   */\n      tag_500\n        /* \"#utility.yul\":20592:20594   */\n      0x32\n        /* \"#utility.yul\":20587:20590   */\n      dup4\n        /* \"#utility.yul\":20528:20595   */\n      tag_266\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":20521:20595   */\n      swap2\n      pop\n        /* \"#utility.yul\":20604:20697   */\n      tag_501\n        /* \"#utility.yul\":20693:20696   */\n      dup3\n        /* \"#utility.yul\":20604:20697   */\n      tag_308\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":20722:20724   */\n      0x40\n        /* \"#utility.yul\":20717:20720   */\n      dup3\n        /* \"#utility.yul\":20713:20725   */\n      add\n        /* \"#utility.yul\":20706:20725   */\n      swap1\n      pop\n        /* \"#utility.yul\":20365:20731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20737:21156   */\n    tag_196:\n        /* \"#utility.yul\":20903:20907   */\n      0x00\n        /* \"#utility.yul\":20941:20943   */\n      0x20\n        /* \"#utility.yul\":20930:20939   */\n      dup3\n        /* \"#utility.yul\":20926:20944   */\n      add\n        /* \"#utility.yul\":20918:20944   */\n      swap1\n      pop\n        /* \"#utility.yul\":20990:20999   */\n      dup2\n        /* \"#utility.yul\":20984:20988   */\n      dup2\n        /* \"#utility.yul\":20980:21000   */\n      sub\n        /* \"#utility.yul\":20976:20977   */\n      0x00\n        /* \"#utility.yul\":20965:20974   */\n      dup4\n        /* \"#utility.yul\":20961:20978   */\n      add\n        /* \"#utility.yul\":20954:21001   */\n      mstore\n        /* \"#utility.yul\":21018:21149   */\n      tag_503\n        /* \"#utility.yul\":21144:21148   */\n      dup2\n        /* \"#utility.yul\":21018:21149   */\n      tag_309\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":21010:21149   */\n      swap1\n      pop\n        /* \"#utility.yul\":20737:21156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21162:21342   */\n    tag_209:\n        /* \"#utility.yul\":21210:21287   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21207:21208   */\n      0x00\n        /* \"#utility.yul\":21200:21288   */\n      mstore\n        /* \"#utility.yul\":21307:21311   */\n      0x12\n        /* \"#utility.yul\":21304:21305   */\n      0x04\n        /* \"#utility.yul\":21297:21312   */\n      mstore\n        /* \"#utility.yul\":21331:21335   */\n      0x24\n        /* \"#utility.yul\":21328:21329   */\n      0x00\n        /* \"#utility.yul\":21321:21336   */\n      revert\n        /* \"#utility.yul\":21348:21446   */\n    tag_310:\n        /* \"#utility.yul\":21399:21405   */\n      0x00\n        /* \"#utility.yul\":21433:21438   */\n      dup2\n        /* \"#utility.yul\":21427:21439   */\n      mload\n        /* \"#utility.yul\":21417:21439   */\n      swap1\n      pop\n        /* \"#utility.yul\":21348:21446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21452:21620   */\n    tag_311:\n        /* \"#utility.yul\":21535:21546   */\n      0x00\n        /* \"#utility.yul\":21569:21575   */\n      dup3\n        /* \"#utility.yul\":21564:21567   */\n      dup3\n        /* \"#utility.yul\":21557:21576   */\n      mstore\n        /* \"#utility.yul\":21609:21613   */\n      0x20\n        /* \"#utility.yul\":21604:21607   */\n      dup3\n        /* \"#utility.yul\":21600:21614   */\n      add\n        /* \"#utility.yul\":21585:21614   */\n      swap1\n      pop\n        /* \"#utility.yul\":21452:21620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21626:21999   */\n    tag_312:\n        /* \"#utility.yul\":21712:21715   */\n      0x00\n        /* \"#utility.yul\":21740:21778   */\n      tag_508\n        /* \"#utility.yul\":21772:21777   */\n      dup3\n        /* \"#utility.yul\":21740:21778   */\n      tag_310\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":21794:21864   */\n      tag_509\n        /* \"#utility.yul\":21857:21863   */\n      dup2\n        /* \"#utility.yul\":21852:21855   */\n      dup6\n        /* \"#utility.yul\":21794:21864   */\n      tag_311\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":21787:21864   */\n      swap4\n      pop\n        /* \"#utility.yul\":21873:21938   */\n      tag_510\n        /* \"#utility.yul\":21931:21937   */\n      dup2\n        /* \"#utility.yul\":21926:21929   */\n      dup6\n        /* \"#utility.yul\":21919:21923   */\n      0x20\n        /* \"#utility.yul\":21912:21917   */\n      dup7\n        /* \"#utility.yul\":21908:21924   */\n      add\n        /* \"#utility.yul\":21873:21938   */\n      tag_267\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":21963:21992   */\n      tag_511\n        /* \"#utility.yul\":21985:21991   */\n      dup2\n        /* \"#utility.yul\":21963:21992   */\n      tag_268\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":21958:21961   */\n      dup5\n        /* \"#utility.yul\":21954:21993   */\n      add\n        /* \"#utility.yul\":21947:21993   */\n      swap2\n      pop\n        /* \"#utility.yul\":21716:21999   */\n      pop\n        /* \"#utility.yul\":21626:21999   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22005:22645   */\n    tag_221:\n        /* \"#utility.yul\":22200:22204   */\n      0x00\n        /* \"#utility.yul\":22238:22241   */\n      0x80\n        /* \"#utility.yul\":22227:22236   */\n      dup3\n        /* \"#utility.yul\":22223:22242   */\n      add\n        /* \"#utility.yul\":22215:22242   */\n      swap1\n      pop\n        /* \"#utility.yul\":22252:22323   */\n      tag_513\n        /* \"#utility.yul\":22320:22321   */\n      0x00\n        /* \"#utility.yul\":22309:22318   */\n      dup4\n        /* \"#utility.yul\":22305:22322   */\n      add\n        /* \"#utility.yul\":22296:22302   */\n      dup8\n        /* \"#utility.yul\":22252:22323   */\n      tag_275\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":22333:22405   */\n      tag_514\n        /* \"#utility.yul\":22401:22403   */\n      0x20\n        /* \"#utility.yul\":22390:22399   */\n      dup4\n        /* \"#utility.yul\":22386:22404   */\n      add\n        /* \"#utility.yul\":22377:22383   */\n      dup7\n        /* \"#utility.yul\":22333:22405   */\n      tag_275\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":22415:22487   */\n      tag_515\n        /* \"#utility.yul\":22483:22485   */\n      0x40\n        /* \"#utility.yul\":22472:22481   */\n      dup4\n        /* \"#utility.yul\":22468:22486   */\n      add\n        /* \"#utility.yul\":22459:22465   */\n      dup6\n        /* \"#utility.yul\":22415:22487   */\n      tag_278\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":22534:22543   */\n      dup2\n        /* \"#utility.yul\":22528:22532   */\n      dup2\n        /* \"#utility.yul\":22524:22544   */\n      sub\n        /* \"#utility.yul\":22519:22521   */\n      0x60\n        /* \"#utility.yul\":22508:22517   */\n      dup4\n        /* \"#utility.yul\":22504:22522   */\n      add\n        /* \"#utility.yul\":22497:22545   */\n      mstore\n        /* \"#utility.yul\":22562:22638   */\n      tag_516\n        /* \"#utility.yul\":22633:22637   */\n      dup2\n        /* \"#utility.yul\":22624:22630   */\n      dup5\n        /* \"#utility.yul\":22562:22638   */\n      tag_312\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":22554:22638   */\n      swap1\n      pop\n        /* \"#utility.yul\":22005:22645   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22651:22792   */\n    tag_313:\n        /* \"#utility.yul\":22707:22712   */\n      0x00\n        /* \"#utility.yul\":22738:22744   */\n      dup2\n        /* \"#utility.yul\":22732:22745   */\n      mload\n        /* \"#utility.yul\":22723:22745   */\n      swap1\n      pop\n        /* \"#utility.yul\":22754:22786   */\n      tag_518\n        /* \"#utility.yul\":22780:22785   */\n      dup2\n        /* \"#utility.yul\":22754:22786   */\n      tag_261\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":22651:22792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22798:23147   */\n    tag_224:\n        /* \"#utility.yul\":22867:22873   */\n      0x00\n        /* \"#utility.yul\":22916:22918   */\n      0x20\n        /* \"#utility.yul\":22904:22913   */\n      dup3\n        /* \"#utility.yul\":22895:22902   */\n      dup5\n        /* \"#utility.yul\":22891:22914   */\n      sub\n        /* \"#utility.yul\":22887:22919   */\n      slt\n        /* \"#utility.yul\":22884:23003   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":22922:23001   */\n      tag_521\n      tag_258\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":22884:23003   */\n    tag_520:\n        /* \"#utility.yul\":23042:23043   */\n      0x00\n        /* \"#utility.yul\":23067:23130   */\n      tag_522\n        /* \"#utility.yul\":23122:23129   */\n      dup5\n        /* \"#utility.yul\":23113:23119   */\n      dup3\n        /* \"#utility.yul\":23102:23111   */\n      dup6\n        /* \"#utility.yul\":23098:23120   */\n      add\n        /* \"#utility.yul\":23067:23130   */\n      tag_313\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":23057:23130   */\n      swap2\n      pop\n        /* \"#utility.yul\":23013:23140   */\n      pop\n        /* \"#utility.yul\":22798:23147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e057a897c42544d0c32fe7242e23c348f32144531c56a3c806c8251f6895e1d664736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1651": {
									"entryPoint": null,
									"id": 1651,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:10",
																"statements": []
															},
															"src": "1701:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"src": "1610:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:10"
															},
															"nodeType": "YulIf",
															"src": "2117:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:10",
														"type": ""
													}
												],
												"src": "1862:434:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:10"
															},
															"nodeType": "YulIf",
															"src": "2399:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:10",
														"type": ""
													}
												],
												"src": "2316:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:10"
															},
															"nodeType": "YulIf",
															"src": "2801:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:10",
														"type": ""
													}
												],
												"src": "2677:853:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:10",
														"type": ""
													}
												],
												"src": "3536:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:10"
															},
															"nodeType": "YulIf",
															"src": "3966:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:10"
															},
															"nodeType": "YulIf",
															"src": "4057:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:10",
														"type": ""
													}
												],
												"src": "3827:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:10",
														"type": ""
													}
												],
												"src": "4153:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:10",
														"type": ""
													}
												],
												"src": "4300:93:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:10",
														"type": ""
													}
												],
												"src": "4399:107:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:10"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:10",
														"type": ""
													}
												],
												"src": "4512:393:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:10",
														"type": ""
													}
												],
												"src": "4911:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:10",
														"type": ""
													}
												],
												"src": "4994:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:10",
														"type": ""
													}
												],
												"src": "5060:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:10",
														"type": ""
													}
												],
												"src": "5208:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:10",
														"type": ""
													}
												],
												"src": "5289:269:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:10",
														"type": ""
													}
												],
												"src": "5564:73:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:10",
														"type": ""
													}
												],
												"src": "5643:189:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:10",
																"statements": []
															},
															"src": "5898:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:10",
														"type": ""
													}
												],
												"src": "5838:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:10",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:10"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:10"
															},
															"nodeType": "YulIf",
															"src": "6120:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:10",
														"type": ""
													}
												],
												"src": "6030:543:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:10",
														"type": ""
													}
												],
												"src": "6579:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:10"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:10",
														"type": ""
													}
												],
												"src": "6702:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:10"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:10",
														"type": ""
													}
												],
												"src": "6876:295:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:10"
															},
															"nodeType": "YulIf",
															"src": "7381:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:10",
																					"statements": []
																				},
																				"src": "7867:208:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:10"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:10"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:10",
														"type": ""
													}
												],
												"src": "7176:1395:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620026dd380380620026dd8339818101604052810190620000379190620001f6565b8160009081620000489190620004c6565b5080600190816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61212080620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906114f4565b6102bc565b6040516100fb919061153c565b60405180910390f35b61010c61039e565b60405161011991906115e7565b60405180910390f35b61013c6004803603810190610137919061163f565b610430565b60405161014991906116ad565b60405180910390f35b61016c600480360381019061016791906116f4565b610476565b005b61018860048036038101906101839190611734565b61058d565b005b6101a4600480360381019061019f9190611734565b6105ed565b005b6101c060048036038101906101bb919061163f565b61060d565b6040516101cd91906116ad565b60405180910390f35b6101f060048036038101906101eb9190611787565b610693565b6040516101fd91906117c3565b60405180910390f35b61020e61074a565b60405161021b91906115e7565b60405180910390f35b61023e6004803603810190610239919061180a565b6107dc565b005b61025a6004803603810190610255919061197f565b6107f2565b005b6102766004803603810190610271919061163f565b610854565b60405161028391906115e7565b60405180910390f35b6102a660048036038101906102a19190611a02565b6108bc565b6040516102b3919061153c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610950565b5b9050919050565b6060600080546103ad90611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a71565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109ba565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611b14565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610a05565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610a05565b6108bc565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611ba6565b60405180910390fd5b6105888383610a0d565b505050565b61059e610598610a05565b82610ac6565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611c38565b60405180910390fd5b6105e8838383610b5b565b505050565b610608838383604051806020016040528060008152506107f2565b505050565b60008061061983610e54565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611ca4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611d36565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075990611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461078590611a71565b80156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b5050505050905090565b6107ee6107e7610a05565b8383610e91565b5050565b6108036107fd610a05565b83610ac6565b610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990611c38565b60405180910390fd5b61084e84848484610ffd565b50505050565b606061085f826109ba565b6000610869611059565b9050600081511161088957604051806020016040528060008152506108b4565b8061089384611070565b6040516020016108a4929190611d92565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c38161113e565b610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611ca4565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a808361060d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad28361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b145750610b1381856108bc565b5b80610b5257508373ffffffffffffffffffffffffffffffffffffffff16610b3a84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7b8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890611e28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611eba565b60405180910390fd5b610c4d838383600161117f565b8273ffffffffffffffffffffffffffffffffffffffff16610c6d8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cba90611e28565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e4f8383836001611185565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690611f26565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff0919061153c565b60405180910390a3505050565b611008848484610b5b565b6110148484848461118b565b611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611fb8565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161107f84611312565b01905060008167ffffffffffffffff81111561109e5761109d611854565b5b6040519080825280601f01601f1916602001820160405280156110d05781602001600182028036833780820191505090505b509050600082602001820190505b600115611133578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112757611126611fd8565b5b049450600085036110de575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116083610e54565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111ac8473ffffffffffffffffffffffffffffffffffffffff16611465565b15611305578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d5610a05565b8786866040518563ffffffff1660e01b81526004016111f7949392919061205c565b6020604051808303816000875af192505050801561123357506040513d601f19601f8201168201806040525081019061123091906120bd565b60015b6112b5573d8060008114611263576040519150601f19603f3d011682016040523d82523d6000602084013e611268565b606091505b5060008151036112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490611fb8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061130a565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611370577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161136657611365611fd8565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113ad576d04ee2d6d415b85acef810000000083816113a3576113a2611fd8565b5b0492506020810190505b662386f26fc1000083106113dc57662386f26fc1000083816113d2576113d1611fd8565b5b0492506010810190505b6305f5e1008310611405576305f5e10083816113fb576113fa611fd8565b5b0492506008810190505b612710831061142a5761271083816114205761141f611fd8565b5b0492506004810190505b6064831061144d576064838161144357611442611fd8565b5b0492506002810190505b600a831061145c576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d18161149c565b81146114dc57600080fd5b50565b6000813590506114ee816114c8565b92915050565b60006020828403121561150a57611509611492565b5b6000611518848285016114df565b91505092915050565b60008115159050919050565b61153681611521565b82525050565b6000602082019050611551600083018461152d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611591578082015181840152602081019050611576565b60008484015250505050565b6000601f19601f8301169050919050565b60006115b982611557565b6115c38185611562565b93506115d3818560208601611573565b6115dc8161159d565b840191505092915050565b6000602082019050818103600083015261160181846115ae565b905092915050565b6000819050919050565b61161c81611609565b811461162757600080fd5b50565b60008135905061163981611613565b92915050565b60006020828403121561165557611654611492565b5b60006116638482850161162a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116978261166c565b9050919050565b6116a78161168c565b82525050565b60006020820190506116c2600083018461169e565b92915050565b6116d18161168c565b81146116dc57600080fd5b50565b6000813590506116ee816116c8565b92915050565b6000806040838503121561170b5761170a611492565b5b6000611719858286016116df565b925050602061172a8582860161162a565b9150509250929050565b60008060006060848603121561174d5761174c611492565b5b600061175b868287016116df565b935050602061176c868287016116df565b925050604061177d8682870161162a565b9150509250925092565b60006020828403121561179d5761179c611492565b5b60006117ab848285016116df565b91505092915050565b6117bd81611609565b82525050565b60006020820190506117d860008301846117b4565b92915050565b6117e781611521565b81146117f257600080fd5b50565b600081359050611804816117de565b92915050565b6000806040838503121561182157611820611492565b5b600061182f858286016116df565b9250506020611840858286016117f5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61188c8261159d565b810181811067ffffffffffffffff821117156118ab576118aa611854565b5b80604052505050565b60006118be611488565b90506118ca8282611883565b919050565b600067ffffffffffffffff8211156118ea576118e9611854565b5b6118f38261159d565b9050602081019050919050565b82818337600083830152505050565b600061192261191d846118cf565b6118b4565b90508281526020810184848401111561193e5761193d61184f565b5b611949848285611900565b509392505050565b600082601f8301126119665761196561184a565b5b813561197684826020860161190f565b91505092915050565b6000806000806080858703121561199957611998611492565b5b60006119a7878288016116df565b94505060206119b8878288016116df565b93505060406119c98782880161162a565b925050606085013567ffffffffffffffff8111156119ea576119e9611497565b5b6119f687828801611951565b91505092959194509250565b60008060408385031215611a1957611a18611492565b5b6000611a27858286016116df565b9250506020611a38858286016116df565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a8957607f821691505b602082108103611a9c57611a9b611a42565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611afe602183611562565b9150611b0982611aa2565b604082019050919050565b60006020820190508181036000830152611b2d81611af1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611b90603d83611562565b9150611b9b82611b34565b604082019050919050565b60006020820190508181036000830152611bbf81611b83565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c22602d83611562565b9150611c2d82611bc6565b604082019050919050565b60006020820190508181036000830152611c5181611c15565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611c8e601883611562565b9150611c9982611c58565b602082019050919050565b60006020820190508181036000830152611cbd81611c81565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d20602983611562565b9150611d2b82611cc4565b604082019050919050565b60006020820190508181036000830152611d4f81611d13565b9050919050565b600081905092915050565b6000611d6c82611557565b611d768185611d56565b9350611d86818560208601611573565b80840191505092915050565b6000611d9e8285611d61565b9150611daa8284611d61565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e12602583611562565b9150611e1d82611db6565b604082019050919050565b60006020820190508181036000830152611e4181611e05565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ea4602483611562565b9150611eaf82611e48565b604082019050919050565b60006020820190508181036000830152611ed381611e97565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f10601983611562565b9150611f1b82611eda565b602082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fa2603283611562565b9150611fad82611f46565b604082019050919050565b60006020820190508181036000830152611fd181611f95565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061202e82612007565b6120388185612012565b9350612048818560208601611573565b6120518161159d565b840191505092915050565b6000608082019050612071600083018761169e565b61207e602083018661169e565b61208b60408301856117b4565b818103606083015261209d8184612023565b905095945050505050565b6000815190506120b7816114c8565b92915050565b6000602082840312156120d3576120d2611492565b5b60006120e1848285016120a8565b9150509291505056fea2646970667358221220e057a897c42544d0c32fe7242e23c348f32144531c56a3c806c8251f6895e1d664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26DD CODESIZE SUB DUP1 PUSH3 0x26DD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2120 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x950 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA05 JUMP JUMPDEST DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x785 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x7E7 PUSH2 0xA05 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7FD PUSH2 0xA05 JUMP JUMPDEST DUP4 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85F DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH2 0x893 DUP5 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x113E JUMP JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA80 DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB14 JUMPI POP PUSH2 0xB13 DUP2 DUP6 PUSH2 0x8BC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB52 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE4F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1008 DUP5 DUP5 DUP5 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x107F DUP5 PUSH2 0x1312 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1133 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10DE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1160 DUP4 PUSH2 0xE54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1465 JUMP JUMPDEST ISZERO PUSH2 0x1305 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D5 PUSH2 0xA05 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1233 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x130A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1370 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13AD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13DC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1405 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x142A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x144D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x145C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EE DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1518 DUP5 DUP3 DUP6 ADD PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1591 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x15C3 DUP2 DUP6 PUSH2 0x1562 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 DUP5 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP5 DUP3 DUP6 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP3 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EE DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172A DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175B DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x176C DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x177D DUP7 DUP3 DUP8 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x188C DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1854 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CA DUP3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH2 0x18F3 DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 PUSH2 0x191D DUP5 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP5 DUP3 DUP6 PUSH2 0x1900 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x184A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1976 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19B8 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19C9 DUP8 DUP3 DUP9 ADD PUSH2 0x162A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP8 DUP3 DUP9 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE PUSH1 0x21 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B09 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2D DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x3D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C22 PUSH1 0x2D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C51 DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x18 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x29 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6C DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1D76 DUP2 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D86 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 DUP6 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x25 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x24 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x19 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x32 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAD DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x2038 DUP2 DUP6 PUSH2 0x2012 JUMP JUMPDEST SWAP4 POP PUSH2 0x2048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x2051 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x208B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x209D DUP2 DUP5 PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20B7 DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D2 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E1 DUP5 DUP3 DUP6 ADD PUSH2 0x20A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 JUMPI 0xA8 SWAP8 0xC4 0x25 PREVRANDAO 0xD0 0xC3 0x2F 0xE7 0x24 0x2E 0x23 0xC3 BASEFEE RETURN 0x21 PREVRANDAO MSTORE8 SHR JUMP LOG3 0xC8 MOD 0xC8 0x25 0x1F PUSH9 0x95E1D664736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "823:17166:9:-:0;;;1610:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1685:5;1677;:13;;;;;;:::i;:::-;;1711:7;1701;:17;;;;;;:::i;:::-;;1610:116;;823:17166;;7:75:10;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;823:17166:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_2499": {
									"entryPoint": 4485,
									"id": 2499,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_2365": {
									"entryPoint": 2573,
									"id": 2365,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_1802": {
									"entryPoint": 4185,
									"id": 1802,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_2486": {
									"entryPoint": 4479,
									"id": 2486,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2473": {
									"entryPoint": 4491,
									"id": 2473,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_2034": {
									"entryPoint": 4414,
									"id": 2034,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_2068": {
									"entryPoint": 2758,
									"id": 2068,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_502": {
									"entryPoint": 2565,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2016": {
									"entryPoint": 3668,
									"id": 2016,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_2411": {
									"entryPoint": 2490,
									"id": 2411,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_2003": {
									"entryPoint": 4093,
									"id": 2003,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2397": {
									"entryPoint": 3729,
									"id": 2397,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_2341": {
									"entryPoint": 2907,
									"id": 2341,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1845": {
									"entryPoint": 1142,
									"id": 1845,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1706": {
									"entryPoint": 1683,
									"id": 1706,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1863": {
									"entryPoint": 1072,
									"id": 1863,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1898": {
									"entryPoint": 2236,
									"id": 1898,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_178": {
									"entryPoint": 5221,
									"id": 178,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_1425": {
									"entryPoint": 4882,
									"id": 1425,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1744": {
									"entryPoint": 926,
									"id": 1744,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1734": {
									"entryPoint": 1549,
									"id": 1734,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1944": {
									"entryPoint": 1517,
									"id": 1944,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1974": {
									"entryPoint": 2034,
									"id": 1974,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1880": {
									"entryPoint": 2012,
									"id": 1880,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1682": {
									"entryPoint": 700,
									"id": 1682,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_710": {
									"entryPoint": 2384,
									"id": 710,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1754": {
									"entryPoint": 1866,
									"id": 1754,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_570": {
									"entryPoint": 4208,
									"id": 570,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1793": {
									"entryPoint": 2132,
									"id": 1793,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_1925": {
									"entryPoint": 1421,
									"id": 1925,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7570,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8284,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5256,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af": {
									"entryPoint": 7110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 8006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 7898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159": {
									"entryPoint": 7364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f": {
									"entryPoint": 7256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 6818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:23150:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:10",
														"type": ""
													}
												],
												"src": "334:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:10"
															},
															"nodeType": "YulIf",
															"src": "541:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:10",
														"type": ""
													}
												],
												"src": "489:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:10",
														"type": ""
													}
												],
												"src": "615:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:10"
															},
															"nodeType": "YulIf",
															"src": "833:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:10",
														"type": ""
													}
												],
												"src": "758:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:10",
														"type": ""
													}
												],
												"src": "1091:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:10",
														"type": ""
													}
												],
												"src": "1187:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:10",
														"type": ""
													}
												],
												"src": "1302:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:10",
														"type": ""
													}
												],
												"src": "1518:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:10",
														"type": ""
													}
												],
												"src": "1623:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:10",
																"statements": []
															},
															"src": "1889:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:10",
														"type": ""
													}
												],
												"src": "1798:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:10",
														"type": ""
													}
												],
												"src": "2050:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:10",
														"type": ""
													}
												],
												"src": "2158:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:10",
														"type": ""
													}
												],
												"src": "2541:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:10",
														"type": ""
													}
												],
												"src": "2860:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:10"
															},
															"nodeType": "YulIf",
															"src": "2996:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:10",
														"type": ""
													}
												],
												"src": "2943:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:10",
														"type": ""
													}
												],
												"src": "3071:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:10"
															},
															"nodeType": "YulIf",
															"src": "3292:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:10",
														"type": ""
													}
												],
												"src": "3216:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:10",
														"type": ""
													}
												],
												"src": "3551:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:10",
														"type": ""
													}
												],
												"src": "3683:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:10",
														"type": ""
													}
												],
												"src": "3785:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:10",
														"type": ""
													}
												],
												"src": "3909:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:10"
															},
															"nodeType": "YulIf",
															"src": "4190:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:10",
														"type": ""
													}
												],
												"src": "4137:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:10",
														"type": ""
													}
												],
												"src": "4265:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:10"
															},
															"nodeType": "YulIf",
															"src": "4503:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:10",
														"type": ""
													}
												],
												"src": "4410:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4990:519:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5036:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:32:10"
															},
															"nodeType": "YulIf",
															"src": "5000:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5129:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5173:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5256:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5301:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5384:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5429:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4955:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4975:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4983:6:10",
														"type": ""
													}
												],
												"src": "4890:619:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5581:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5627:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:32:10"
															},
															"nodeType": "YulIf",
															"src": "5591:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5720:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5764:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5551:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5562:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5574:6:10",
														"type": ""
													}
												],
												"src": "5515:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5915:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5903:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5910:3:10",
														"type": ""
													}
												],
												"src": "5850:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6072:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6082:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6044:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6056:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6067:4:10",
														"type": ""
													}
												],
												"src": "5974:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:10"
															},
															"nodeType": "YulIf",
															"src": "6252:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:10",
														"type": ""
													}
												],
												"src": "6202:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:10",
														"type": ""
													}
												],
												"src": "6324:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:10"
															},
															"nodeType": "YulIf",
															"src": "6553:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:10",
														"type": ""
													}
												],
												"src": "6463:468:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:10"
															},
															"nodeType": "YulIf",
															"src": "7525:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:10",
														"type": ""
													}
												],
												"src": "7369:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:10",
														"type": ""
													}
												],
												"src": "7656:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:10"
															},
															"nodeType": "YulIf",
															"src": "7928:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:10",
														"type": ""
													}
												],
												"src": "7791:307:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:10",
														"type": ""
													}
												],
												"src": "8104:146:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:10"
															},
															"nodeType": "YulIf",
															"src": "8498:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:10",
														"type": ""
													}
												],
												"src": "8256:423:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:10"
															},
															"nodeType": "YulIf",
															"src": "8769:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:10",
														"type": ""
													}
												],
												"src": "8698:338:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:10"
															},
															"nodeType": "YulIf",
															"src": "9178:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:10",
														"type": ""
													}
												],
												"src": "9042:943:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:10"
															},
															"nodeType": "YulIf",
															"src": "10084:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:10",
														"type": ""
													}
												],
												"src": "9991:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:10"
															},
															"nodeType": "YulIf",
															"src": "10796:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:10"
															},
															"nodeType": "YulIf",
															"src": "10887:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:10",
														"type": ""
													}
												],
												"src": "10657:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11089:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11111:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11119:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11107:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11107:14:10"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11123:34:10",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11100:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11187:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11175:15:10"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11192:3:10",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11168:28:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11168:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11081:6:10",
														"type": ""
													}
												],
												"src": "10983:220:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11355:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11365:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11431:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11436:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11372:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11372:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11365:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11537:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nodeType": "YulIdentifier",
																	"src": "11448:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11448:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11448:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11550:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11561:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11566:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11557:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11557:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11550:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11343:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11351:3:10",
														"type": ""
													}
												],
												"src": "11209:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11752:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11762:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11774:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11785:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11770:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11770:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11762:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11809:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11820:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11805:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11805:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11828:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11834:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11824:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11824:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11798:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11798:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11798:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11854:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11988:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11862:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11862:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11854:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11732:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11747:4:10",
														"type": ""
													}
												],
												"src": "11581:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12112:142:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12134:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12142:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12130:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12130:14:10"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12146:34:10",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12123:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12123:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12123:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12202:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12210:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12198:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12198:15:10"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12215:31:10",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12191:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12191:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12191:56:10"
														}
													]
												},
												"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12104:6:10",
														"type": ""
													}
												],
												"src": "12006:248:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12406:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12416:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12482:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12487:2:10",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12423:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12416:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12588:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																	"nodeType": "YulIdentifier",
																	"src": "12499:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12499:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12601:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12612:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12617:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12608:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12608:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12601:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12394:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12402:3:10",
														"type": ""
													}
												],
												"src": "12260:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12803:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12813:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12825:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12821:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12821:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12813:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12871:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12856:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12879:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12885:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12875:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12875:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12849:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12849:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12905:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13039:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12913:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12905:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12783:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12798:4:10",
														"type": ""
													}
												],
												"src": "12632:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13163:126:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13185:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13193:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13181:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13181:14:10"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13197:34:10",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13174:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13174:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13174:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13253:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13261:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13249:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13249:15:10"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13266:15:10",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13242:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13242:40:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13242:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13155:6:10",
														"type": ""
													}
												],
												"src": "13057:232:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13441:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13451:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13517:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13522:2:10",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13458:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13458:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13451:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13623:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																	"nodeType": "YulIdentifier",
																	"src": "13534:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13534:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13534:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13636:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13647:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13652:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13643:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13643:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13636:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13429:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13437:3:10",
														"type": ""
													}
												],
												"src": "13295:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13838:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13848:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13860:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13871:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13856:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13856:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13848:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13895:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13906:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13891:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13891:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13914:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13920:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13910:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13910:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13884:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13884:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13884:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13940:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14074:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13948:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13948:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13940:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13818:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13833:4:10",
														"type": ""
													}
												],
												"src": "13667:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14198:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14220:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14228:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14216:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14216:14:10"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14232:26:10",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14209:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14209:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14209:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14190:6:10",
														"type": ""
													}
												],
												"src": "14092:174:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14418:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14428:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14494:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14499:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14435:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14435:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14428:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14600:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																	"nodeType": "YulIdentifier",
																	"src": "14511:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14511:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14511:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14613:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14624:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14629:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14620:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14620:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14613:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14406:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14414:3:10",
														"type": ""
													}
												],
												"src": "14272:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14815:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14825:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14837:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14848:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14833:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14833:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14825:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14872:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14883:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14868:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14868:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14891:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14897:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14887:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14887:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14861:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14861:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14861:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14917:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15051:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14925:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14925:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14917:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14795:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14810:4:10",
														"type": ""
													}
												],
												"src": "14644:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15175:122:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15197:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15205:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15193:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15193:14:10"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15209:34:10",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15186:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15186:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15186:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15265:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15273:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15261:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15261:15:10"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15278:11:10",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15254:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15254:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15254:36:10"
														}
													]
												},
												"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15167:6:10",
														"type": ""
													}
												],
												"src": "15069:228:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15449:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15459:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15525:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15530:2:10",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15466:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15466:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15459:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15631:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																	"nodeType": "YulIdentifier",
																	"src": "15542:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15542:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15542:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15644:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15655:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15660:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15651:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15651:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15644:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15437:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15445:3:10",
														"type": ""
													}
												],
												"src": "15303:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15846:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15856:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15868:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15879:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15864:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15864:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15856:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15903:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15914:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15899:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15899:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15922:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15928:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15918:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15918:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15892:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15892:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15892:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15948:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16082:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15956:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15956:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15948:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15826:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15841:4:10",
														"type": ""
													}
												],
												"src": "15675:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16214:34:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16224:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16239:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16224:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16186:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16191:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16202:11:10",
														"type": ""
													}
												],
												"src": "16100:148:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16364:280:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16374:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16421:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16388:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16388:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16378:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16436:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16520:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16525:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16443:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16443:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16436:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16580:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16587:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16576:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16576:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16594:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16599:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16541:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16541:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16541:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16615:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16626:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16631:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16622:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16622:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16615:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16345:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16352:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16360:3:10",
														"type": ""
													}
												],
												"src": "16254:390:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16834:251:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16845:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16934:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16943:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16852:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16852:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16845:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16957:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17046:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17055:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16964:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16964:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16957:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17069:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17076:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17069:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16805:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16811:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16819:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16830:3:10",
														"type": ""
													}
												],
												"src": "16650:435:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17197:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17219:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17227:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17215:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17215:14:10"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17231:34:10",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17208:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17208:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17208:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17287:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17295:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17283:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17283:15:10"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17300:7:10",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17276:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17276:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17276:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17189:6:10",
														"type": ""
													}
												],
												"src": "17091:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17467:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17477:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17543:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17548:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17484:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17484:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17477:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17649:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																	"nodeType": "YulIdentifier",
																	"src": "17560:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17560:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17560:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17662:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17673:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17678:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17669:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17669:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17662:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17455:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17463:3:10",
														"type": ""
													}
												],
												"src": "17321:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17864:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17874:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17886:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17897:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17882:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17882:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17921:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17932:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17917:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17917:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17940:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17946:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17936:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17936:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17910:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17910:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17910:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17966:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18100:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17974:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17974:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17966:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17844:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17859:4:10",
														"type": ""
													}
												],
												"src": "17693:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18224:117:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18246:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18254:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18242:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18242:14:10"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18258:34:10",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18235:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18235:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18235:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18314:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18322:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18310:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18310:15:10"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18327:6:10",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18303:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18303:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18303:31:10"
														}
													]
												},
												"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18216:6:10",
														"type": ""
													}
												],
												"src": "18118:223:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18493:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18503:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18569:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18574:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18510:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18510:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18503:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18675:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																	"nodeType": "YulIdentifier",
																	"src": "18586:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18586:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18586:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18688:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18699:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18704:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18695:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18695:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18688:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18481:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18489:3:10",
														"type": ""
													}
												],
												"src": "18347:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18890:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18900:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18912:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18923:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18908:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18908:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18900:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18947:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18958:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18943:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18943:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18966:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18972:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18962:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18962:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18936:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18936:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18936:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18992:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19126:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19000:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19000:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18992:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18870:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18885:4:10",
														"type": ""
													}
												],
												"src": "18719:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19250:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19272:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19280:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19268:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19268:14:10"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19284:27:10",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19261:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19261:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19261:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19242:6:10",
														"type": ""
													}
												],
												"src": "19144:175:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19471:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19481:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19547:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19552:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19488:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19488:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19481:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19653:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nodeType": "YulIdentifier",
																	"src": "19564:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19564:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19564:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19666:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19677:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19682:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19673:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19673:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19666:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19459:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19467:3:10",
														"type": ""
													}
												],
												"src": "19325:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19868:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19878:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19890:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19901:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19886:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19886:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19878:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19925:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19936:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19921:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19921:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19944:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19950:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19940:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19940:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19914:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19914:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19914:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19970:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20104:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19978:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19978:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19970:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19848:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19863:4:10",
														"type": ""
													}
												],
												"src": "19697:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20228:131:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20250:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20258:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20246:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20246:14:10"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20262:34:10",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20239:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20239:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20239:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20318:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20326:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20314:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20314:15:10"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20331:20:10",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20307:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20307:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20307:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20220:6:10",
														"type": ""
													}
												],
												"src": "20122:237:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20511:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20521:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20587:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20592:2:10",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20528:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20528:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20521:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20693:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nodeType": "YulIdentifier",
																	"src": "20604:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20604:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20604:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20706:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20717:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20722:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20713:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20713:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20706:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20499:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20507:3:10",
														"type": ""
													}
												],
												"src": "20365:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20908:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20918:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20930:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20941:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20926:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20926:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20918:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20965:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20976:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20961:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20961:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20984:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20990:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20980:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20980:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20954:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20954:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20954:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21010:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21144:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21018:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21018:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21010:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20888:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20903:4:10",
														"type": ""
													}
												],
												"src": "20737:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21190:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21207:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21210:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21200:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21200:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21200:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21304:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21307:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21297:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21297:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21297:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21328:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21331:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21321:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21321:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21321:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21162:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21406:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21417:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21433:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21427:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21427:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21417:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21389:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21399:6:10",
														"type": ""
													}
												],
												"src": "21348:98:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21547:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21564:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21569:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21557:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21557:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21557:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21585:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21604:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21609:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21600:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21600:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21585:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21519:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21524:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21535:11:10",
														"type": ""
													}
												],
												"src": "21452:168:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21716:283:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21726:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21772:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21740:31:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21740:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21730:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21787:77:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21852:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21857:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21794:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21794:70:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21787:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21912:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21919:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21908:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21908:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21926:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21931:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "21873:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21873:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21873:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21947:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21958:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21985:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "21963:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21963:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21954:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21954:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21947:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21697:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21704:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21712:3:10",
														"type": ""
													}
												],
												"src": "21626:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22205:440:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22215:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22227:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22238:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22223:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22223:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22215:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22296:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22309:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22320:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22305:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22252:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22252:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22252:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22377:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22390:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22401:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22386:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22386:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22333:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22333:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22333:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22459:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22472:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22483:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22468:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22468:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22415:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22415:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22415:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22508:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22519:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22504:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22528:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22534:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22524:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22524:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22497:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22497:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22497:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22554:84:10",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "22624:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22633:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22562:61:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22562:76:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22554:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22153:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "22165:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22173:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22181:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22189:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22200:4:10",
														"type": ""
													}
												],
												"src": "22005:640:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22713:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22723:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "22738:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22732:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22732:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "22723:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22780:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "22754:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22754:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22754:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "22691:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22699:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22707:5:10",
														"type": ""
													}
												],
												"src": "22651:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22874:273:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22920:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "22922:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22922:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22922:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22895:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22904:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22891:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22891:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22916:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "22887:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22887:32:10"
															},
															"nodeType": "YulIf",
															"src": "22884:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "23013:127:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "23028:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23042:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "23032:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "23057:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "23102:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "23113:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "23098:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23098:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "23122:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "23067:30:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23067:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "23057:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22844:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "22855:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22867:6:10",
														"type": ""
													}
												],
												"src": "22798:349:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906114f4565b6102bc565b6040516100fb919061153c565b60405180910390f35b61010c61039e565b60405161011991906115e7565b60405180910390f35b61013c6004803603810190610137919061163f565b610430565b60405161014991906116ad565b60405180910390f35b61016c600480360381019061016791906116f4565b610476565b005b61018860048036038101906101839190611734565b61058d565b005b6101a4600480360381019061019f9190611734565b6105ed565b005b6101c060048036038101906101bb919061163f565b61060d565b6040516101cd91906116ad565b60405180910390f35b6101f060048036038101906101eb9190611787565b610693565b6040516101fd91906117c3565b60405180910390f35b61020e61074a565b60405161021b91906115e7565b60405180910390f35b61023e6004803603810190610239919061180a565b6107dc565b005b61025a6004803603810190610255919061197f565b6107f2565b005b6102766004803603810190610271919061163f565b610854565b60405161028391906115e7565b60405180910390f35b6102a660048036038101906102a19190611a02565b6108bc565b6040516102b3919061153c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610950565b5b9050919050565b6060600080546103ad90611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a71565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109ba565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611b14565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610a05565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610a05565b6108bc565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611ba6565b60405180910390fd5b6105888383610a0d565b505050565b61059e610598610a05565b82610ac6565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611c38565b60405180910390fd5b6105e8838383610b5b565b505050565b610608838383604051806020016040528060008152506107f2565b505050565b60008061061983610e54565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611ca4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611d36565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075990611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461078590611a71565b80156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b5050505050905090565b6107ee6107e7610a05565b8383610e91565b5050565b6108036107fd610a05565b83610ac6565b610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990611c38565b60405180910390fd5b61084e84848484610ffd565b50505050565b606061085f826109ba565b6000610869611059565b9050600081511161088957604051806020016040528060008152506108b4565b8061089384611070565b6040516020016108a4929190611d92565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c38161113e565b610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611ca4565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a808361060d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad28361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b145750610b1381856108bc565b5b80610b5257508373ffffffffffffffffffffffffffffffffffffffff16610b3a84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7b8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890611e28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611eba565b60405180910390fd5b610c4d838383600161117f565b8273ffffffffffffffffffffffffffffffffffffffff16610c6d8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cba90611e28565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e4f8383836001611185565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690611f26565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff0919061153c565b60405180910390a3505050565b611008848484610b5b565b6110148484848461118b565b611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611fb8565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161107f84611312565b01905060008167ffffffffffffffff81111561109e5761109d611854565b5b6040519080825280601f01601f1916602001820160405280156110d05781602001600182028036833780820191505090505b509050600082602001820190505b600115611133578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112757611126611fd8565b5b049450600085036110de575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116083610e54565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111ac8473ffffffffffffffffffffffffffffffffffffffff16611465565b15611305578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d5610a05565b8786866040518563ffffffff1660e01b81526004016111f7949392919061205c565b6020604051808303816000875af192505050801561123357506040513d601f19601f8201168201806040525081019061123091906120bd565b60015b6112b5573d8060008114611263576040519150601f19603f3d011682016040523d82523d6000602084013e611268565b606091505b5060008151036112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490611fb8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061130a565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611370577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161136657611365611fd8565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113ad576d04ee2d6d415b85acef810000000083816113a3576113a2611fd8565b5b0492506020810190505b662386f26fc1000083106113dc57662386f26fc1000083816113d2576113d1611fd8565b5b0492506010810190505b6305f5e1008310611405576305f5e10083816113fb576113fa611fd8565b5b0492506008810190505b612710831061142a5761271083816114205761141f611fd8565b5b0492506004810190505b6064831061144d576064838161144357611442611fd8565b5b0492506002810190505b600a831061145c576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d18161149c565b81146114dc57600080fd5b50565b6000813590506114ee816114c8565b92915050565b60006020828403121561150a57611509611492565b5b6000611518848285016114df565b91505092915050565b60008115159050919050565b61153681611521565b82525050565b6000602082019050611551600083018461152d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611591578082015181840152602081019050611576565b60008484015250505050565b6000601f19601f8301169050919050565b60006115b982611557565b6115c38185611562565b93506115d3818560208601611573565b6115dc8161159d565b840191505092915050565b6000602082019050818103600083015261160181846115ae565b905092915050565b6000819050919050565b61161c81611609565b811461162757600080fd5b50565b60008135905061163981611613565b92915050565b60006020828403121561165557611654611492565b5b60006116638482850161162a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116978261166c565b9050919050565b6116a78161168c565b82525050565b60006020820190506116c2600083018461169e565b92915050565b6116d18161168c565b81146116dc57600080fd5b50565b6000813590506116ee816116c8565b92915050565b6000806040838503121561170b5761170a611492565b5b6000611719858286016116df565b925050602061172a8582860161162a565b9150509250929050565b60008060006060848603121561174d5761174c611492565b5b600061175b868287016116df565b935050602061176c868287016116df565b925050604061177d8682870161162a565b9150509250925092565b60006020828403121561179d5761179c611492565b5b60006117ab848285016116df565b91505092915050565b6117bd81611609565b82525050565b60006020820190506117d860008301846117b4565b92915050565b6117e781611521565b81146117f257600080fd5b50565b600081359050611804816117de565b92915050565b6000806040838503121561182157611820611492565b5b600061182f858286016116df565b9250506020611840858286016117f5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61188c8261159d565b810181811067ffffffffffffffff821117156118ab576118aa611854565b5b80604052505050565b60006118be611488565b90506118ca8282611883565b919050565b600067ffffffffffffffff8211156118ea576118e9611854565b5b6118f38261159d565b9050602081019050919050565b82818337600083830152505050565b600061192261191d846118cf565b6118b4565b90508281526020810184848401111561193e5761193d61184f565b5b611949848285611900565b509392505050565b600082601f8301126119665761196561184a565b5b813561197684826020860161190f565b91505092915050565b6000806000806080858703121561199957611998611492565b5b60006119a7878288016116df565b94505060206119b8878288016116df565b93505060406119c98782880161162a565b925050606085013567ffffffffffffffff8111156119ea576119e9611497565b5b6119f687828801611951565b91505092959194509250565b60008060408385031215611a1957611a18611492565b5b6000611a27858286016116df565b9250506020611a38858286016116df565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a8957607f821691505b602082108103611a9c57611a9b611a42565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611afe602183611562565b9150611b0982611aa2565b604082019050919050565b60006020820190508181036000830152611b2d81611af1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611b90603d83611562565b9150611b9b82611b34565b604082019050919050565b60006020820190508181036000830152611bbf81611b83565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c22602d83611562565b9150611c2d82611bc6565b604082019050919050565b60006020820190508181036000830152611c5181611c15565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611c8e601883611562565b9150611c9982611c58565b602082019050919050565b60006020820190508181036000830152611cbd81611c81565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d20602983611562565b9150611d2b82611cc4565b604082019050919050565b60006020820190508181036000830152611d4f81611d13565b9050919050565b600081905092915050565b6000611d6c82611557565b611d768185611d56565b9350611d86818560208601611573565b80840191505092915050565b6000611d9e8285611d61565b9150611daa8284611d61565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e12602583611562565b9150611e1d82611db6565b604082019050919050565b60006020820190508181036000830152611e4181611e05565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ea4602483611562565b9150611eaf82611e48565b604082019050919050565b60006020820190508181036000830152611ed381611e97565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f10601983611562565b9150611f1b82611eda565b602082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fa2603283611562565b9150611fad82611f46565b604082019050919050565b60006020820190508181036000830152611fd181611f95565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061202e82612007565b6120388185612012565b9350612048818560208601611573565b6120518161159d565b840191505092915050565b6000608082019050612071600083018761169e565b61207e602083018661169e565b61208b60408301856117b4565b818103606083015261209d8184612023565b905095945050505050565b6000815190506120b7816114c8565b92915050565b6000602082840312156120d3576120d2611492565b5b60006120e1848285016120a8565b9150509291505056fea2646970667358221220e057a897c42544d0c32fe7242e23c348f32144531c56a3c806c8251f6895e1d664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x950 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA05 JUMP JUMPDEST DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x785 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x7E7 PUSH2 0xA05 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7FD PUSH2 0xA05 JUMP JUMPDEST DUP4 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85F DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH2 0x893 DUP5 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x113E JUMP JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA80 DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB14 JUMPI POP PUSH2 0xB13 DUP2 DUP6 PUSH2 0x8BC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB52 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE4F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1008 DUP5 DUP5 DUP5 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x107F DUP5 PUSH2 0x1312 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1133 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10DE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1160 DUP4 PUSH2 0xE54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1465 JUMP JUMPDEST ISZERO PUSH2 0x1305 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D5 PUSH2 0xA05 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1233 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x130A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1370 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13AD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13DC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1405 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x142A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x144D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x145C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EE DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1518 DUP5 DUP3 DUP6 ADD PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1591 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x15C3 DUP2 DUP6 PUSH2 0x1562 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 DUP5 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP5 DUP3 DUP6 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP3 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EE DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172A DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175B DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x176C DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x177D DUP7 DUP3 DUP8 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x188C DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1854 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CA DUP3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH2 0x18F3 DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 PUSH2 0x191D DUP5 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP5 DUP3 DUP6 PUSH2 0x1900 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x184A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1976 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19B8 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19C9 DUP8 DUP3 DUP9 ADD PUSH2 0x162A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP8 DUP3 DUP9 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE PUSH1 0x21 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B09 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2D DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x3D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C22 PUSH1 0x2D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C51 DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x18 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x29 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6C DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1D76 DUP2 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D86 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 DUP6 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x25 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x24 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x19 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x32 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAD DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x2038 DUP2 DUP6 PUSH2 0x2012 JUMP JUMPDEST SWAP4 POP PUSH2 0x2048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x2051 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x208B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x209D DUP2 DUP5 PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20B7 DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D2 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E1 DUP5 DUP3 DUP6 ADD PUSH2 0x20A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 JUMPI 0xA8 SWAP8 0xC4 0x25 PREVRANDAO 0xD0 0xC3 0x2F 0xE7 0x24 0x2E 0x23 0xC3 BASEFEE RETURN 0x21 PREVRANDAO MSTORE8 SHR JUMP LOG3 0xC8 MOD 0xC8 0x25 0x1F PUSH9 0x95E1D664736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "823:17166:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1798:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2726:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3756:416;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4938:335;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5344:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2436:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2167:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2895:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4481:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5600:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3070:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4707:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1798:305;1900:4;1952:25;1937:40;;;:11;:40;;;;:105;;;;2009:33;1994:48;;;:11;:48;;;;1937:105;:158;;;;2059:36;2083:11;2059:23;:36::i;:::-;1937:158;1917:178;;1798:305;;;:::o;2726:100::-;2780:13;2813:5;2806:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:100;:::o;4238:171::-;4314:7;4334:23;4349:7;4334:14;:23::i;:::-;4377:15;:24;4393:7;4377:24;;;;;;;;;;;;;;;;;;;;;4370:31;;4238:171;;;:::o;3756:416::-;3837:13;3853:23;3868:7;3853:14;:23::i;:::-;3837:39;;3901:5;3895:11;;:2;:11;;;3887:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3995:5;3979:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;4004:37;4021:5;4028:12;:10;:12::i;:::-;4004:16;:37::i;:::-;3979:62;3957:173;;;;;;;;;;;;:::i;:::-;;;;;;;;;4143:21;4152:2;4156:7;4143:8;:21::i;:::-;3826:346;3756:416;;:::o;4938:335::-;5133:41;5152:12;:10;:12::i;:::-;5166:7;5133:18;:41::i;:::-;5125:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5237:28;5247:4;5253:2;5257:7;5237:9;:28::i;:::-;4938:335;;;:::o;5344:185::-;5482:39;5499:4;5505:2;5509:7;5482:39;;;;;;;;;;;;:16;:39::i;:::-;5344:185;;;:::o;2436:223::-;2508:7;2528:13;2544:17;2553:7;2544:8;:17::i;:::-;2528:33;;2597:1;2580:19;;:5;:19;;;2572:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2646:5;2639:12;;;2436:223;;;:::o;2167:207::-;2239:7;2284:1;2267:19;;:5;:19;;;2259:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2350:9;:16;2360:5;2350:16;;;;;;;;;;;;;;;;2343:23;;2167:207;;;:::o;2895:104::-;2951:13;2984:7;2977:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2895:104;:::o;4481:155::-;4576:52;4595:12;:10;:12::i;:::-;4609:8;4619;4576:18;:52::i;:::-;4481:155;;:::o;5600:322::-;5774:41;5793:12;:10;:12::i;:::-;5807:7;5774:18;:41::i;:::-;5766:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5876:38;5890:4;5896:2;5900:7;5909:4;5876:13;:38::i;:::-;5600:322;;;;:::o;3070:281::-;3143:13;3169:23;3184:7;3169:14;:23::i;:::-;3205:21;3229:10;:8;:10::i;:::-;3205:34;;3281:1;3263:7;3257:21;:25;:86;;;;;;;;;;;;;;;;;3309:7;3318:18;:7;:16;:18::i;:::-;3292:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3257:86;3250:93;;;3070:281;;;:::o;4707:164::-;4804:4;4828:18;:25;4847:5;4828:25;;;;;;;;;;;;;;;:35;4854:8;4828:35;;;;;;;;;;;;;;;;;;;;;;;;;4821:42;;4707:164;;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;14057:135:9:-;14139:16;14147:7;14139;:16::i;:::-;14131:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;14057:135;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;13336:174:9:-;13438:2;13411:15;:24;13427:7;13411:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;13494:7;13490:2;13456:46;;13465:23;13480:7;13465:14;:23::i;:::-;13456:46;;;;;;;;;;;;13336:174;;:::o;7955:264::-;8048:4;8065:13;8081:23;8096:7;8081:14;:23::i;:::-;8065:39;;8134:5;8123:16;;:7;:16;;;:52;;;;8143:32;8160:5;8167:7;8143:16;:32::i;:::-;8123:52;:87;;;;8203:7;8179:31;;:20;8191:7;8179:11;:20::i;:::-;:31;;;8123:87;8115:96;;;7955:264;;;;:::o;11954:1263::-;12113:4;12086:31;;:23;12101:7;12086:14;:23::i;:::-;:31;;;12078:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;12192:1;12178:16;;:2;:16;;;12170:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;12248:42;12269:4;12275:2;12279:7;12288:1;12248:20;:42::i;:::-;12420:4;12393:31;;:23;12408:7;12393:14;:23::i;:::-;:31;;;12385:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;12538:15;:24;12554:7;12538:24;;;;;;;;;;;;12531:31;;;;;;;;;;;13033:1;13014:9;:15;13024:4;13014:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;13066:1;13049:9;:13;13059:2;13049:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;13108:2;13089:7;:16;13097:7;13089:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;13147:7;13143:2;13128:27;;13137:4;13128:27;;;;;;;;;;;;13168:41;13188:4;13194:2;13198:7;13207:1;13168:19;:41::i;:::-;11954:1263;;;:::o;7230:117::-;7296:7;7323;:16;7331:7;7323:16;;;;;;;;;;;;;;;;;;;;;7316:23;;7230:117;;;:::o;13653:315::-;13808:8;13799:17;;:5;:17;;;13791:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13895:8;13857:18;:25;13876:5;13857:25;;;;;;;;;;;;;;;:35;13883:8;13857:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13941:8;13919:41;;13934:5;13919:41;;;13951:8;13919:41;;;;;;:::i;:::-;;;;;;;;13653:315;;;:::o;6803:313::-;6959:28;6969:4;6975:2;6979:7;6959:9;:28::i;:::-;7006:47;7029:4;7035:2;7039:7;7048:4;7006:22;:47::i;:::-;6998:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6803:313;;;;:::o;3600:94::-;3651:13;3677:9;;;;;;;;;;;;;;3600:94;:::o;415:696:5:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;788:280;1032:21;788:280;1088:6;1081:13;;;;;415:696;;;:::o;7660:128:9:-;7725:4;7778:1;7749:31;;:17;7758:7;7749:8;:17::i;:::-;:31;;;;7742:38;;7660:128;;;:::o;16341:159::-;;;;;:::o;17222:158::-;;;;;:::o;14756:853::-;14910:4;14931:15;:2;:13;;;:15::i;:::-;14927:675;;;14983:2;14967:36;;;15004:12;:10;:12::i;:::-;15018:4;15024:7;15033:4;14967:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14963:584;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15225:1;15208:6;:13;:18;15204:328;;15251:60;;;;;;;;;;:::i;:::-;;;;;;;;15204:328;15482:6;15476:13;15467:6;15463:2;15459:15;15452:38;14963:584;15099:41;;;15089:51;;;:6;:51;;;;15082:58;;;;;14927:675;15586:4;15579:11;;14756:853;;;;;;;:::o;9889:890:8:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:3:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:220::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:3;11187:2;11179:6;11175:15;11168:28;10983:220;:::o;11209:366::-;11351:3;11372:67;11436:2;11431:3;11372:67;:::i;:::-;11365:74;;11448:93;11537:3;11448:93;:::i;:::-;11566:2;11561:3;11557:12;11550:19;;11209:366;;;:::o;11581:419::-;11747:4;11785:2;11774:9;11770:18;11762:26;;11834:9;11828:4;11824:20;11820:1;11809:9;11805:17;11798:47;11862:131;11988:4;11862:131;:::i;:::-;11854:139;;11581:419;;;:::o;12006:248::-;12146:34;12142:1;12134:6;12130:14;12123:58;12215:31;12210:2;12202:6;12198:15;12191:56;12006:248;:::o;12260:366::-;12402:3;12423:67;12487:2;12482:3;12423:67;:::i;:::-;12416:74;;12499:93;12588:3;12499:93;:::i;:::-;12617:2;12612:3;12608:12;12601:19;;12260:366;;;:::o;12632:419::-;12798:4;12836:2;12825:9;12821:18;12813:26;;12885:9;12879:4;12875:20;12871:1;12860:9;12856:17;12849:47;12913:131;13039:4;12913:131;:::i;:::-;12905:139;;12632:419;;;:::o;13057:232::-;13197:34;13193:1;13185:6;13181:14;13174:58;13266:15;13261:2;13253:6;13249:15;13242:40;13057:232;:::o;13295:366::-;13437:3;13458:67;13522:2;13517:3;13458:67;:::i;:::-;13451:74;;13534:93;13623:3;13534:93;:::i;:::-;13652:2;13647:3;13643:12;13636:19;;13295:366;;;:::o;13667:419::-;13833:4;13871:2;13860:9;13856:18;13848:26;;13920:9;13914:4;13910:20;13906:1;13895:9;13891:17;13884:47;13948:131;14074:4;13948:131;:::i;:::-;13940:139;;13667:419;;;:::o;14092:174::-;14232:26;14228:1;14220:6;14216:14;14209:50;14092:174;:::o;14272:366::-;14414:3;14435:67;14499:2;14494:3;14435:67;:::i;:::-;14428:74;;14511:93;14600:3;14511:93;:::i;:::-;14629:2;14624:3;14620:12;14613:19;;14272:366;;;:::o;14644:419::-;14810:4;14848:2;14837:9;14833:18;14825:26;;14897:9;14891:4;14887:20;14883:1;14872:9;14868:17;14861:47;14925:131;15051:4;14925:131;:::i;:::-;14917:139;;14644:419;;;:::o;15069:228::-;15209:34;15205:1;15197:6;15193:14;15186:58;15278:11;15273:2;15265:6;15261:15;15254:36;15069:228;:::o;15303:366::-;15445:3;15466:67;15530:2;15525:3;15466:67;:::i;:::-;15459:74;;15542:93;15631:3;15542:93;:::i;:::-;15660:2;15655:3;15651:12;15644:19;;15303:366;;;:::o;15675:419::-;15841:4;15879:2;15868:9;15864:18;15856:26;;15928:9;15922:4;15918:20;15914:1;15903:9;15899:17;15892:47;15956:131;16082:4;15956:131;:::i;:::-;15948:139;;15675:419;;;:::o;16100:148::-;16202:11;16239:3;16224:18;;16100:148;;;;:::o;16254:390::-;16360:3;16388:39;16421:5;16388:39;:::i;:::-;16443:89;16525:6;16520:3;16443:89;:::i;:::-;16436:96;;16541:65;16599:6;16594:3;16587:4;16580:5;16576:16;16541:65;:::i;:::-;16631:6;16626:3;16622:16;16615:23;;16364:280;16254:390;;;;:::o;16650:435::-;16830:3;16852:95;16943:3;16934:6;16852:95;:::i;:::-;16845:102;;16964:95;17055:3;17046:6;16964:95;:::i;:::-;16957:102;;17076:3;17069:10;;16650:435;;;;;:::o;17091:224::-;17231:34;17227:1;17219:6;17215:14;17208:58;17300:7;17295:2;17287:6;17283:15;17276:32;17091:224;:::o;17321:366::-;17463:3;17484:67;17548:2;17543:3;17484:67;:::i;:::-;17477:74;;17560:93;17649:3;17560:93;:::i;:::-;17678:2;17673:3;17669:12;17662:19;;17321:366;;;:::o;17693:419::-;17859:4;17897:2;17886:9;17882:18;17874:26;;17946:9;17940:4;17936:20;17932:1;17921:9;17917:17;17910:47;17974:131;18100:4;17974:131;:::i;:::-;17966:139;;17693:419;;;:::o;18118:223::-;18258:34;18254:1;18246:6;18242:14;18235:58;18327:6;18322:2;18314:6;18310:15;18303:31;18118:223;:::o;18347:366::-;18489:3;18510:67;18574:2;18569:3;18510:67;:::i;:::-;18503:74;;18586:93;18675:3;18586:93;:::i;:::-;18704:2;18699:3;18695:12;18688:19;;18347:366;;;:::o;18719:419::-;18885:4;18923:2;18912:9;18908:18;18900:26;;18972:9;18966:4;18962:20;18958:1;18947:9;18943:17;18936:47;19000:131;19126:4;19000:131;:::i;:::-;18992:139;;18719:419;;;:::o;19144:175::-;19284:27;19280:1;19272:6;19268:14;19261:51;19144:175;:::o;19325:366::-;19467:3;19488:67;19552:2;19547:3;19488:67;:::i;:::-;19481:74;;19564:93;19653:3;19564:93;:::i;:::-;19682:2;19677:3;19673:12;19666:19;;19325:366;;;:::o;19697:419::-;19863:4;19901:2;19890:9;19886:18;19878:26;;19950:9;19944:4;19940:20;19936:1;19925:9;19921:17;19914:47;19978:131;20104:4;19978:131;:::i;:::-;19970:139;;19697:419;;;:::o;20122:237::-;20262:34;20258:1;20250:6;20246:14;20239:58;20331:20;20326:2;20318:6;20314:15;20307:45;20122:237;:::o;20365:366::-;20507:3;20528:67;20592:2;20587:3;20528:67;:::i;:::-;20521:74;;20604:93;20693:3;20604:93;:::i;:::-;20722:2;20717:3;20713:12;20706:19;;20365:366;;;:::o;20737:419::-;20903:4;20941:2;20930:9;20926:18;20918:26;;20990:9;20984:4;20980:20;20976:1;20965:9;20961:17;20954:47;21018:131;21144:4;21018:131;:::i;:::-;21010:139;;20737:419;;;:::o;21162:180::-;21210:77;21207:1;21200:88;21307:4;21304:1;21297:15;21331:4;21328:1;21321:15;21348:98;21399:6;21433:5;21427:12;21417:22;;21348:98;;;:::o;21452:168::-;21535:11;21569:6;21564:3;21557:19;21609:4;21604:3;21600:14;21585:29;;21452:168;;;;:::o;21626:373::-;21712:3;21740:38;21772:5;21740:38;:::i;:::-;21794:70;21857:6;21852:3;21794:70;:::i;:::-;21787:77;;21873:65;21931:6;21926:3;21919:4;21912:5;21908:16;21873:65;:::i;:::-;21963:29;21985:6;21963:29;:::i;:::-;21958:3;21954:39;21947:46;;21716:283;21626:373;;;;:::o;22005:640::-;22200:4;22238:3;22227:9;22223:19;22215:27;;22252:71;22320:1;22309:9;22305:17;22296:6;22252:71;:::i;:::-;22333:72;22401:2;22390:9;22386:18;22377:6;22333:72;:::i;:::-;22415;22483:2;22472:9;22468:18;22459:6;22415:72;:::i;:::-;22534:9;22528:4;22524:20;22519:2;22508:9;22504:18;22497:48;22562:76;22633:4;22624:6;22562:76;:::i;:::-;22554:84;;22005:640;;;;;;;:::o;22651:141::-;22707:5;22738:6;22732:13;22723:22;;22754:32;22780:5;22754:32;:::i;:::-;22651:141;;;;:::o;22798:349::-;22867:6;22916:2;22904:9;22895:7;22891:23;22887:32;22884:119;;;22922:79;;:::i;:::-;22884:119;23042:1;23067:63;23122:7;23113:6;23102:9;23098:22;23067:63;:::i;:::-;23057:73;;23013:127;22798:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1696000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2921",
								"getApproved(uint256)": "5277",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "3022",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "774",
								"symbol()": "infinite",
								"tokenURI(uint256)": "3459",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2312",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "2248",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 823,
									"end": 17989,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1610,
									"end": 1726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1685,
									"end": 1690,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1677,
									"end": 1682,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1677,
									"end": 1690,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1677,
									"end": 1690,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1677,
									"end": 1690,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1677,
									"end": 1690,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1677,
									"end": 1690,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1677,
									"end": 1690,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1677,
									"end": 1690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1677,
									"end": 1690,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1677,
									"end": 1690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1677,
									"end": 1690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1711,
									"end": 1718,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1708,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1701,
									"end": 1718,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1718,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1718,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1701,
									"end": 1718,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1718,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1718,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 1701,
									"end": 1718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1718,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1701,
									"end": 1718,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1718,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1726,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 10,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 17989,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e057a897c42544d0c32fe7242e23c348f32144531c56a3c806c8251f6895e1d664736f6c63430008130033",
									".code": [
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "6352211E"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "B88D4FDE"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "C87B56DD"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "E985E9C5"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "6352211E"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "81812FC"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "42842E0E"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 823,
											"end": 17989,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1798,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1798,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1798,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2726,
											"end": 2826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2726,
											"end": 2826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 4238,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 4238,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 4238,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3756,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3756,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4938,
											"end": 5273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 4938,
											"end": 5273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5344,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 2436,
											"end": 2659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2436,
											"end": 2659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2436,
											"end": 2659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2167,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2167,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2167,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2895,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2895,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4481,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4481,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5600,
											"end": 5922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 5600,
											"end": 5922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3070,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3070,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 3070,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4707,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 4707,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4707,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1977,
											"name": "PUSH",
											"source": 9,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1937,
											"end": 1977,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1937,
											"end": 1977,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1948,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1977,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1937,
											"end": 1977,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 1977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 2042,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1937,
											"end": 2042,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 2042,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2009,
											"end": 2042,
											"name": "PUSH",
											"source": 9,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1994,
											"end": 2042,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2042,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2042,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2042,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2042,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2042,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2042,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 2042,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1937,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 2095,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1937,
											"end": 2095,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 2095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2059,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2059,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1937,
											"end": 2095,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1937,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1917,
											"end": 2095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1917,
											"end": 2095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2813,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2806,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2806,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4314,
											"end": 4321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4349,
											"end": 4356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4334,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4334,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4334,
											"end": 4357,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4334,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4392,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4400,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3850,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 3868,
											"end": 3875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3853,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3853,
											"end": 3876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3853,
											"end": 3876,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 3853,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3837,
											"end": 3876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3906,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3906,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3895,
											"end": 3906,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3897,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3906,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3895,
											"end": 3906,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3906,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3887,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 3887,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3979,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3979,
											"end": 3991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 3991,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 3979,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 4000,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 4041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3979,
											"end": 4041,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 4041,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4021,
											"end": 4026,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4028,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4028,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4028,
											"end": 4040,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 4028,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 4004,
											"end": 4041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4004,
											"end": 4041,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4004,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 4041,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 3979,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3957,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3957,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4152,
											"end": 4154,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4156,
											"end": 4163,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 4143,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4164,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 4143,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3826,
											"end": 4172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 4172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 5152,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5152,
											"end": 5164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5173,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 5133,
											"end": 5174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5174,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 5133,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 5125,
											"end": 5224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5125,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5237,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 5247,
											"end": 5251,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5253,
											"end": 5255,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5257,
											"end": 5264,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5237,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5237,
											"end": 5265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5237,
											"end": 5265,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 5237,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 5273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 5499,
											"end": 5503,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5505,
											"end": 5507,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5509,
											"end": 5516,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 5482,
											"end": 5521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 5482,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2541,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2544,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2553,
											"end": 2560,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2544,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2544,
											"end": 2561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2544,
											"end": 2561,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2544,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2572,
											"end": 2628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2572,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2646,
											"end": 2651,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2239,
											"end": 2246,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2285,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 2259,
											"end": 2332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2350,
											"end": 2366,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2951,
											"end": 2964,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2984,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2977,
											"end": 2991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2977,
											"end": 2991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 4595,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4595,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4595,
											"end": 4607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4607,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4595,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4609,
											"end": 4617,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4627,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 4576,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 4576,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 5793,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 5793,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5793,
											"end": 5805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5793,
											"end": 5805,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 5793,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 5774,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5815,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 5774,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 5766,
											"end": 5865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5766,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5876,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 5890,
											"end": 5894,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5896,
											"end": 5898,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5900,
											"end": 5907,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5909,
											"end": 5913,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5876,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 5876,
											"end": 5914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5876,
											"end": 5914,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 5876,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3156,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3169,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3184,
											"end": 3191,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 3169,
											"end": 3192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3192,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3169,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3226,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3229,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3229,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3239,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 3229,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3281,
											"end": 3282,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3270,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3278,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3282,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3309,
											"end": 3316,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3318,
											"end": 3325,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3318,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 3318,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3292,
											"end": 3337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3292,
											"end": 3337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3257,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3250,
											"end": 3343,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3250,
											"end": 3343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3250,
											"end": 3343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4804,
											"end": 4808,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4852,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4853,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4862,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4828,
											"end": 4863,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4863,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4863,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4707,
											"end": 4871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14057,
											"end": 14192,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 14057,
											"end": 14192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14139,
											"end": 14155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 14147,
											"end": 14154,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14139,
											"end": 14146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 14139,
											"end": 14155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14139,
											"end": 14155,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 14139,
											"end": 14155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 14131,
											"end": 14184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 14131,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14057,
											"end": 14192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14057,
											"end": 14192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13336,
											"end": 13510,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 13336,
											"end": 13510,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13438,
											"end": 13440,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13426,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13427,
											"end": 13434,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13435,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13411,
											"end": 13440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13494,
											"end": 13501,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13490,
											"end": 13492,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13465,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 13480,
											"end": 13487,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13465,
											"end": 13479,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 13465,
											"end": 13488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13465,
											"end": 13488,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 13465,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "PUSH",
											"source": 9,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13456,
											"end": 13502,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 13336,
											"end": 13510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13336,
											"end": 13510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13336,
											"end": 13510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7955,
											"end": 8219,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 7955,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8048,
											"end": 8052,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8065,
											"end": 8078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 8096,
											"end": 8103,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 8081,
											"end": 8104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8065,
											"end": 8104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8065,
											"end": 8104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8134,
											"end": 8139,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 8123,
											"end": 8175,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8143,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 8160,
											"end": 8165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8167,
											"end": 8174,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8143,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 8143,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8143,
											"end": 8175,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 8143,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8175,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 8123,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8210,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 8123,
											"end": 8210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8203,
											"end": 8210,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8210,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8179,
											"end": 8210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 8191,
											"end": 8198,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 8179,
											"end": 8199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8199,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 8179,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8210,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8179,
											"end": 8210,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8210,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8210,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 8123,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7955,
											"end": 8219,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7955,
											"end": 8219,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7955,
											"end": 8219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7955,
											"end": 8219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7955,
											"end": 8219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11954,
											"end": 13217,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 11954,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12113,
											"end": 12117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12117,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12086,
											"end": 12117,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 12101,
											"end": 12108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 12086,
											"end": 12109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12109,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 12086,
											"end": 12109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12117,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12086,
											"end": 12117,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12117,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 12078,
											"end": 12159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 12078,
											"end": 12159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12192,
											"end": 12193,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12178,
											"end": 12194,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12194,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12194,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12194,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12194,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 12170,
											"end": 12235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 12170,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12248,
											"end": 12290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 12269,
											"end": 12273,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12275,
											"end": 12277,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12279,
											"end": 12286,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12288,
											"end": 12289,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12248,
											"end": 12268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 12248,
											"end": 12290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12248,
											"end": 12290,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 12248,
											"end": 12290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12420,
											"end": 12424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12424,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12393,
											"end": 12424,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 12408,
											"end": 12415,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 12393,
											"end": 12416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12416,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 12393,
											"end": 12416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12424,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12393,
											"end": 12424,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12393,
											"end": 12424,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 12385,
											"end": 12466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 12385,
											"end": 12466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12553,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12554,
											"end": 12561,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12562,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12531,
											"end": 12562,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 12531,
											"end": 12562,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 12531,
											"end": 12562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12531,
											"end": 12562,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 12531,
											"end": 12562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12531,
											"end": 12562,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12531,
											"end": 12562,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 12531,
											"end": 12562,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12531,
											"end": 12562,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12531,
											"end": 12562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12531,
											"end": 12562,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13033,
											"end": 13034,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13014,
											"end": 13023,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13024,
											"end": 13028,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13066,
											"end": 13067,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13049,
											"end": 13058,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13059,
											"end": 13061,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13108,
											"end": 13110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13096,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13097,
											"end": 13104,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13147,
											"end": 13154,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13143,
											"end": 13145,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13137,
											"end": 13141,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "PUSH",
											"source": 9,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13128,
											"end": 13155,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 13168,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 13188,
											"end": 13192,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13194,
											"end": 13196,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13198,
											"end": 13205,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13207,
											"end": 13208,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13168,
											"end": 13187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 13168,
											"end": 13209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13168,
											"end": 13209,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 13168,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11954,
											"end": 13217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11954,
											"end": 13217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11954,
											"end": 13217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11954,
											"end": 13217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7347,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 7230,
											"end": 7347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7296,
											"end": 7303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7323,
											"end": 7330,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7331,
											"end": 7338,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7323,
											"end": 7339,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7347,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13653,
											"end": 13968,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 13653,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13808,
											"end": 13816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13799,
											"end": 13816,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13799,
											"end": 13816,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13799,
											"end": 13804,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13799,
											"end": 13816,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13799,
											"end": 13816,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13799,
											"end": 13816,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 13791,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 13791,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13895,
											"end": 13903,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13875,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13876,
											"end": 13881,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13857,
											"end": 13882,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13883,
											"end": 13891,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 13857,
											"end": 13903,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13941,
											"end": 13949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13934,
											"end": 13939,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "PUSH",
											"source": 9,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13951,
											"end": 13959,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 13919,
											"end": 13960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13960,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 13653,
											"end": 13968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13653,
											"end": 13968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13653,
											"end": 13968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13653,
											"end": 13968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7116,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 6803,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6959,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 6969,
											"end": 6973,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6977,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6979,
											"end": 6986,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6959,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 6959,
											"end": 6987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6959,
											"end": 6987,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 6959,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7035,
											"end": 7037,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7039,
											"end": 7046,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7052,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 7006,
											"end": 7053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7006,
											"end": 7053,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7006,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 6998,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 6998,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6803,
											"end": 7116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3694,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3600,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3664,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 471,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 537,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 537,
											"end": 554,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 537,
											"end": 558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 520,
											"end": 558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 520,
											"end": 558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 595,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 572,
											"end": 613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 572,
											"end": 613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 627,
											"end": 638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 726,
											"end": 761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 726,
											"end": 761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 795,
											"end": 799,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 819,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 958,
											"end": 966,
											"name": "PUSH",
											"source": 5,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 946,
											"end": 951,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 942,
											"end": 956,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 937,
											"end": 967,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 932,
											"end": 935,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 924,
											"end": 968,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1003,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1041,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 415,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7660,
											"end": 7788,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 7660,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7725,
											"end": 7729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7778,
											"end": 7779,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7749,
											"end": 7780,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 7758,
											"end": 7765,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 7749,
											"end": 7766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7766,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 7749,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7749,
											"end": 7780,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7780,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7742,
											"end": 7780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7742,
											"end": 7780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7660,
											"end": 7788,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7660,
											"end": 7788,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7660,
											"end": 7788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7660,
											"end": 7788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16341,
											"end": 16500,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 16341,
											"end": 16500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16341,
											"end": 16500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16341,
											"end": 16500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16341,
											"end": 16500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16341,
											"end": 16500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16341,
											"end": 16500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17222,
											"end": 17380,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 17222,
											"end": 17380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17222,
											"end": 17380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17222,
											"end": 17380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17222,
											"end": 17380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17222,
											"end": 17380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17222,
											"end": 17380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14756,
											"end": 15609,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 14756,
											"end": 15609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14910,
											"end": 14914,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14931,
											"end": 14946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 14931,
											"end": 14933,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14931,
											"end": 14944,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14931,
											"end": 14944,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14931,
											"end": 14944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 14931,
											"end": 14946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14931,
											"end": 14946,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 14931,
											"end": 14946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14927,
											"end": 15602,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14927,
											"end": 15602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 14927,
											"end": 15602,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14983,
											"end": 14985,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15003,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14967,
											"end": 15003,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15003,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 15004,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 15004,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 15004,
											"end": 15016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15004,
											"end": 15016,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 15004,
											"end": 15016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15022,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 15024,
											"end": 15031,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 15033,
											"end": 15037,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 14967,
											"end": 15038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 14967,
											"end": 15038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 14967,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15225,
											"end": 15226,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15208,
											"end": 15214,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15208,
											"end": 15221,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15208,
											"end": 15226,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15204,
											"end": 15532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 15204,
											"end": 15532,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 15251,
											"end": 15311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15311,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15204,
											"end": 15532,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 15204,
											"end": 15532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15482,
											"end": 15488,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15476,
											"end": 15489,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 15467,
											"end": 15473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15463,
											"end": 15465,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15459,
											"end": 15474,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15452,
											"end": 15490,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 14963,
											"end": 15547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15099,
											"end": 15140,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 15099,
											"end": 15140,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 15099,
											"end": 15140,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15089,
											"end": 15140,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15089,
											"end": 15140,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15089,
											"end": 15140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15089,
											"end": 15095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15089,
											"end": 15140,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15089,
											"end": 15140,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 15089,
											"end": 15140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 15089,
											"end": 15140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15140,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15082,
											"end": 15140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 15082,
											"end": 15140,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14927,
											"end": 15602,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 14927,
											"end": 15602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15586,
											"end": 15590,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15579,
											"end": 15590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15579,
											"end": 15590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14756,
											"end": 15609,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 14756,
											"end": 15609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14756,
											"end": 15609,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 14756,
											"end": 15609,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14756,
											"end": 15609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14756,
											"end": 15609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14756,
											"end": 15609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14756,
											"end": 15609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14756,
											"end": 15609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9975,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10026,
											"end": 10032,
											"name": "PUSH",
											"source": 8,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10061,
											"end": 10067,
											"name": "PUSH",
											"source": 8,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 10052,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 8,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "PUSH",
											"source": 8,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 10164,
											"end": 10179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "PUSH",
											"source": 8,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10241,
											"end": 10256,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "PUSH",
											"source": 8,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 10276,
											"end": 10291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "PUSH",
											"source": 8,
											"value": "5F5E100"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10353,
											"end": 10367,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH",
											"source": 8,
											"value": "5F5E100"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 10387,
											"end": 10401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10462,
											"end": 10476,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 10496,
											"end": 10510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 10605,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9889,
											"end": 10779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11123,
											"end": 11157,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 11119,
											"end": 11120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11100,
											"end": 11158,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11192,
											"end": 11195,
											"name": "PUSH",
											"source": 10,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11189,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11179,
											"end": 11185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11175,
											"end": 11190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11168,
											"end": 11196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10983,
											"end": 11203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11351,
											"end": 11354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11436,
											"end": 11438,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 11431,
											"end": 11434,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 11372,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11537,
											"end": 11540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 11448,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11566,
											"end": 11568,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11564,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11557,
											"end": 11569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11209,
											"end": 11575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11747,
											"end": 11751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11787,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11834,
											"end": 11843,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11828,
											"end": 11832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11824,
											"end": 11844,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 11821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11809,
											"end": 11818,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11805,
											"end": 11822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 11845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 11988,
											"end": 11992,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 11862,
											"end": 11993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 12000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12146,
											"end": 12180,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 12142,
											"end": 12143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12130,
											"end": 12144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12123,
											"end": 12181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12215,
											"end": 12246,
											"name": "PUSH",
											"source": 10,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 12210,
											"end": 12212,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12202,
											"end": 12208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12198,
											"end": 12213,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12191,
											"end": 12247,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12006,
											"end": 12254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12402,
											"end": 12405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 12487,
											"end": 12489,
											"name": "PUSH",
											"source": 10,
											"value": "3D"
										},
										{
											"begin": 12482,
											"end": 12485,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 12423,
											"end": 12490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 12588,
											"end": 12591,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 12499,
											"end": 12592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 12619,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12612,
											"end": 12615,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12608,
											"end": 12620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12260,
											"end": 12626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12798,
											"end": 12802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12825,
											"end": 12834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12821,
											"end": 12839,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12885,
											"end": 12894,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12879,
											"end": 12883,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12875,
											"end": 12895,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12871,
											"end": 12872,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12860,
											"end": 12869,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12856,
											"end": 12873,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12849,
											"end": 12896,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 13039,
											"end": 13043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 12913,
											"end": 13044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12632,
											"end": 13051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13197,
											"end": 13231,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 13193,
											"end": 13194,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13185,
											"end": 13191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13181,
											"end": 13195,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13266,
											"end": 13281,
											"name": "PUSH",
											"source": 10,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 13261,
											"end": 13263,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13253,
											"end": 13259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13249,
											"end": 13264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13242,
											"end": 13282,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13057,
											"end": 13289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13440,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 13522,
											"end": 13524,
											"name": "PUSH",
											"source": 10,
											"value": "2D"
										},
										{
											"begin": 13517,
											"end": 13520,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 13458,
											"end": 13525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 13623,
											"end": 13626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 13534,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13652,
											"end": 13654,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13647,
											"end": 13650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13643,
											"end": 13655,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13295,
											"end": 13661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13833,
											"end": 13837,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13873,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13860,
											"end": 13869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13856,
											"end": 13874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13920,
											"end": 13929,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13914,
											"end": 13918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13910,
											"end": 13930,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13906,
											"end": 13907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13895,
											"end": 13904,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13891,
											"end": 13908,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13884,
											"end": 13931,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 13948,
											"end": 14079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13667,
											"end": 14086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14232,
											"end": 14258,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 14228,
											"end": 14229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14226,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14216,
											"end": 14230,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14209,
											"end": 14259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14092,
											"end": 14266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14414,
											"end": 14417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14499,
											"end": 14501,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 14494,
											"end": 14497,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 14435,
											"end": 14502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14428,
											"end": 14502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14428,
											"end": 14502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 14600,
											"end": 14603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 14511,
											"end": 14604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14629,
											"end": 14631,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14624,
											"end": 14627,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14620,
											"end": 14632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14613,
											"end": 14632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14613,
											"end": 14632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14272,
											"end": 14638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14810,
											"end": 14814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14848,
											"end": 14850,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14833,
											"end": 14851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14897,
											"end": 14906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14891,
											"end": 14895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14887,
											"end": 14907,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14872,
											"end": 14881,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14868,
											"end": 14885,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14861,
											"end": 14908,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 15051,
											"end": 15055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 14925,
											"end": 15056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14917,
											"end": 15056,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14917,
											"end": 15056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14644,
											"end": 15063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15209,
											"end": 15243,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 15205,
											"end": 15206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15197,
											"end": 15203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15193,
											"end": 15207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15186,
											"end": 15244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15289,
											"name": "PUSH",
											"source": 10,
											"value": "6C6964206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15273,
											"end": 15275,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15265,
											"end": 15271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15261,
											"end": 15276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15254,
											"end": 15290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15069,
											"end": 15297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15445,
											"end": 15448,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15530,
											"end": 15532,
											"name": "PUSH",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 15525,
											"end": 15528,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 15466,
											"end": 15533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 15631,
											"end": 15634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 15542,
											"end": 15635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15660,
											"end": 15662,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15655,
											"end": 15658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15651,
											"end": 15663,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15303,
											"end": 15669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15841,
											"end": 15845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15879,
											"end": 15881,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15868,
											"end": 15877,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15864,
											"end": 15882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15928,
											"end": 15937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15922,
											"end": 15926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15918,
											"end": 15938,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15903,
											"end": 15912,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15899,
											"end": 15916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15892,
											"end": 15939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 16082,
											"end": 16086,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 15956,
											"end": 16087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15675,
											"end": 16094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16213,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16239,
											"end": 16242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16100,
											"end": 16248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16360,
											"end": 16363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 16421,
											"end": 16426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 16388,
											"end": 16427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 16388,
											"end": 16427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 16525,
											"end": 16531,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16520,
											"end": 16523,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 16443,
											"end": 16532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 16443,
											"end": 16532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16436,
											"end": 16532,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16436,
											"end": 16532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 16599,
											"end": 16605,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16594,
											"end": 16597,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16587,
											"end": 16591,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16580,
											"end": 16585,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16576,
											"end": 16592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 16541,
											"end": 16606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 16541,
											"end": 16606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16631,
											"end": 16637,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16626,
											"end": 16629,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16622,
											"end": 16638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16615,
											"end": 16638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16615,
											"end": 16638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16364,
											"end": 16644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16830,
											"end": 16833,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 16943,
											"end": 16946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16934,
											"end": 16940,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 16852,
											"end": 16947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 16852,
											"end": 16947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16845,
											"end": 16947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16845,
											"end": 16947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 17055,
											"end": 17058,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17046,
											"end": 17052,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 16964,
											"end": 17059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 16964,
											"end": 17059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16957,
											"end": 17059,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16957,
											"end": 17059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17076,
											"end": 17079,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17069,
											"end": 17079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17069,
											"end": 17079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 17085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17231,
											"end": 17265,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 17227,
											"end": 17228,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17219,
											"end": 17225,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17215,
											"end": 17229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17208,
											"end": 17266,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17300,
											"end": 17307,
											"name": "PUSH",
											"source": 10,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17295,
											"end": 17297,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17287,
											"end": 17293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17283,
											"end": 17298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17276,
											"end": 17308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17091,
											"end": 17315,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17091,
											"end": 17315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17463,
											"end": 17466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 17548,
											"end": 17550,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 17543,
											"end": 17546,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 17484,
											"end": 17551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 17484,
											"end": 17551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17477,
											"end": 17551,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17477,
											"end": 17551,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 17649,
											"end": 17652,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 17560,
											"end": 17653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 17560,
											"end": 17653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17678,
											"end": 17680,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17673,
											"end": 17676,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17669,
											"end": 17681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17662,
											"end": 17681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17662,
											"end": 17681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17321,
											"end": 17687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17321,
											"end": 17687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17859,
											"end": 17863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17897,
											"end": 17899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17886,
											"end": 17895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17882,
											"end": 17900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17874,
											"end": 17900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17874,
											"end": 17900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17946,
											"end": 17955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17940,
											"end": 17944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17936,
											"end": 17956,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17932,
											"end": 17933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17921,
											"end": 17930,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17917,
											"end": 17934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17910,
											"end": 17957,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 18100,
											"end": 18104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 17974,
											"end": 18105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 17974,
											"end": 18105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 18105,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 18105,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 18112,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17693,
											"end": 18112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18258,
											"end": 18292,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 18254,
											"end": 18255,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18246,
											"end": 18252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18242,
											"end": 18256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18235,
											"end": 18293,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18327,
											"end": 18333,
											"name": "PUSH",
											"source": 10,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18322,
											"end": 18324,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18314,
											"end": 18320,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18310,
											"end": 18325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18303,
											"end": 18334,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18118,
											"end": 18341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18118,
											"end": 18341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18489,
											"end": 18492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 18574,
											"end": 18576,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18569,
											"end": 18572,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 18510,
											"end": 18577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 18510,
											"end": 18577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18503,
											"end": 18577,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18503,
											"end": 18577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 18675,
											"end": 18678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 18586,
											"end": 18679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 18586,
											"end": 18679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18704,
											"end": 18706,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18699,
											"end": 18702,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18695,
											"end": 18707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18688,
											"end": 18707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18688,
											"end": 18707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18885,
											"end": 18889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18923,
											"end": 18925,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18912,
											"end": 18921,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18908,
											"end": 18926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18900,
											"end": 18926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18900,
											"end": 18926,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18972,
											"end": 18981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18966,
											"end": 18970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18962,
											"end": 18982,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18958,
											"end": 18959,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18947,
											"end": 18956,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18943,
											"end": 18960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18936,
											"end": 18983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 19126,
											"end": 19130,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 19000,
											"end": 19131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 19000,
											"end": 19131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18992,
											"end": 19131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18992,
											"end": 19131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18719,
											"end": 19138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18719,
											"end": 19138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19144,
											"end": 19319,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 19144,
											"end": 19319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19284,
											"end": 19311,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 19280,
											"end": 19281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19272,
											"end": 19278,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19268,
											"end": 19282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19261,
											"end": 19312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19144,
											"end": 19319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19144,
											"end": 19319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19467,
											"end": 19470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 19552,
											"end": 19554,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 19547,
											"end": 19550,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 19488,
											"end": 19555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 19488,
											"end": 19555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19481,
											"end": 19555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19481,
											"end": 19555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 19653,
											"end": 19656,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 19564,
											"end": 19657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 19564,
											"end": 19657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19682,
											"end": 19684,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19677,
											"end": 19680,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19673,
											"end": 19685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19666,
											"end": 19685,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19666,
											"end": 19685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19325,
											"end": 19691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19325,
											"end": 19691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19863,
											"end": 19867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19901,
											"end": 19903,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19890,
											"end": 19899,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19886,
											"end": 19904,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19878,
											"end": 19904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19878,
											"end": 19904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19950,
											"end": 19959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19944,
											"end": 19948,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19940,
											"end": 19960,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19936,
											"end": 19937,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19925,
											"end": 19934,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19921,
											"end": 19938,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19914,
											"end": 19961,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 20104,
											"end": 20108,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 19978,
											"end": 20109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 19978,
											"end": 20109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19970,
											"end": 20109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19970,
											"end": 20109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19697,
											"end": 20116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19697,
											"end": 20116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20122,
											"end": 20359,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 20122,
											"end": 20359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20262,
											"end": 20296,
											"name": "PUSH",
											"source": 10,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 20258,
											"end": 20259,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20250,
											"end": 20256,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20246,
											"end": 20260,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20239,
											"end": 20297,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20331,
											"end": 20351,
											"name": "PUSH",
											"source": 10,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 20326,
											"end": 20328,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20318,
											"end": 20324,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20314,
											"end": 20329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20307,
											"end": 20352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20122,
											"end": 20359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20122,
											"end": 20359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20507,
											"end": 20510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 20592,
											"end": 20594,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 20587,
											"end": 20590,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 20528,
											"end": 20595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 20528,
											"end": 20595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20521,
											"end": 20595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20521,
											"end": 20595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 20693,
											"end": 20696,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 20604,
											"end": 20697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 20604,
											"end": 20697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20722,
											"end": 20724,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20717,
											"end": 20720,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20713,
											"end": 20725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20706,
											"end": 20725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20706,
											"end": 20725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20365,
											"end": 20731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20365,
											"end": 20731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20903,
											"end": 20907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20941,
											"end": 20943,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20930,
											"end": 20939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20926,
											"end": 20944,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20918,
											"end": 20944,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20918,
											"end": 20944,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20990,
											"end": 20999,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20984,
											"end": 20988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20980,
											"end": 21000,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20976,
											"end": 20977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20965,
											"end": 20974,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20961,
											"end": 20978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 21001,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 21144,
											"end": 21148,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 21018,
											"end": 21149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 21018,
											"end": 21149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21010,
											"end": 21149,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21010,
											"end": 21149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20737,
											"end": 21156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20737,
											"end": 21156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21162,
											"end": 21342,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 21162,
											"end": 21342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21210,
											"end": 21287,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21207,
											"end": 21208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21200,
											"end": 21288,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21307,
											"end": 21311,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 21304,
											"end": 21305,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 21297,
											"end": 21312,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21331,
											"end": 21335,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 21328,
											"end": 21329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21321,
											"end": 21336,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21399,
											"end": 21405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21433,
											"end": 21438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21427,
											"end": 21439,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21417,
											"end": 21439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21417,
											"end": 21439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21348,
											"end": 21446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21348,
											"end": 21446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21535,
											"end": 21546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21569,
											"end": 21575,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21564,
											"end": 21567,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21557,
											"end": 21576,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21609,
											"end": 21613,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21604,
											"end": 21607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21600,
											"end": 21614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21585,
											"end": 21614,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21585,
											"end": 21614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21452,
											"end": 21620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21452,
											"end": 21620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21712,
											"end": 21715,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 21772,
											"end": 21777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 21740,
											"end": 21778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 21740,
											"end": 21778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 21857,
											"end": 21863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21852,
											"end": 21855,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 21794,
											"end": 21864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 21794,
											"end": 21864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21787,
											"end": 21864,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21787,
											"end": 21864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 21931,
											"end": 21937,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21926,
											"end": 21929,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 21919,
											"end": 21923,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21912,
											"end": 21917,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21908,
											"end": 21924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 21873,
											"end": 21938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 21873,
											"end": 21938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 21985,
											"end": 21991,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 21963,
											"end": 21992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 21963,
											"end": 21992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21958,
											"end": 21961,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21954,
											"end": 21993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21947,
											"end": 21993,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21947,
											"end": 21993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21716,
											"end": 21999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21999,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21626,
											"end": 21999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22200,
											"end": 22204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22238,
											"end": 22241,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 22227,
											"end": 22236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22223,
											"end": 22242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22215,
											"end": 22242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22215,
											"end": 22242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 22320,
											"end": 22321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22309,
											"end": 22318,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22305,
											"end": 22322,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22296,
											"end": 22302,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 22252,
											"end": 22323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 22252,
											"end": 22323,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 22401,
											"end": 22403,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22390,
											"end": 22399,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22386,
											"end": 22404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22377,
											"end": 22383,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 22333,
											"end": 22405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 22333,
											"end": 22405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 22483,
											"end": 22485,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22472,
											"end": 22481,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22468,
											"end": 22486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22459,
											"end": 22465,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 22415,
											"end": 22487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 22415,
											"end": 22487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22534,
											"end": 22543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22528,
											"end": 22532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22524,
											"end": 22544,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22519,
											"end": 22521,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 22508,
											"end": 22517,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22504,
											"end": 22522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22497,
											"end": 22545,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 22633,
											"end": 22637,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22624,
											"end": 22630,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 22562,
											"end": 22638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 22562,
											"end": 22638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22554,
											"end": 22638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22554,
											"end": 22638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22005,
											"end": 22645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22707,
											"end": 22712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22738,
											"end": 22744,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22732,
											"end": 22745,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 22723,
											"end": 22745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22723,
											"end": 22745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 22780,
											"end": 22785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 22754,
											"end": 22786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 22754,
											"end": 22786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22651,
											"end": 22792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22651,
											"end": 22792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22867,
											"end": 22873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22916,
											"end": 22918,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22904,
											"end": 22913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22895,
											"end": 22902,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22891,
											"end": 22914,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22887,
											"end": 22919,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 22922,
											"end": 23001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 22922,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 22884,
											"end": 23003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23042,
											"end": 23043,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 23122,
											"end": 23129,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23113,
											"end": 23119,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23102,
											"end": 23111,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23098,
											"end": 23120,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 23067,
											"end": 23130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 23067,
											"end": 23130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23057,
											"end": 23130,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23057,
											"end": 23130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23013,
											"end": 23140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22798,
											"end": 23147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22798,
											"end": 23147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contract/erc721/ERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract/erc721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contract/erc721/ERC721.sol\":{\"keccak256\":\"0xfc25a12712a9198fb37c0d213db3d6dbd9dea66cdc56afb14297cd828e240559\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://552dd6fb1e4d6c410a9322abd845d34c4cd35bf0eb5b5af1e90d07e220b491dc\",\"dweb:/ipfs/QmdFG4AYdAFZSje5driMpaWyodnxC3SpebvtLFMoGhWbNH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1614,
								"contract": "contract/erc721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1616,
								"contract": "contract/erc721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1620,
								"contract": "contract/erc721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1624,
								"contract": "contract/erc721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1628,
								"contract": "contract/erc721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1634,
								"contract": "contract/erc721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							723
						],
						"IERC721": [
							115
						]
					},
					"id": 116,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 116,
							"sourceUnit": 724,
							"src": "133:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nameLocations": [
											"271:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "271:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 115,
							"linearizedBaseContracts": [
								115,
								723
							],
							"name": "IERC721",
							"nameLocation": "260:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 14,
									"name": "Transfer",
									"nameLocation": "384:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "393:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "415:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "435:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:0"
									},
									"src": "378:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 23,
									"name": "Approval",
									"nameLocation": "571:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "580:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "603:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:0"
									},
									"src": "565:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 32,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "852:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:0"
									},
									"src": "782:85:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1011:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:0"
									},
									"scope": 115,
									"src": "954:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1187:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:0"
									},
									"scope": 115,
									"src": "1170:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1911:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:0"
									},
									"scope": 115,
									"src": "1809:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2701:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2721:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:0"
									},
									"scope": 115,
									"src": "2644:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3568:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:0"
									},
									"scope": 115,
									"src": "3495:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4079:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:0"
									},
									"scope": 115,
									"src": "4062:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4464:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "4482:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:0"
									},
									"scope": 115,
									"src": "4437:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4678:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "4718:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:0"
									},
									"scope": 115,
									"src": "4657:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4911:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4926:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4967:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:0"
									},
									"scope": 115,
									"src": "4885:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 116,
							"src": "250:4725:0",
							"usedErrors": []
						}
					],
					"src": "108:4868:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 117,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:1",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:1",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "859:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "907:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "932:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "976:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 129,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:1"
									},
									"scope": 133,
									"src": "824:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 134,
							"src": "294:692:1",
							"usedErrors": []
						}
					],
					"src": "116:871:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							723
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							160
						]
					},
					"id": 161,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 161,
							"sourceUnit": 116,
							"src": "137:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "IERC721",
										"nameLocations": [
											"326:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "326:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:2"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 137,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 160,
							"linearizedBaseContracts": [
								160,
								115,
								723
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "442:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:2"
									},
									"scope": 160,
									"src": "403:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "569:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:2"
									},
									"scope": 160,
									"src": "528:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "743:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:2"
									},
									"scope": 160,
									"src": "685:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 161,
							"src": "297:463:2",
							"usedErrors": []
						}
					],
					"src": "112:649:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							490
						]
					},
					"id": 491,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 163,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 490,
							"linearizedBaseContracts": [
								490
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 171,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 170,
												"id": 176,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 490,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 189,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		],
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 187,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 192,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													198,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 197,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 205,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 199,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 201,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 490,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "3555:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3594:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3602:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 222,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															270,
															314
														],
														"referencedDeclaration": 314,
														"src": "3572:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 228,
												"nodeType": "Return",
												"src": "3565:79:3"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 490,
									"src": "3466:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "4020:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 243,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "4059:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 244,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4067:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "4076:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															270,
															314
														],
														"referencedDeclaration": 314,
														"src": "4037:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 241,
												"id": 248,
												"nodeType": "Return",
												"src": "4030:59:3"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3904:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3928:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3955:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:3"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "4006:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:3"
									},
									"scope": 490,
									"src": "3873:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "4601:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 263,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "4640:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 264,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "4648:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 265,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4654:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 262,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															270,
															314
														],
														"referencedDeclaration": 314,
														"src": "4618:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 261,
												"id": 268,
												"nodeType": "Return",
												"src": "4611:94:3"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4498:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4522:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4549:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:3"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "4587:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:3"
									},
									"scope": 490,
									"src": "4458:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "5139:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 287,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$490",
																				"typeString": "library Address"
																			}
																		],
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 285,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 290,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "5182:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:3"
											},
											{
												"assignments": [
													296,
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 313,
														"src": "5241:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 295,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 313,
														"src": "5255:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 297,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"arguments": [
														{
															"id": 303,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "5308:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 299,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "5282:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 301,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "5301:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "5357:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5365:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 309,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "5374:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 310,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "5386:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 306,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "5330:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 283,
												"id": 312,
												"nodeType": "Return",
												"src": "5323:76:3"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5024:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5074:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 278,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:3"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "5125:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:3"
									},
									"scope": 490,
									"src": "4960:446:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "5683:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "5719:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 326,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "5727:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 324,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															331,
															360
														],
														"referencedDeclaration": 360,
														"src": "5700:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 323,
												"id": 329,
												"nodeType": "Return",
												"src": "5693:80:3"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5611:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5627:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 318,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "5669:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:3"
									},
									"scope": 490,
									"src": "5583:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "6122:168:3",
										"statements": [
											{
												"assignments": [
													344,
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "6133:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 343,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "6147:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 345,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 351,
												"initialValue": {
													"arguments": [
														{
															"id": 349,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "6192:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 347,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6174:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 353,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "6241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6249:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 355,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "6258:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 356,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "6270:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 352,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "6214:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 342,
												"id": 358,
												"nodeType": "Return",
												"src": "6207:76:3"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6001:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6025:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6052:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:3"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "6108:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:3"
									},
									"scope": 490,
									"src": "5964:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "6566:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 371,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "6604:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 372,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6612:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 370,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															377,
															406
														],
														"referencedDeclaration": 406,
														"src": "6583:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 369,
												"id": 375,
												"nodeType": "Return",
												"src": "6576:84:3"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6499:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6515:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:3"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6552:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:3"
									},
									"scope": 490,
									"src": "6469:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "7008:170:3",
										"statements": [
											{
												"assignments": [
													390,
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 405,
														"src": "7019:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 389,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 405,
														"src": "7033:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 391,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"arguments": [
														{
															"id": 395,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7080:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 393,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7060:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 399,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "7129:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "7137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 401,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "7146:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 402,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7158:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 398,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "7102:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 388,
												"id": 404,
												"nodeType": "Return",
												"src": "7095:76:3"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "6892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "6916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "6943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 383,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:3"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "6994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:3"
									},
									"scope": 490,
									"src": "6853:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7660:434:3",
										"statements": [
											{
												"condition": {
													"id": 420,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 411,
													"src": "7674:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 442,
													"nodeType": "Block",
													"src": "8030:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 438,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "8052:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 439,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "8064:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 437,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "8044:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 441,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:3"
														}
													]
												},
												"id": 443,
												"nodeType": "IfStatement",
												"src": "7670:418:3",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "7683:341:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 421,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "7701:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 433,
															"nodeType": "IfStatement",
															"src": "7697:286:3",
															"trueBody": {
																"id": 432,
																"nodeType": "Block",
																"src": "7725:258:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 427,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 409,
																							"src": "7927:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 426,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "7916:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 428,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 429,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 425,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 431,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 434,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "8003:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 419,
															"id": 435,
															"nodeType": "Return",
															"src": "7996:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7511:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7535:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7557:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7590:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7646:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:3"
									},
									"scope": 490,
									"src": "7466:628:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "8475:135:3",
										"statements": [
											{
												"condition": {
													"id": 457,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 448,
													"src": "8489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "8546:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 462,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "8568:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 463,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "8580:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 461,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "8560:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:3"
														}
													]
												},
												"id": 467,
												"nodeType": "IfStatement",
												"src": "8485:119:3",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "8498:42:3",
													"statements": [
														{
															"expression": {
																"id": 458,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "8519:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 456,
															"id": 459,
															"nodeType": "Return",
															"src": "8512:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:3",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8350:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8372:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8405:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:3"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "8461:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:3"
									},
									"scope": 490,
									"src": "8315:295:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "8699:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 476,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "8775:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 486,
													"nodeType": "Block",
													"src": "9105:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 483,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "9126:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 482,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 485,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:3"
														}
													]
												},
												"id": 487,
												"nodeType": "IfStatement",
												"src": "8771:379:3",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "8798:301:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 471,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 471,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:3",
																	"valueSize": 1
																}
															],
															"id": 480,
															"nodeType": "InlineAssembly",
															"src": "8947:142:3"
														}
													]
												}
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "8633:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "8658:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:3"
									},
									"scope": 490,
									"src": "8616:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 491,
							"src": "194:8964:3",
							"usedErrors": []
						}
					],
					"src": "101:9058:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							512
						]
					},
					"id": 513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 492,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 493,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 512,
							"linearizedBaseContracts": [
								512
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 498,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 497,
												"id": 500,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 512,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 507,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 506,
												"id": 509,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 512,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 513,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1588
						],
						"Strings": [
							687
						]
					},
					"id": 688,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 688,
							"sourceUnit": 1589,
							"src": "126:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 516,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 687,
							"linearizedBaseContracts": [
								687
							],
							"name": "Strings",
							"nameLocation": "196:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 519,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "210:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 517,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 518,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 522,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 687,
									"src": "270:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 520,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 521,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "486:625:5",
										"statements": [
											{
												"id": 568,
												"nodeType": "UncheckedBlock",
												"src": "496:609:5",
												"statements": [
													{
														"assignments": [
															531
														],
														"declarations": [
															{
																"constant": false,
																"id": 531,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 568,
																"src": "520:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 538,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 534,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "548:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 532,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "537:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1588_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1425,
																	"src": "537:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:5"
													},
													{
														"assignments": [
															540
														],
														"declarations": [
															{
																"constant": false,
																"id": 540,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 568,
																"src": "572:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 539,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 545,
														"initialValue": {
															"arguments": [
																{
																	"id": 543,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "606:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 541,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:5"
													},
													{
														"assignments": [
															547
														],
														"declarations": [
															{
																"constant": false,
																"id": 547,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 568,
																"src": "627:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 546,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 548,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:5"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:5",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 540,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:5",
																"valueSize": 1
															},
															{
																"declaration": 531,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:5",
																"valueSize": 1
															},
															{
																"declaration": 547,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:5",
																"valueSize": 1
															}
														],
														"id": 549,
														"nodeType": "InlineAssembly",
														"src": "699:76:5"
													},
													{
														"body": {
															"id": 564,
															"nodeType": "Block",
															"src": "801:267:5",
															"statements": [
																{
																	"expression": {
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:5",
																		"subExpression": {
																			"id": 551,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 547,
																			"src": "819:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 553,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:5"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:5"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:5"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 519,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 547,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 525,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 554,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:5"
																},
																{
																	"expression": {
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 555,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 525,
																			"src": "1003:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 558,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 559,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 525,
																			"src": "1036:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 563,
																	"nodeType": "IfStatement",
																	"src": "1032:21:5",
																	"trueBody": {
																		"id": 562,
																		"nodeType": "Break",
																		"src": "1048:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 565,
														"nodeType": "WhileStatement",
														"src": "788:280:5"
													},
													{
														"expression": {
															"id": 566,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "1088:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 529,
														"id": 567,
														"nodeType": "Return",
														"src": "1081:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:5"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "471:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 527,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:5"
									},
									"scope": 687,
									"src": "415:696:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1290:100:5",
										"statements": [
											{
												"id": 588,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 579,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "1343:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 582,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 573,
																				"src": "1362:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 580,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1588,
																				"src": "1350:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1588_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1548,
																			"src": "1350:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 578,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	590,
																	666,
																	686
																],
																"referencedDeclaration": 666,
																"src": "1331:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 577,
														"id": 587,
														"nodeType": "Return",
														"src": "1324:49:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1237:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:5"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1275:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 575,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:5"
									},
									"scope": 687,
									"src": "1216:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "1603:347:5",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "1613:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 600,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 605,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "1649:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 602,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:5"
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 611,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "1670:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 613,
														"indexExpression": {
															"hexValue": "30",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:5"
											},
											{
												"expression": {
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 617,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "1695:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 619,
														"indexExpression": {
															"hexValue": "31",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:5"
											},
											{
												"body": {
													"id": 651,
													"nodeType": "Block",
													"src": "1765:83:5",
													"statements": [
														{
															"expression": {
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 637,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "1779:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 639,
																	"indexExpression": {
																		"id": 638,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "1786:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 640,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 519,
																		"src": "1791:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 644,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 641,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 593,
																			"src": "1800:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:5"
														},
														{
															"expression": {
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 647,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "1826:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 650,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 631,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "1753:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"initializationExpression": {
													"assignments": [
														624
													],
													"declarations": [
														{
															"constant": false,
															"id": 624,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 652,
															"src": "1725:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 623,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 630,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 626,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 595,
																"src": "1741:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:5",
														"subExpression": {
															"id": 634,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "1762:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 636,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 654,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "1865:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 653,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "1936:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 660,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 599,
												"id": 664,
												"nodeType": "Return",
												"src": "1922:21:5"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1534:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1549:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:5"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1588:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 597,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:5"
									},
									"scope": 687,
									"src": "1513:437:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "2175:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 679,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 669,
																			"src": "2220:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 677,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 675,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 682,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "2228:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 674,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															590,
															666,
															686
														],
														"referencedDeclaration": 666,
														"src": "2192:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 673,
												"id": 684,
												"nodeType": "Return",
												"src": "2185:59:5"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2123:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:5"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2160:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:5"
									},
									"scope": 687,
									"src": "2102:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 688,
							"src": "188:2065:5",
							"usedErrors": []
						}
					],
					"src": "101:2153:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							711
						],
						"IERC165": [
							723
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 689,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 690,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 712,
							"sourceUnit": 724,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 692,
										"name": "IERC165",
										"nameLocations": [
											"754:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "754:7:6"
									},
									"id": 693,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 691,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711,
								723
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										722
									],
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 704,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$723_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$723_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 703,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$723",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 701,
												"id": 708,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 698,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 695,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 711,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 712,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							723
						]
					},
					"id": 724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 723,
							"linearizedBaseContracts": [
								723
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 716,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 719,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 723,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 724,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1588
						]
					},
					"id": 1589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 726,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1588,
							"linearizedBaseContracts": [
								1588
							],
							"name": "Math",
							"nameLocation": "210:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 730,
									"members": [
										{
											"id": 727,
											"name": "Down",
											"nameLocation": "245:4:8",
											"nodeType": "EnumValue",
											"src": "245:4:8"
										},
										{
											"id": 728,
											"name": "Up",
											"nameLocation": "287:2:8",
											"nodeType": "EnumValue",
											"src": "287:2:8"
										},
										{
											"id": 729,
											"name": "Zero",
											"nameLocation": "318:4:8",
											"nodeType": "EnumValue",
											"src": "318:4:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:8",
									"nodeType": "EnumDefinition",
									"src": "221:122:8"
								},
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "480:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 740,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "497:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 741,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "501:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 744,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "509:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:8",
													"trueExpression": {
														"id": 743,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "505:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 739,
												"id": 746,
												"nodeType": "Return",
												"src": "490:20:8"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "426:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "437:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:8"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "471:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:8"
									},
									"scope": 1588,
									"src": "413:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "655:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 758,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "672:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 759,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "676:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 762,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "684:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:8",
													"trueExpression": {
														"id": 761,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "680:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 757,
												"id": 764,
												"nodeType": "Return",
												"src": "665:20:8"
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "612:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:8"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "646:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:8"
									},
									"scope": 1588,
									"src": "588:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "876:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 776,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "931:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 777,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "935:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 779,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 780,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "941:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 781,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 771,
																		"src": "945:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 783,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 775,
												"id": 787,
												"nodeType": "Return",
												"src": "923:28:8"
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "822:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "833:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:8"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "867:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:8"
									},
									"scope": 1588,
									"src": "805:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "1228:123:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 799,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "1316:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 803,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "1330:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 807,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "1339:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 798,
												"id": 812,
												"nodeType": "Return",
												"src": "1309:35:8"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1174:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1185:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:8"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1219:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:8"
									},
									"scope": 1588,
									"src": "1157:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "1795:3797:8",
										"statements": [
											{
												"id": 934,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:8",
												"statements": [
													{
														"assignments": [
															827
														],
														"declarations": [
															{
																"constant": false,
																"id": 827,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "2126:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 826,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 828,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:8"
													},
													{
														"assignments": [
															830
														],
														"declarations": [
															{
																"constant": false,
																"id": 830,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "2198:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 829,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 831,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:8",
																"valueSize": 1
															},
															{
																"declaration": 830,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:8",
																"valueSize": 1
															},
															{
																"declaration": 817,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:8",
																"valueSize": 1
															},
															{
																"declaration": 817,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:8",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:8",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:8",
																"valueSize": 1
															}
														],
														"id": 832,
														"nodeType": "InlineAssembly",
														"src": "2269:166:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 833,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "2516:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 841,
														"nodeType": "IfStatement",
														"src": "2512:75:8",
														"trueBody": {
															"id": 840,
															"nodeType": "Block",
															"src": "2528:59:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 836,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "2553:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 837,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 821,
																			"src": "2561:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 825,
																	"id": 839,
																	"nodeType": "Return",
																	"src": "2546:26:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 843,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "2697:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 844,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "2711:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 842,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 847,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:8"
													},
													{
														"assignments": [
															849
														],
														"declarations": [
															{
																"constant": false,
																"id": 849,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "2973:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 848,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 850,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:8"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:8"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:8"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:8"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 821,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:8",
																"valueSize": 1
															},
															{
																"declaration": 830,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:8",
																"valueSize": 1
															},
															{
																"declaration": 830,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:8",
																"valueSize": 1
															},
															{
																"declaration": 849,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:8",
																"valueSize": 1
															},
															{
																"declaration": 849,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:8",
																"valueSize": 1
															},
															{
																"declaration": 849,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:8",
																"valueSize": 1
															},
															{
																"declaration": 817,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:8",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:8",
																"valueSize": 1
															}
														],
														"id": 851,
														"nodeType": "InlineAssembly",
														"src": "3004:300:8"
													},
													{
														"assignments": [
															853
														],
														"declarations": [
															{
																"constant": false,
																"id": 853,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "3611:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 852,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 861,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 854,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "3626:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:8",
																			"subExpression": {
																				"id": 855,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 821,
																				"src": "3642:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 859,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:8"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:8",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:8"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:8"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:8"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:8"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 821,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:8",
																"valueSize": 1
															},
															{
																"declaration": 821,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:8",
																"valueSize": 1
															},
															{
																"declaration": 827,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:8",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:8",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:8",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:8",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:8",
																"valueSize": 1
															},
															{
																"declaration": 853,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:8",
																"valueSize": 1
															}
														],
														"id": 862,
														"nodeType": "InlineAssembly",
														"src": "3672:371:8"
													},
													{
														"expression": {
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 863,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "4109:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 864,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "4118:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 865,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "4126:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 868,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:8"
													},
													{
														"assignments": [
															870
														],
														"declarations": [
															{
																"constant": false,
																"id": 870,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 934,
																"src": "4448:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 869,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 877,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 872,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 821,
																			"src": "4471:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 874,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:8"
													},
													{
														"expression": {
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 878,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4704:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 880,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "4719:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 881,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "4733:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 885,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:8"
													},
													{
														"expression": {
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 886,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4773:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 888,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "4788:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 889,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "4802:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 893,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:8"
													},
													{
														"expression": {
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 894,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4843:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 896,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "4858:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 897,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "4872:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 901,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:8"
													},
													{
														"expression": {
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 902,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4913:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 904,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "4928:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 905,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "4942:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 909,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:8"
													},
													{
														"expression": {
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 910,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "4983:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 912,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "4998:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 913,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "5012:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 917,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:8"
													},
													{
														"expression": {
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 918,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "5054:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 920,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "5069:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 921,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "5083:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 925,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:8"
													},
													{
														"expression": {
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 926,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "5524:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 927,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "5533:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 928,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "5541:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 931,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:8"
													},
													{
														"expression": {
															"id": 932,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "5569:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 825,
														"id": 933,
														"nodeType": "Return",
														"src": "5562:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1692:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1711:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1730:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:8"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "1779:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:8"
									},
									"scope": 1588,
									"src": "1667:3925:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "5872:189:8",
										"statements": [
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "5882:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 951,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 958,
												"initialValue": {
													"arguments": [
														{
															"id": 954,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "5906:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 955,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "5909:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 956,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "5912:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 953,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															936,
															980
														],
														"referencedDeclaration": 936,
														"src": "5899:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$730",
															"typeString": "enum Math.Rounding"
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 959,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "5938:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$730",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 960,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5950:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$730_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:8",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 728,
															"src": "5950:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$730",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 964,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "5972:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 965,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "5975:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 966,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "5978:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 963,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "5934:98:8",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "5996:36:8",
													"statements": [
														{
															"expression": {
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 971,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "6010:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 974,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 977,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 952,
													"src": "6048:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 950,
												"id": 978,
												"nodeType": "Return",
												"src": "6041:13:8"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "5749:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "5768:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "5787:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "5816:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 730,
														"src": "5816:8:8"
													},
													"referencedDeclaration": 730,
													"src": "5816:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:8"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "5863:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:8"
									},
									"scope": 1588,
									"src": "5724:337:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "6337:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 988,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "6351:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "6347:45:8",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "6359:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 987,
															"id": 992,
															"nodeType": "Return",
															"src": "6373:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1091,
														"src": "7071:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1005,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 999,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "7099:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 998,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1260,
																			1296
																		],
																		"referencedDeclaration": 1260,
																		"src": "7094:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1003,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:8"
											},
											{
												"id": 1090,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:8",
												"statements": [
													{
														"expression": {
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1006,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7532:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1007,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7542:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1008,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7551:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1009,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7555:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1012,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1016,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:8"
													},
													{
														"expression": {
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1017,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7581:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1018,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7591:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7600:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1020,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7604:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1023,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1027,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:8"
													},
													{
														"expression": {
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1028,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7630:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1029,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7640:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1030,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7649:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1031,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7653:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1034,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1038,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:8"
													},
													{
														"expression": {
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1039,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7679:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1040,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7689:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1043,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1041,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7698:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1042,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7702:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1045,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1049,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:8"
													},
													{
														"expression": {
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1050,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7728:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1051,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7738:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1052,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7747:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1053,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7751:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1056,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1060,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:8"
													},
													{
														"expression": {
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1061,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7777:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1062,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7787:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1063,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7796:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1064,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7800:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1067,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1071,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:8"
													},
													{
														"expression": {
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1072,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "7826:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1073,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 996,
																				"src": "7836:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1074,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "7845:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1075,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "7849:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1078,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1082,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1084,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "7886:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1085,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "7894:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1086,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "7898:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1083,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "7882:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 987,
														"id": 1089,
														"nodeType": "Return",
														"src": "7875:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "6294:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:8"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "6328:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:8"
									},
									"scope": 1588,
									"src": "6280:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "8098:161:8",
										"statements": [
											{
												"id": 1126,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:8",
												"statements": [
													{
														"assignments": [
															1104
														],
														"declarations": [
															{
																"constant": false,
																"id": 1104,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1126,
																"src": "8132:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1103,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1108,
														"initialValue": {
															"arguments": [
																{
																	"id": 1106,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "8154:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1105,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1092,
																	1128
																],
																"referencedDeclaration": 1092,
																"src": "8149:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1109,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "8177:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$730",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1110,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1098,
																					"src": "8187:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1111,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 730,
																						"src": "8199:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$730_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1112,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 728,
																					"src": "8199:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1116,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1114,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1104,
																						"src": "8214:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1115,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1104,
																						"src": "8223:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1117,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1095,
																					"src": "8232:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1123,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1102,
														"id": 1125,
														"nodeType": "Return",
														"src": "8170:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "8036:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "8047:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1097,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1096,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 730,
														"src": "8047:8:8"
													},
													"referencedDeclaration": 730,
													"src": "8047:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:8"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "8089:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:8"
									},
									"scope": 1588,
									"src": "8022:237:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "8444:922:8",
										"statements": [
											{
												"assignments": [
													1137
												],
												"declarations": [
													{
														"constant": false,
														"id": 1137,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "8454:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"initialValue": {
													"hexValue": "30",
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:8"
											},
											{
												"id": 1256,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "8510:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1154,
														"nodeType": "IfStatement",
														"src": "8506:99:8",
														"trueBody": {
															"id": 1153,
															"nodeType": "Block",
															"src": "8528:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1145,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "8546:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1148,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:8"
																},
																{
																	"expression": {
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1149,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "8577:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1152,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1155,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "8622:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1169,
														"nodeType": "IfStatement",
														"src": "8618:96:8",
														"trueBody": {
															"id": 1168,
															"nodeType": "Block",
															"src": "8639:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1160,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "8657:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1163,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:8"
																},
																{
																	"expression": {
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "8687:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1167,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1170,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "8731:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1184,
														"nodeType": "IfStatement",
														"src": "8727:96:8",
														"trueBody": {
															"id": 1183,
															"nodeType": "Block",
															"src": "8748:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1175,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "8766:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1178,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:8"
																},
																{
																	"expression": {
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1179,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "8796:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1182,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1185,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "8840:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1199,
														"nodeType": "IfStatement",
														"src": "8836:96:8",
														"trueBody": {
															"id": 1198,
															"nodeType": "Block",
															"src": "8857:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1190,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "8875:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1193,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:8"
																},
																{
																	"expression": {
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1194,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "8905:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1197,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1200,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "8949:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1214,
														"nodeType": "IfStatement",
														"src": "8945:93:8",
														"trueBody": {
															"id": 1213,
															"nodeType": "Block",
															"src": "8965:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1205,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "8983:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1208,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:8"
																},
																{
																	"expression": {
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1209,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "9012:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1212,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1215,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "9055:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1229,
														"nodeType": "IfStatement",
														"src": "9051:93:8",
														"trueBody": {
															"id": 1228,
															"nodeType": "Block",
															"src": "9071:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1220,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "9089:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1223,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:8"
																},
																{
																	"expression": {
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1224,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "9118:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1227,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1230,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "9161:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1244,
														"nodeType": "IfStatement",
														"src": "9157:93:8",
														"trueBody": {
															"id": 1243,
															"nodeType": "Block",
															"src": "9177:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1235,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "9195:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1238,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:8"
																},
																{
																	"expression": {
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1239,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "9224:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1242,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1245,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "9267:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1255,
														"nodeType": "IfStatement",
														"src": "9263:64:8",
														"trueBody": {
															"id": 1254,
															"nodeType": "Block",
															"src": "9283:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1250,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "9301:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1253,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1257,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1137,
													"src": "9353:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1135,
												"id": 1258,
												"nodeType": "Return",
												"src": "9346:13:8"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:8",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "8397:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:8"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "8435:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:8"
									},
									"scope": 1588,
									"src": "8383:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1295,
										"nodeType": "Block",
										"src": "9599:165:8",
										"statements": [
											{
												"id": 1294,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:8",
												"statements": [
													{
														"assignments": [
															1272
														],
														"declarations": [
															{
																"constant": false,
																"id": 1272,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1294,
																"src": "9633:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1271,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1276,
														"initialValue": {
															"arguments": [
																{
																	"id": 1274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "9655:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1273,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1260,
																	1296
																],
																"referencedDeclaration": 1260,
																"src": "9650:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1277,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1272,
																"src": "9682:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$730",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1278,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1266,
																					"src": "9692:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1279,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 730,
																						"src": "9704:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$730_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 728,
																					"src": "9704:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1284,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1282,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1283,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1272,
																						"src": "9724:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1285,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1263,
																					"src": "9733:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1291,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1270,
														"id": 1293,
														"nodeType": "Return",
														"src": "9675:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "9533:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "9548:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1265,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1264,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 730,
														"src": "9548:8:8"
													},
													"referencedDeclaration": 730,
													"src": "9548:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:8"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "9590:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:8"
									},
									"scope": 1588,
									"src": "9519:245:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "9951:828:8",
										"statements": [
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1424,
														"src": "9961:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1304,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1307,
												"initialValue": {
													"hexValue": "30",
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:8"
											},
											{
												"id": 1421,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1308,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10017:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1324,
														"nodeType": "IfStatement",
														"src": "10013:99:8",
														"trueBody": {
															"id": 1323,
															"nodeType": "Block",
															"src": "10034:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1313,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10052:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1318,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:8"
																},
																{
																	"expression": {
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1319,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10085:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10129:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1341,
														"nodeType": "IfStatement",
														"src": "10125:99:8",
														"trueBody": {
															"id": 1340,
															"nodeType": "Block",
															"src": "10146:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10164:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1335,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:8"
																},
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1336,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10197:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1342,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10241:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1358,
														"nodeType": "IfStatement",
														"src": "10237:99:8",
														"trueBody": {
															"id": 1357,
															"nodeType": "Block",
															"src": "10258:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1347,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10276:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1352,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:8"
																},
																{
																	"expression": {
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1353,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10309:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1359,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10353:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1375,
														"nodeType": "IfStatement",
														"src": "10349:96:8",
														"trueBody": {
															"id": 1374,
															"nodeType": "Block",
															"src": "10369:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1364,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10387:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:8"
																},
																{
																	"expression": {
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1370,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10419:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1373,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1376,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10462:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1392,
														"nodeType": "IfStatement",
														"src": "10458:96:8",
														"trueBody": {
															"id": 1391,
															"nodeType": "Block",
															"src": "10478:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10496:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1386,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:8"
																},
																{
																	"expression": {
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1387,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10528:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1390,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1393,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10571:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1409,
														"nodeType": "IfStatement",
														"src": "10567:96:8",
														"trueBody": {
															"id": 1408,
															"nodeType": "Block",
															"src": "10587:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1398,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "10605:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1403,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:8"
																},
																{
																	"expression": {
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1404,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10637:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1407,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1410,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "10680:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1420,
														"nodeType": "IfStatement",
														"src": "10676:64:8",
														"trueBody": {
															"id": 1419,
															"nodeType": "Block",
															"src": "10696:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1415,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1305,
																			"src": "10714:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1418,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1422,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1305,
													"src": "10766:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1303,
												"id": 1423,
												"nodeType": "Return",
												"src": "10759:13:8"
											}
										]
									},
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:8",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "9904:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:8"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "9942:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:8"
									},
									"scope": 1588,
									"src": "9889:890:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "11014:165:8",
										"statements": [
											{
												"id": 1459,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:8",
												"statements": [
													{
														"assignments": [
															1437
														],
														"declarations": [
															{
																"constant": false,
																"id": 1437,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1459,
																"src": "11048:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1436,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1441,
														"initialValue": {
															"arguments": [
																{
																	"id": 1439,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "11071:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1438,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1425,
																	1461
																],
																"referencedDeclaration": 1425,
																"src": "11065:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1442,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "11098:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$730",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1443,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1431,
																					"src": "11108:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1444,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 730,
																						"src": "11120:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$730_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 728,
																					"src": "11120:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1449,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1447,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1448,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1437,
																						"src": "11139:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1450,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1428,
																					"src": "11148:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1453,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1456,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1435,
														"id": 1458,
														"nodeType": "Return",
														"src": "11091:71:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "10948:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "10963:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1429,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 730,
														"src": "10963:8:8"
													},
													"referencedDeclaration": 730,
													"src": "10963:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:8"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "11005:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:8"
									},
									"scope": 1588,
									"src": "10933:246:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "11493:600:8",
										"statements": [
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "11503:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1472,
												"initialValue": {
													"hexValue": "30",
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:8"
											},
											{
												"id": 1544,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1473,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "11559:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1487,
														"nodeType": "IfStatement",
														"src": "11555:98:8",
														"trueBody": {
															"id": 1486,
															"nodeType": "Block",
															"src": "11577:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1478,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "11595:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1481,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:8"
																},
																{
																	"expression": {
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1482,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "11626:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1485,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1488,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "11670:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1502,
														"nodeType": "IfStatement",
														"src": "11666:95:8",
														"trueBody": {
															"id": 1501,
															"nodeType": "Block",
															"src": "11687:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1493,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "11705:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1496,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:8"
																},
																{
																	"expression": {
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1497,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "11735:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1500,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1503,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "11778:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1517,
														"nodeType": "IfStatement",
														"src": "11774:95:8",
														"trueBody": {
															"id": 1516,
															"nodeType": "Block",
															"src": "11795:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1508,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "11813:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1511,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:8"
																},
																{
																	"expression": {
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1512,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "11843:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1515,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "11886:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1532,
														"nodeType": "IfStatement",
														"src": "11882:95:8",
														"trueBody": {
															"id": 1531,
															"nodeType": "Block",
															"src": "11903:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1523,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1464,
																			"src": "11921:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1526,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:8"
																},
																{
																	"expression": {
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "11951:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1530,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "11994:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1543,
														"nodeType": "IfStatement",
														"src": "11990:64:8",
														"trueBody": {
															"id": 1542,
															"nodeType": "Block",
															"src": "12010:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1538,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1470,
																			"src": "12028:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1541,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1545,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1470,
													"src": "12080:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1468,
												"id": 1546,
												"nodeType": "Return",
												"src": "12073:13:8"
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:8",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "11446:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:8"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "11484:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:8"
									},
									"scope": 1588,
									"src": "11430:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "12329:173:8",
										"statements": [
											{
												"id": 1585,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:8",
												"statements": [
													{
														"assignments": [
															1560
														],
														"declarations": [
															{
																"constant": false,
																"id": 1560,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1585,
																"src": "12363:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1564,
														"initialValue": {
															"arguments": [
																{
																	"id": 1562,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "12387:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1561,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1548,
																	1587
																],
																"referencedDeclaration": 1548,
																"src": "12380:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1565,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "12414:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$730",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1566,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1554,
																					"src": "12424:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1567,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 730,
																						"src": "12436:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$730_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 728,
																					"src": "12436:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$730",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1570,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1573,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1571,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1560,
																									"src": "12457:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1572,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1574,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1576,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1551,
																					"src": "12471:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1558,
														"id": 1584,
														"nodeType": "Return",
														"src": "12407:78:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "12263:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "12278:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$730",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1553,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1552,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 730,
														"src": "12278:8:8"
													},
													"referencedDeclaration": 730,
													"src": "12278:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$730",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:8"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "12320:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:8"
									},
									"scope": 1588,
									"src": "12247:255:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1589,
							"src": "202:12302:8",
							"usedErrors": []
						}
					],
					"src": "103:12402:8"
				},
				"id": 8
			},
			"contract/erc721/ERC721.sol": {
				"ast": {
					"absolutePath": "contract/erc721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							490
						],
						"Context": [
							512
						],
						"ERC165": [
							711
						],
						"ERC721": [
							2515
						],
						"IERC165": [
							723
						],
						"IERC721": [
							115
						],
						"IERC721Metadata": [
							160
						],
						"IERC721Receiver": [
							133
						],
						"Math": [
							1588
						],
						"Strings": [
							687
						]
					},
					"id": 2516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1590,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1591,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2516,
							"sourceUnit": 116,
							"src": "137:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1592,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2516,
							"sourceUnit": 134,
							"src": "197:66:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"id": 1593,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2516,
							"sourceUnit": 161,
							"src": "265:77:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1594,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2516,
							"sourceUnit": 491,
							"src": "344:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2516,
							"sourceUnit": 513,
							"src": "397:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1596,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2516,
							"sourceUnit": 688,
							"src": "450:51:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 1597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2516,
							"sourceUnit": 712,
							"src": "503:64:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1599,
										"name": "Context",
										"nameLocations": [
											"842:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 512,
										"src": "842:7:9"
									},
									"id": 1600,
									"nodeType": "InheritanceSpecifier",
									"src": "842:7:9"
								},
								{
									"baseName": {
										"id": 1601,
										"name": "ERC165",
										"nameLocations": [
											"851:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "851:6:9"
									},
									"id": 1602,
									"nodeType": "InheritanceSpecifier",
									"src": "851:6:9"
								},
								{
									"baseName": {
										"id": 1603,
										"name": "IERC721",
										"nameLocations": [
											"859:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 115,
										"src": "859:7:9"
									},
									"id": 1604,
									"nodeType": "InheritanceSpecifier",
									"src": "859:7:9"
								},
								{
									"baseName": {
										"id": 1605,
										"name": "IERC721Metadata",
										"nameLocations": [
											"868:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 160,
										"src": "868:15:9"
									},
									"id": 1606,
									"nodeType": "InheritanceSpecifier",
									"src": "868:15:9"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1598,
								"nodeType": "StructuredDocumentation",
								"src": "571:250:9",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2515,
							"linearizedBaseContracts": [
								2515,
								160,
								115,
								711,
								723,
								512
							],
							"name": "ERC721",
							"nameLocation": "832:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1609,
									"libraryName": {
										"id": 1607,
										"name": "Address",
										"nameLocations": [
											"897:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 490,
										"src": "897:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "891:26:9",
									"typeName": {
										"id": 1608,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "909:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 1612,
									"libraryName": {
										"id": 1610,
										"name": "Strings",
										"nameLocations": [
											"929:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 687,
										"src": "929:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "923:26:9",
									"typeName": {
										"id": 1611,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "941:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1614,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "991:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "976:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1613,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "976:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1616,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1041:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "1026:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1615,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1026:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1620,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1140:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "1104:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1619,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1617,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1104:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1618,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1123:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1624,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1237:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "1201:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1623,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1621,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1209:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1201:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1622,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1220:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1628,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1341:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "1305:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1627,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1625,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1313:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1305:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1626,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1324:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1634,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1467:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "1414:71:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1633,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1629,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1422:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1414:44:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1632,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1630,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1441:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1433:24:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1631,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1452:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "1666:60:9",
										"statements": [
											{
												"expression": {
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1642,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "1677:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1643,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "1685:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1677:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "1677:13:9"
											},
											{
												"expression": {
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1646,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "1701:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1647,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "1711:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1701:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "1701:17:9"
											}
										]
									},
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "1494:110:9",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1651,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1636:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1622:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1636,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1622:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1657:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1643:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1638,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1643:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:44:9"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1666:0:9"
									},
									"scope": 2515,
									"src": "1610:116:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										710,
										722
									],
									"body": {
										"id": 1681,
										"nodeType": "Block",
										"src": "1906:197:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1662,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "1937:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1664,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 115,
																			"src": "1957:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$115_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1663,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1952:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1952:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$115",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1966:11:9",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1952:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1937:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1668,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "1994:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1670,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "2014:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$160_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1669,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2009:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$160",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2031:11:9",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2009:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1994:48:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1937:105:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1677,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "2083:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1675,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2059:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2515_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2065:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 710,
															"src": "2059:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2059:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1937:158:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1661,
												"id": 1680,
												"nodeType": "Return",
												"src": "1917:178:9"
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "1734:58:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1807:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1658,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1656,
												"name": "ERC165",
												"nameLocations": [
													"1874:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 711,
												"src": "1874:6:9"
											},
											{
												"id": 1657,
												"name": "IERC165",
												"nameLocations": [
													"1882:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 723,
												"src": "1882:7:9"
											}
										],
										"src": "1865:25:9"
									},
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1832:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "1825:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1653,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1825:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1824:20:9"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "1900:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1900:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:6:9"
									},
									"scope": 2515,
									"src": "1798:305:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										40
									],
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "2248:126:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1692,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "2267:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2284:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2276:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1693,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2276:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2276:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2267:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2288:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 1691,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2259:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2259:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "2259:73:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1701,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "2350:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1703,
													"indexExpression": {
														"id": 1702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "2360:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1690,
												"id": 1704,
												"nodeType": "Return",
												"src": "2343:23:9"
											}
										]
									},
									"documentation": {
										"id": 1683,
										"nodeType": "StructuredDocumentation",
										"src": "2111:50:9",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2176:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1687,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2221:8:9"
									},
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2194:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "2186:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2185:15:9"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "2239:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2239:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:9:9"
									},
									"scope": 2515,
									"src": "2167:207:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "2517:142:9",
										"statements": [
											{
												"assignments": [
													1716
												],
												"declarations": [
													{
														"constant": false,
														"id": 1716,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2536:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1733,
														"src": "2528:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1715,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2528:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1720,
												"initialValue": {
													"arguments": [
														{
															"id": 1718,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "2553:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1717,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "2544:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2544:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:33:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1722,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "2580:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2597:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2589:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1723,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2589:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2589:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2580:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2601:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 1721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2572:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "2572:56:9"
											},
											{
												"expression": {
													"id": 1731,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1716,
													"src": "2646:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1714,
												"id": 1732,
												"nodeType": "Return",
												"src": "2639:12:9"
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "2382:48:9",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2445:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1711,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2490:8:9"
									},
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2461:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2453:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2452:17:9"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "2508:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2508:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2507:9:9"
									},
									"scope": 2515,
									"src": "2436:223:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										145
									],
									"body": {
										"id": 1743,
										"nodeType": "Block",
										"src": "2795:31:9",
										"statements": [
											{
												"expression": {
													"id": 1741,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1614,
													"src": "2813:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1740,
												"id": 1742,
												"nodeType": "Return",
												"src": "2806:12:9"
											}
										]
									},
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "2667:53:9",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2735:4:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1737,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2762:8:9"
									},
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2739:2:9"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "2780:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1738,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2780:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:15:9"
									},
									"scope": 2515,
									"src": "2726:100:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										151
									],
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "2966:33:9",
										"statements": [
											{
												"expression": {
													"id": 1751,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1616,
													"src": "2984:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1752,
												"nodeType": "Return",
												"src": "2977:14:9"
											}
										]
									},
									"documentation": {
										"id": 1745,
										"nodeType": "StructuredDocumentation",
										"src": "2834:55:9",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2904:6:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1747,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2933:8:9"
									},
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2910:2:9"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "2951:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1748,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2951:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2950:15:9"
									},
									"scope": 2515,
									"src": "2895:104:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										159
									],
									"body": {
										"id": 1792,
										"nodeType": "Block",
										"src": "3158:193:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1764,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "3184:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1763,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "3169:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3169:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1766,
												"nodeType": "ExpressionStatement",
												"src": "3169:23:9"
											},
											{
												"assignments": [
													1768
												],
												"declarations": [
													{
														"constant": false,
														"id": 1768,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "3219:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1792,
														"src": "3205:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1767,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3205:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1771,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1769,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "3229:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3229:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3205:34:9"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1774,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "3263:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3257:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1772,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3257:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3257:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3272:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3257:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3281:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3257:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3341:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3257:86:9",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1783,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1768,
																		"src": "3309:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1784,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1757,
																				"src": "3318:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3326:8:9",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 570,
																			"src": "3318:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3318:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1781,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3292:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3296:12:9",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3292:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3292:45:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3285:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1779,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3285:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3285:53:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1762,
												"id": 1791,
												"nodeType": "Return",
												"src": "3250:93:9"
											}
										]
									},
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "3007:57:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "3079:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1759,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3125:8:9"
									},
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3096:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "3088:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3087:17:9"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "3143:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1760,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3143:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3142:15:9"
									},
									"scope": 2515,
									"src": "3070:281:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "3666:28:9",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3684:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1798,
												"id": 1800,
												"nodeType": "Return",
												"src": "3677:9:9"
											}
										]
									},
									"documentation": {
										"id": 1794,
										"nodeType": "StructuredDocumentation",
										"src": "3359:235:9",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3609:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3617:2:9"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "3651:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1796,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3651:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3650:15:9"
									},
									"scope": 2515,
									"src": "3600:94:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										88
									],
									"body": {
										"id": 1844,
										"nodeType": "Block",
										"src": "3826:346:9",
										"statements": [
											{
												"assignments": [
													1812
												],
												"declarations": [
													{
														"constant": false,
														"id": 1812,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3845:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1844,
														"src": "3837:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1811,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3837:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1817,
												"initialValue": {
													"arguments": [
														{
															"id": 1815,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "3868:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1813,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "3853:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2515_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3860:7:9",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1734,
														"src": "3853:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3853:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3837:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1819,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1805,
																"src": "3895:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1820,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "3901:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3895:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3908:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 1818,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3887:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3887:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "3887:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1826,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "3979:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3979:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1828,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "3995:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3979:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1831,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "4021:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1832,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "4028:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4028:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1830,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "4004:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4004:37:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3979:62:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4056:63:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 1825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3957:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3957:173:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "3957:173:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1840,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "4152:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1841,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "4156:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1839,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "4143:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4143:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "4143:21:9"
											}
										]
									},
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "3702:48:9",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3765:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1809,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3817:8:9"
									},
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3781:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "3773:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3773:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3793:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "3785:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3785:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3772:29:9"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3826:0:9"
									},
									"scope": 2515,
									"src": "3756:416:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										104
									],
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "4323:86:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "4349:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1854,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "4334:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4334:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1857,
												"nodeType": "ExpressionStatement",
												"src": "4334:23:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1858,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "4377:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1860,
													"indexExpression": {
														"id": 1859,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "4393:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4377:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1853,
												"id": 1861,
												"nodeType": "Return",
												"src": "4370:31:9"
											}
										]
									},
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "4180:52:9",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4247:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1850,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4296:8:9"
									},
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4267:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "4259:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4258:17:9"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "4314:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4314:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4313:9:9"
									},
									"scope": 2515,
									"src": "4238:171:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										96
									],
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "4565:71:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1873,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "4595:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4595:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1875,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "4609:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1876,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "4619:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1872,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2397,
														"src": "4576:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4576:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "4576:52:9"
											}
										]
									},
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "4417:58:9",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4490:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1870,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4556:8:9"
									},
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4516:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "4508:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4508:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4531:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "4526:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1867,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4526:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4507:33:9"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4565:0:9"
									},
									"scope": 2515,
									"src": "4481:155:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										114
									],
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "4810:61:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1891,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "4828:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1893,
														"indexExpression": {
															"id": 1892,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "4847:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4828:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1895,
													"indexExpression": {
														"id": 1894,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1885,
														"src": "4854:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4828:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1890,
												"id": 1896,
												"nodeType": "Return",
												"src": "4821:42:9"
											}
										]
									},
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "4644:57:9",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4716:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1887,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4786:8:9"
									},
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4741:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "4733:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4733:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4756:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "4748:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4748:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4732:33:9"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "4804:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1888,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4804:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4803:6:9"
									},
									"scope": 2515,
									"src": "4707:164:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "5061:212:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1911,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "5152:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5152:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1913,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "5166:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1910,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "5133:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5133:41:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5176:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 1909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5125:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:99:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "5125:99:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1919,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "5247:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1920,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "5253:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1921,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "5257:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1918,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "5237:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1923,
												"nodeType": "ExpressionStatement",
												"src": "5237:28:9"
											}
										]
									},
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "4879:53:9",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4947:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1907,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5052:8:9"
									},
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4978:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "4970:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4970:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5001:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "4993:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4993:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5022:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "5014:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5014:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4959:77:9"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5061:0:9"
									},
									"scope": 2515,
									"src": "4938:335:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 1943,
										"nodeType": "Block",
										"src": "5471:58:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1937,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "5499:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1938,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "5505:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1939,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "5509:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5518:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1936,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1944,
															1974
														],
														"referencedDeclaration": 1974,
														"src": "5482:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5482:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "5482:39:9"
											}
										]
									},
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "5281:57:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5353:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1934,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5462:8:9"
									},
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5388:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "5380:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5380:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5411:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "5403:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5403:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5432:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "5424:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5424:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5369:77:9"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5471:0:9"
									},
									"scope": 2515,
									"src": "5344:185:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 1973,
										"nodeType": "Block",
										"src": "5755:167:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1959,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 502,
																		"src": "5793:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5793:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1961,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "5807:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1958,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "5774:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5774:41:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5817:47:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 1957,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5766:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5766:99:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1965,
												"nodeType": "ExpressionStatement",
												"src": "5766:99:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1967,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1947,
															"src": "5890:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1968,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "5896:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1969,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1951,
															"src": "5900:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1970,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "5909:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1966,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "5876:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5876:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "5876:38:9"
											}
										]
									},
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "5537:57:9",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5609:16:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1955,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5746:8:9"
									},
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5644:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "5636:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5636:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5667:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "5659:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5659:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5688:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "5680:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5680:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5719:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "5706:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1952,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5706:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5625:105:9"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5755:0:9"
									},
									"scope": 2515,
									"src": "5600:322:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "6948:168:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1987,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "6969:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1988,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "6975:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1989,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1981,
															"src": "6979:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1986,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "6959:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6959:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1991,
												"nodeType": "ExpressionStatement",
												"src": "6959:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1994,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1977,
																	"src": "7029:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1995,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "7035:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1996,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "7039:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1997,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1983,
																	"src": "7048:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1993,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2473,
																"src": "7006:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7006:47:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7055:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1992,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6998:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6998:110:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "6998:110:9"
											}
										]
									},
									"documentation": {
										"id": 1975,
										"nodeType": "StructuredDocumentation",
										"src": "5930:867:9",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6812:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6844:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "6836:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6836:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6867:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "6859:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6859:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6888:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "6880:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6880:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6919:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "6906:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6906:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6825:105:9"
									},
									"returnParameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6948:0:9"
									},
									"scope": 2515,
									"src": "6803:313:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "7305:42:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2011,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "7323:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2013,
													"indexExpression": {
														"id": 2012,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "7331:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7323:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2010,
												"id": 2014,
												"nodeType": "Return",
												"src": "7316:23:9"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "7124:100:9",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "7239:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7256:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "7248:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7248:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7247:17:9"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "7296:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7296:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7295:9:9"
									},
									"scope": 2515,
									"src": "7230:117:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "7731:57:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2025,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "7758:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2024,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "7749:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7749:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7778:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7770:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2027,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7770:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7770:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7749:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2023,
												"id": 2032,
												"nodeType": "Return",
												"src": "7742:38:9"
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "7355:299:9",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7669:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7685:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "7677:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7677:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7676:17:9"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "7725:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2021,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7725:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7724:6:9"
									},
									"scope": 2515,
									"src": "7660:128:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "8054:165:9",
										"statements": [
											{
												"assignments": [
													2045
												],
												"declarations": [
													{
														"constant": false,
														"id": 2045,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8073:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 2067,
														"src": "8065:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2044,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8065:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2050,
												"initialValue": {
													"arguments": [
														{
															"id": 2048,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2039,
															"src": "8096:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2046,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "8081:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2515_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8088:7:9",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1734,
														"src": "8081:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8081:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8065:39:9"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2051,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2037,
																		"src": "8123:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2052,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2045,
																		"src": "8134:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "8123:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2055,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "8160:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2056,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2037,
																			"src": "8167:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2054,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "8143:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8143:32:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8123:52:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2060,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2039,
																			"src": "8191:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2059,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "8179:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8179:20:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2062,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2037,
																	"src": "8203:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8179:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8123:87:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2065,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8122:89:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2043,
												"id": 2066,
												"nodeType": "Return",
												"src": "8115:96:9"
											}
										]
									},
									"documentation": {
										"id": 2035,
										"nodeType": "StructuredDocumentation",
										"src": "7796:153:9",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7964:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7991:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "7983:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7983:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8008:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "8000:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8000:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7982:34:9"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "8048:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8048:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8047:6:9"
									},
									"scope": 2515,
									"src": "7955:264:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2082,
										"nodeType": "Block",
										"src": "8626:45:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "8647:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2078,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "8651:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8660:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2076,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2083,
															2112
														],
														"referencedDeclaration": 2112,
														"src": "8637:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8637:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "8637:26:9"
											}
										]
									},
									"documentation": {
										"id": 2069,
										"nodeType": "StructuredDocumentation",
										"src": "8227:328:9",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8570:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8588:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "8580:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8580:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8600:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "8592:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8592:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8579:29:9"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8626:0:9"
									},
									"scope": 2515,
									"src": "8561:110:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2111,
										"nodeType": "Block",
										"src": "9016:201:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2094,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2086,
															"src": "9033:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2095,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "9037:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2093,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "9027:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9027:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2097,
												"nodeType": "ExpressionStatement",
												"src": "9027:18:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9109:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9101:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2100,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9101:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9101:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2104,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2086,
																	"src": "9113:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2105,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2088,
																	"src": "9117:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2106,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2090,
																	"src": "9126:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2099,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2473,
																"src": "9078:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9078:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9146:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 2098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9056:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9056:153:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "9056:153:9"
											}
										]
									},
									"documentation": {
										"id": 2084,
										"nodeType": "StructuredDocumentation",
										"src": "8679:213:9",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8907:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8935:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "8927:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8927:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8956:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "8948:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8948:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8987:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "8974:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2089,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8974:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8916:82:9"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9016:0:9"
									},
									"scope": 2515,
									"src": "8898:319:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "9614:881:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2121,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "9633:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9647:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9639:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2122,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9639:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9639:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9633:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9651:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 2120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9625:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9625:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "9625:61:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9705:17:9",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2132,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "9714:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2131,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "9706:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9706:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9724:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 2130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9697:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9697:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2137,
												"nodeType": "ExpressionStatement",
												"src": "9697:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9797:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9789:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2139,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9789:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9789:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2143,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "9801:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2144,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "9805:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9814:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2138,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2486,
														"src": "9768:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9768:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2147,
												"nodeType": "ExpressionStatement",
												"src": "9768:48:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9914:17:9",
															"subExpression": {
																"arguments": [
																	{
																		"id": 2150,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "9923:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2149,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "9915:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9915:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9933:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 2148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9906:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9906:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2155,
												"nodeType": "ExpressionStatement",
												"src": "9906:58:9"
											},
											{
												"id": 2162,
												"nodeType": "UncheckedBlock",
												"src": "9977:366:9",
												"statements": [
													{
														"expression": {
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2156,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "10313:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2158,
																"indexExpression": {
																	"id": 2157,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2115,
																	"src": "10323:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10313:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10330:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10313:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2161,
														"nodeType": "ExpressionStatement",
														"src": "10313:18:9"
													}
												]
											},
											{
												"expression": {
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2163,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "10355:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2165,
														"indexExpression": {
															"id": 2164,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "10363:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10355:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2166,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2115,
														"src": "10374:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10355:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2168,
												"nodeType": "ExpressionStatement",
												"src": "10355:21:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10411:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10403:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2170,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10403:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10403:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2174,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "10415:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2175,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "10419:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2169,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "10394:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10394:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2177,
												"nodeType": "EmitStatement",
												"src": "10389:38:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10468:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10460:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2179,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10460:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10460:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2183,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "10472:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2184,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "10476:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10485:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2178,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2499,
														"src": "10440:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10440:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2187,
												"nodeType": "ExpressionStatement",
												"src": "10440:47:9"
											}
										]
									},
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "9225:322:9",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9562:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9576:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "9568:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9568:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9588:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "9580:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9580:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9567:29:9"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9614:0:9"
									},
									"scope": 2515,
									"src": "9553:942:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "10883:734:9",
										"statements": [
											{
												"assignments": [
													2196
												],
												"declarations": [
													{
														"constant": false,
														"id": 2196,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10902:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 2255,
														"src": "10894:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2195,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10894:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2201,
												"initialValue": {
													"arguments": [
														{
															"id": 2199,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "10925:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2197,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "10910:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$2515_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10917:7:9",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1734,
														"src": "10910:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10910:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10894:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2203,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "10967:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10982:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10974:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2204,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10974:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10974:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2208,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "10986:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10995:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2202,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2486,
														"src": "10946:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10946:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2211,
												"nodeType": "ExpressionStatement",
												"src": "10946:51:9"
											},
											{
												"expression": {
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2212,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "11102:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2215,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2192,
																"src": "11125:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2213,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "11110:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$2515_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11117:7:9",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1734,
															"src": "11110:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 2216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11110:23:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11102:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2218,
												"nodeType": "ExpressionStatement",
												"src": "11102:31:9"
											},
											{
												"expression": {
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11174:31:9",
													"subExpression": {
														"baseExpression": {
															"id": 2219,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "11181:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2221,
														"indexExpression": {
															"id": 2220,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "11197:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11181:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2223,
												"nodeType": "ExpressionStatement",
												"src": "11174:31:9"
											},
											{
												"id": 2230,
												"nodeType": "UncheckedBlock",
												"src": "11218:241:9",
												"statements": [
													{
														"expression": {
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2224,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "11426:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2226,
																"indexExpression": {
																	"id": 2225,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "11436:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11426:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11446:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11426:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2229,
														"nodeType": "ExpressionStatement",
														"src": "11426:21:9"
													}
												]
											},
											{
												"expression": {
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11469:23:9",
													"subExpression": {
														"baseExpression": {
															"id": 2231,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "11476:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2233,
														"indexExpression": {
															"id": 2232,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "11484:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11476:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2235,
												"nodeType": "ExpressionStatement",
												"src": "11469:23:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2237,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "11519:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11534:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11526:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2238,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11526:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11526:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "11538:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2236,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "11510:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11510:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2244,
												"nodeType": "EmitStatement",
												"src": "11505:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "11579:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11594:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11586:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2247,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11586:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11586:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2251,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "11598:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11607:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2245,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2499,
														"src": "11559:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11559:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2254,
												"nodeType": "ExpressionStatement",
												"src": "11559:50:9"
											}
										]
									},
									"documentation": {
										"id": 2190,
										"nodeType": "StructuredDocumentation",
										"src": "10503:325:9",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10843:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10857:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "10849:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10849:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10848:17:9"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10883:0:9"
									},
									"scope": 2515,
									"src": "10834:783:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2340,
										"nodeType": "Block",
										"src": "12067:1150:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2269,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2263,
																		"src": "12101:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2267,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2515,
																		"src": "12086:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$2515_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 2268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12093:7:9",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1734,
																	"src": "12086:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12086:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2271,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2259,
																"src": "12113:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12086:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12119:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 2266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12078:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12078:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2275,
												"nodeType": "ExpressionStatement",
												"src": "12078:81:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2277,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2261,
																"src": "12178:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12192:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12184:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2278,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12184:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12184:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12178:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12196:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 2276,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12170:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12170:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "12170:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2287,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "12269:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2288,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "12275:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2289,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "12279:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12288:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2286,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2486,
														"src": "12248:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12248:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2292,
												"nodeType": "ExpressionStatement",
												"src": "12248:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2296,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2263,
																		"src": "12408:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2294,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2515,
																		"src": "12393:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$2515_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12400:7:9",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1734,
																	"src": "12393:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12393:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2298,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2259,
																"src": "12420:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12393:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12426:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 2293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12385:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12385:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2302,
												"nodeType": "ExpressionStatement",
												"src": "12385:81:9"
											},
											{
												"expression": {
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "12531:31:9",
													"subExpression": {
														"baseExpression": {
															"id": 2303,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "12538:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2305,
														"indexExpression": {
															"id": 2304,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "12554:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12538:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2307,
												"nodeType": "ExpressionStatement",
												"src": "12531:31:9"
											},
											{
												"id": 2320,
												"nodeType": "UncheckedBlock",
												"src": "12575:504:9",
												"statements": [
													{
														"expression": {
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2308,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "13014:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2310,
																"indexExpression": {
																	"id": 2309,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2259,
																	"src": "13024:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13014:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13033:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "13014:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2313,
														"nodeType": "ExpressionStatement",
														"src": "13014:20:9"
													},
													{
														"expression": {
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2314,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "13049:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2316,
																"indexExpression": {
																	"id": 2315,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "13059:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "13049:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13066:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "13049:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2319,
														"nodeType": "ExpressionStatement",
														"src": "13049:18:9"
													}
												]
											},
											{
												"expression": {
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2321,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "13089:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2323,
														"indexExpression": {
															"id": 2322,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "13097:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13089:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2324,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "13108:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13089:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2326,
												"nodeType": "ExpressionStatement",
												"src": "13089:21:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2328,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "13137:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2329,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "13143:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2330,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "13147:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2327,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "13128:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13128:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2332,
												"nodeType": "EmitStatement",
												"src": "13123:32:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "13188:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "13194:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2336,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "13198:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13207:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2333,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2499,
														"src": "13168:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13168:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2339,
												"nodeType": "ExpressionStatement",
												"src": "13168:41:9"
											}
										]
									},
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "11625:323:9",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11963:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11991:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "11983:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11983:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12014:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "12006:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12006:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12035:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2341,
												"src": "12027:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12027:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11972:77:9"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12067:0:9"
									},
									"scope": 2515,
									"src": "11954:1263:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "13400:110:9",
										"statements": [
											{
												"expression": {
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2349,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "13411:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2351,
														"indexExpression": {
															"id": 2350,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "13427:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13411:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2352,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2344,
														"src": "13438:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13411:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2354,
												"nodeType": "ExpressionStatement",
												"src": "13411:29:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2358,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "13480:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2356,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2515,
																	"src": "13465:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$2515_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13472:7:9",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1734,
																"src": "13465:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13465:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2360,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2344,
															"src": "13490:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2361,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "13494:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2355,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "13456:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13456:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2363,
												"nodeType": "EmitStatement",
												"src": "13451:51:9"
											}
										]
									},
									"documentation": {
										"id": 2342,
										"nodeType": "StructuredDocumentation",
										"src": "13225:105:9",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "13345:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13362:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "13354:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13354:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13374:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "13366:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13366:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13353:29:9"
									},
									"returnParameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13400:0:9"
									},
									"scope": 2515,
									"src": "13336:174:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "13780:188:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2376,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "13799:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2377,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2370,
																"src": "13808:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13799:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13818:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 2375,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13791:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13791:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2381,
												"nodeType": "ExpressionStatement",
												"src": "13791:55:9"
											},
											{
												"expression": {
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2382,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "13857:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2385,
															"indexExpression": {
																"id": 2383,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "13876:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13857:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2386,
														"indexExpression": {
															"id": 2384,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "13883:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13857:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2387,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2372,
														"src": "13895:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13857:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2389,
												"nodeType": "ExpressionStatement",
												"src": "13857:46:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2391,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "13934:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2392,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "13941:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2393,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2372,
															"src": "13951:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2390,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "13919:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13919:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2395,
												"nodeType": "EmitStatement",
												"src": "13914:46:9"
											}
										]
									},
									"documentation": {
										"id": 2366,
										"nodeType": "StructuredDocumentation",
										"src": "13518:129:9",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 2397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13662:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13699:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "13691:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13691:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13723:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "13715:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13715:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13747:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "13742:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13742:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13680:82:9"
									},
									"returnParameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13780:0:9"
									},
									"scope": 2515,
									"src": "13653:315:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2410,
										"nodeType": "Block",
										"src": "14120:72:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2405,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2400,
																	"src": "14147:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2404,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2034,
																"src": "14139:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14139:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14157:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 2403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14131:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14131:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2409,
												"nodeType": "ExpressionStatement",
												"src": "14131:53:9"
											}
										]
									},
									"documentation": {
										"id": 2398,
										"nodeType": "StructuredDocumentation",
										"src": "13976:75:9",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 2411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "14066:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14089:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "14081:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14081:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14080:17:9"
									},
									"returnParameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14120:0:9"
									},
									"scope": 2515,
									"src": "14057:135:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2472,
										"nodeType": "Block",
										"src": "14916:693:9",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2425,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2416,
															"src": "14931:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14934:10:9",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "14931:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14931:15:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2470,
													"nodeType": "Block",
													"src": "15564:38:9",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15586:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2424,
															"id": 2469,
															"nodeType": "Return",
															"src": "15579:11:9"
														}
													]
												},
												"id": 2471,
												"nodeType": "IfStatement",
												"src": "14927:675:9",
												"trueBody": {
													"id": 2467,
													"nodeType": "Block",
													"src": "14948:610:9",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2447,
																		"nodeType": "Block",
																		"src": "15063:93:9",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2441,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2439,
																						"src": "15089:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2442,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 133,
																								"src": "15099:15:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2443,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15115:16:9",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 132,
																							"src": "15099:32:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2444,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15132:8:9",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15099:41:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15089:51:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 2424,
																				"id": 2446,
																				"nodeType": "Return",
																				"src": "15082:58:9"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2448,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2440,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2439,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "15055:6:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 2448,
																				"src": "15048:13:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2438,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15048:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15047:15:9"
																	},
																	"src": "15039:117:9"
																},
																{
																	"block": {
																		"id": 2464,
																		"nodeType": "Block",
																		"src": "15185:362:9",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2455,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2452,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2450,
																							"src": "15208:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2453,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15215:6:9",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15208:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2454,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15225:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15208:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2462,
																					"nodeType": "Block",
																					"src": "15337:195:9",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "15425:88:9",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "15463:2:9",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15467:6:9"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "15459:3:9"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15459:15:9"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15482:6:9"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "15476:5:9"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15476:13:9"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "15452:6:9"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "15452:38:9"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "15452:38:9"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 2450,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15467:6:9",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2450,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15482:6:9",
																									"valueSize": 1
																								}
																							],
																							"id": 2461,
																							"nodeType": "InlineAssembly",
																							"src": "15416:97:9"
																						}
																					]
																				},
																				"id": 2463,
																				"nodeType": "IfStatement",
																				"src": "15204:328:9",
																				"trueBody": {
																					"id": 2460,
																					"nodeType": "Block",
																					"src": "15228:103:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 2457,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15258:52:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 2456,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15251:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 2458,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15251:60:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2459,
																							"nodeType": "ExpressionStatement",
																							"src": "15251:60:9"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2465,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2451,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2450,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15177:6:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 2465,
																				"src": "15164:19:9",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2449,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15164:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15163:21:9"
																	},
																	"src": "15157:390:9"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2432,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "15004:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15004:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2434,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2414,
																		"src": "15018:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2435,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2418,
																		"src": "15024:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2436,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2420,
																		"src": "15033:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2429,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2416,
																				"src": "14983:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2428,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 133,
																			"src": "14967:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$133_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14967:19:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$133",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14987:16:9",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "14967:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14967:71:9",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2466,
															"nodeType": "TryStatement",
															"src": "14963:584:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2412,
										"nodeType": "StructuredDocumentation",
										"src": "14200:550:9",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 2473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "14765:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14806:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "14798:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14798:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14829:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "14821:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14821:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14850:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "14842:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14842:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14881:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "14868:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14868:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14787:105:9"
									},
									"returnParameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "14910:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2422,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14910:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14909:6:9"
									},
									"scope": 2515,
									"src": "14756:853:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2485,
										"nodeType": "Block",
										"src": "16498:2:9",
										"statements": []
									},
									"documentation": {
										"id": 2474,
										"nodeType": "StructuredDocumentation",
										"src": "15617:718:9",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "16350:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16389:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "16381:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16381:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16412:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "16404:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16404:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16433:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "16425:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16425:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16464:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "16456:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16456:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16370:110:9"
									},
									"returnParameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16498:0:9"
									},
									"scope": 2515,
									"src": "16341:159:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "17378:2:9",
										"statements": []
									},
									"documentation": {
										"id": 2487,
										"nodeType": "StructuredDocumentation",
										"src": "16508:708:9",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "17231:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17269:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "17261:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17261:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17292:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "17284:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17284:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "17313:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "17305:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17305:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "17344:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "17336:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17250:110:9"
									},
									"returnParameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17378:0:9"
									},
									"scope": 2515,
									"src": "17222:158:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2513,
										"nodeType": "Block",
										"src": "17939:47:9",
										"statements": [
											{
												"expression": {
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2507,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "17950:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2509,
														"indexExpression": {
															"id": 2508,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2502,
															"src": "17960:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17950:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2510,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "17972:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17950:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2512,
												"nodeType": "ExpressionStatement",
												"src": "17950:28:9"
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "17388:415:9",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 2514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "17872:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17905:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "17897:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17897:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17922:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "17914:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17914:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17896:33:9"
									},
									"returnParameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17939:0:9"
									},
									"scope": 2515,
									"src": "17863:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2516,
							"src": "823:17166:9",
							"usedErrors": []
						}
					],
					"src": "110:17881:9"
				},
				"id": 9
			}
		}
	}
}